{"version":3,"file":"usePageLeave.cjs","sources":["../../../../src/hooks/usePageLeave/usePageLeave.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { useEvent } from '../useEvent/useEvent';\n\n/**\n * @name usePageLeave\n * @description - Hook what calls given function when mouse leaves the page\n * @category Sensors\n *\n * @param {() => void} [callback] The callback function what calls then mouse leaves the page\n * @returns {boolean} A boolean which determines if the mouse left the page\n *\n * @example\n * const isLeft = usePageLeave(() => console.log('on leave'))\n */\nexport const usePageLeave = (callback?: () => void) => {\n  const [isLeft, setIsLeft] = useState(false);\n\n  const onMouse = useEvent(() => {\n    if (isLeft) return setIsLeft(false);\n    callback?.();\n    setIsLeft(true);\n  });\n\n  useEffect(() => {\n    document.addEventListener('mouseleave', onMouse, { passive: true });\n    document.addEventListener('mouseenter', onMouse, { passive: true });\n\n    return () => {\n      document.removeEventListener('mouseenter', onMouse);\n      document.removeEventListener('mouseleave', onMouse);\n    };\n  }, []);\n\n  return isLeft;\n};\n"],"names":["usePageLeave","callback","isLeft","setIsLeft","useState","onMouse","useEvent","useEffect"],"mappings":"+IAeaA,EAAgBC,GAA0B,CACrD,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAAS,EAAK,EAEpCC,EAAUC,EAAAA,SAAS,IAAM,CAC7B,GAAIJ,EAAQ,OAAOC,EAAU,EAAK,EAClCF,IAAA,EACAE,EAAU,EAAI,CAAA,CACf,EAEDI,OAAAA,EAAAA,UAAU,KACR,SAAS,iBAAiB,aAAcF,EAAS,CAAE,QAAS,GAAM,EAClE,SAAS,iBAAiB,aAAcA,EAAS,CAAE,QAAS,GAAM,EAE3D,IAAM,CACX,SAAS,oBAAoB,aAAcA,CAAO,EAClD,SAAS,oBAAoB,aAAcA,CAAO,CAAA,GAEnD,EAAE,EAEEH,CACT"}