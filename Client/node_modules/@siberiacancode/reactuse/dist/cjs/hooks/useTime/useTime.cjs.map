{"version":3,"file":"useTime.cjs","sources":["../../../../src/hooks/useTime/useTime.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { getDate } from '@/utils/helpers';\n\nexport interface UseTimeReturn {\n  /** The current day of the month (1-31) */\n  day: number;\n  /** The current hour in 24-hour format (0-23) */\n  hours: number;\n  /** The current hour in 12-hour format with meridiem type (AM/PM) */\n  meridiemHours: { value: number; type: string };\n  /** The current minute (0-59) */\n  minutes: number;\n  /** The current month (1-12) */\n  month: number;\n  /** The current second (0-59) */\n  seconds: number;\n  /** The current Unix timestamp in milliseconds */\n  timestamp: number;\n  /** The current year */\n  year: number;\n}\n\n/**\n * @name useTime\n * @description - Hook that gives you current time in different values\n * @category Time\n *\n * @returns {UseTimeReturn} An object containing the current time\n *\n * @example\n * const { seconds, minutes, hours, meridiemHours, day, month, year, timestamp } = useTime();\n */\nexport const useTime = (): UseTimeReturn => {\n  const [time, setTime] = useState(getDate());\n\n  useEffect(() => {\n    const timerId = setInterval(() => setTime(getDate()), 1000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  return time;\n};\n"],"names":["useTime","time","setTime","useState","getDate","useEffect","timerId"],"mappings":"sJAiCaA,EAAU,IAAqB,CAC1C,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAAA,SAASC,EAAAA,SAAS,EAE1CC,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAU,YAAY,IAAMJ,EAAQE,EAAAA,QAAA,CAAS,EAAG,GAAI,EAE1D,MAAO,IAAM,CACX,cAAcE,CAAO,CAAA,CACvB,EACC,EAAE,EAEEL,CACT"}