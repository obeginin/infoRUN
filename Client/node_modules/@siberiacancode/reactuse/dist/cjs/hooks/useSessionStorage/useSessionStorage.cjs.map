{"version":3,"file":"useSessionStorage.cjs","sources":["../../../../src/hooks/useSessionStorage/useSessionStorage.ts"],"sourcesContent":["import type { UseStorageInitialValue, UseStorageOptions } from '../useStorage/useStorage';\n\nimport { useStorage } from '../useStorage/useStorage';\n\n/**\n * @name useSessionStorage\n * @description - Hook that manages session storage value\n * @category State\n *\n * @browserapi sessionStorage https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage\n *\n * @template Value The type of the value\n * @param {string} key The key of the storage\n * @param {UseStorageInitialValue<Value>} [initialValue] The initial value of the storage\n * @param {UseStorageOptions<Value>} [options] The options of the storage\n *\n * @example\n * const { value, set, remove } = useSessionStorage('key', 'value');\n */\nexport const useSessionStorage = <Value>(\n  key: string,\n  initialValue?: UseStorageInitialValue<Value>,\n  options?: Omit<UseStorageOptions<Value>, 'initialValue' | 'storage'>\n) =>\n  useStorage(key, {\n    ...options,\n    initialValue,\n    storage: typeof window !== 'undefined' ? window.sessionStorage : undefined\n  });\n"],"names":["useSessionStorage","key","initialValue","options","useStorage"],"mappings":"gIAmBaA,EAAoB,CAC/BC,EACAC,EACAC,IAEAC,EAAAA,WAAWH,EAAK,CACd,GAAGE,EACH,aAAAD,EACA,QAAS,OAAO,OAAW,IAAc,OAAO,eAAiB,MACnE,CAAC"}