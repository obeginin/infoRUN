{"version":3,"file":"useBreakpoints.cjs","sources":["../../../../src/hooks/useBreakpoints/useBreakpoints.ts"],"sourcesContent":["import { useEffect } from 'react';\n\nimport { useRerender } from '../useRerender/useRerender';\n\n/** The breakpoints type */\nexport type Breakpoints<Breakpoint extends string = string> = Record<Breakpoint, number>;\n\n/** The use breakpoints strategy */\nexport type UseBreakpointsStrategy = 'desktop-first' | 'mobile-first';\n\nconst match = (query: string) => window.matchMedia(query).matches;\n\n/** The use breakpoints return type */\nexport type UseBreakpointsReturn<Breakpoint extends string = string> = {\n  /** The function that checks if the current breakpoint is greater than to the given breakpoint */\n  greater: (breakpoint: Breakpoint) => boolean;\n  /** The function that checks if the current breakpoint is greater than or equal to the given breakpoint */\n  greaterOrEqual: (breakpoint: Breakpoint) => boolean;\n  /** The function that checks if the current breakpoint is smaller than to the given breakpoint */\n  smaller: (breakpoint: Breakpoint) => boolean;\n  /** The function that checks if the current breakpoint is smaller than or equal to the given breakpoint */\n  smallerOrEqual: (breakpoint: Breakpoint) => boolean;\n  /** The function that checks if the current breakpoint is between to the given breakpoints */\n  between: (a: Breakpoint, b: Breakpoint) => boolean;\n  /** The function that checks if the current breakpoint is greater than to the given breakpoint */\n  isGreater: (breakpoint: Breakpoint) => boolean;\n  /** The function that checks if the current breakpoint is greater than or equal to the given breakpoint */\n  isGreaterOrEqual: (breakpoint: Breakpoint) => boolean;\n  /** The function that checks if the current breakpoint is smaller than to the given breakpoint */\n  isSmaller: (breakpoint: Breakpoint) => boolean;\n  /** The function that checks if the current breakpoint is smaller than or equal to the given breakpoint */\n  isSmallerOrEqual: (breakpoint: Breakpoint) => boolean;\n  /** The function that checks if the current breakpoint is between to the given breakpoints */\n  isInBetween: (a: Breakpoint, b: Breakpoint) => boolean;\n  /** The function that returns the current breakpoints */\n  current: () => Breakpoint[];\n  /** The function that returns the current active breakpoint */\n  active: () => Breakpoint;\n} & Record<Breakpoint, boolean>;\n\n/**\n * @name useBreakpoints\n * @description - Hook that manages breakpoints\n * @category Browser\n *\n * @template {string} Breakpoint The name of the breakpoint\n * @param {Breakpoints<Breakpoint>} breakpoints The breakpoints to use\n * @param {UseBreakpointsStrategy} [strategy=min-width] The strategy to use for matching\n * @returns {UseBreakpointsReturn<Breakpoint>} An object containing the current breakpoint\n *\n * @example\n * const { greaterOrEqual, smallerOrEqual, current } = useBreakpoints({ mobile: 0, tablet: 640, laptop: 1024, desktop: 1280 });\n */\nexport const useBreakpoints = <Breakpoint extends string>(\n  breakpoints: Breakpoints<Breakpoint>,\n  strategy: UseBreakpointsStrategy = 'mobile-first'\n): UseBreakpointsReturn<Breakpoint> => {\n  const rerender = useRerender();\n\n  const getValue = (breakpoint: Breakpoint, delta?: number) => {\n    if (delta) return `${Number(breakpoints[breakpoint]) + delta}px`;\n    return `${breakpoints[breakpoint]}px`;\n  };\n\n  useEffect(() => {\n    const onResize = () => rerender();\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, []);\n\n  const greaterOrEqual = (breakpoint: Breakpoint) => match(`(min-width: ${getValue(breakpoint)})`);\n  const smallerOrEqual = (breakpoint: Breakpoint) => match(`(max-width: ${getValue(breakpoint)})`);\n  const current = () =>\n    Object.keys(breakpoints)\n      .map((breakpoint) => [breakpoint, greaterOrEqual(breakpoint as Breakpoint)])\n      .filter(([, value]) => value)\n      .map(([breakpoint]) => breakpoint) as Breakpoint[];\n  const active = () => {\n    const breakpoints = current();\n    return (breakpoints.length ? breakpoints.at(-1) : undefined) as Breakpoint;\n  };\n\n  const greater = (breakpoint: Breakpoint) => match(`(min-width: ${getValue(breakpoint, 0.1)})`);\n  const smaller = (breakpoint: Breakpoint) => match(`(max-width: ${getValue(breakpoint, -0.1)})`);\n  const between = (a: Breakpoint, b: Breakpoint) =>\n    match(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`);\n\n  const breakpointsKeys = (Object.keys(breakpoints) as Breakpoint[]).reduce(\n    (acc, breakpoint) => {\n      const value =\n        strategy === 'mobile-first' ? greaterOrEqual(breakpoint) : smallerOrEqual(breakpoint);\n      acc[breakpoint] = value;\n      return acc;\n    },\n    {} as Record<Breakpoint, boolean>\n  );\n\n  return {\n    current,\n    greaterOrEqual,\n    smallerOrEqual,\n    active,\n    greater,\n    smaller,\n    between,\n    isGreater: greater,\n    isGreaterOrEqual: greaterOrEqual,\n    isSmaller: smaller,\n    isSmallerOrEqual: smallerOrEqual,\n    isInBetween: between,\n    ...breakpointsKeys\n  };\n};\n\n/** Breakpoints from Material UI */\nexport const BREAKPOINTS_MATERIAL_UI = {\n  xs: 0,\n  sm: 600,\n  md: 900,\n  lg: 1200,\n  xl: 1536\n};\n\n/** Breakpoints from Mantine */\nexport const BREAKPOINTS_MANTINE = {\n  xs: 576,\n  sm: 768,\n  md: 992,\n  lg: 1200,\n  xl: 1408\n};\n\n/** Breakpoints from Tailwind */\nexport const BREAKPOINTS_TAILWIND = {\n  sm: 640,\n  md: 768,\n  lg: 1024,\n  xl: 1280,\n  '2xl': 1536\n};\n\n/**  Breakpoints from Bootstrap V5 */\nexport const BREAKPOINTS_BOOTSTRAP_V5 = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n};\n\n/** Breakpoints from Ant Design */\nexport const BREAKPOINTS_ANT_DESIGN = {\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600\n};\n\n/** Breakpoints from Quasar V2 */\nexport const BREAKPOINTS_QUASAR_V2 = {\n  xs: 0,\n  sm: 600,\n  md: 1024,\n  lg: 1440,\n  xl: 1920\n};\n\n/** Sematic Breakpoints */\nexport const BREAKPOINTS_SEMANTIC = {\n  mobileS: 320,\n  mobileM: 375,\n  mobileL: 425,\n  tablet: 768,\n  laptop: 1024,\n  laptopL: 1440,\n  desktop4K: 2560\n};\n\n/**  Breakpoints from Master CSS  */\nexport const BREAKPOINTS_MASTER_CSS = {\n  '3xs': 360,\n  '2xs': 480,\n  xs: 600,\n  sm: 768,\n  md: 1024,\n  lg: 1280,\n  xl: 1440,\n  '2xl': 1600,\n  '3xl': 1920,\n  '4xl': 2560\n};\n\n/** Breakpoints from PrimeFlex */\nexport const BREAKPOINTS_PRIME_FLEX = {\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n};\n"],"names":["match","query","useBreakpoints","breakpoints","strategy","rerender","useRerender","getValue","breakpoint","delta","useEffect","onResize","greaterOrEqual","smallerOrEqual","current","value","active","greater","smaller","between","a","b","breakpointsKeys","acc","BREAKPOINTS_MATERIAL_UI","BREAKPOINTS_MANTINE","BREAKPOINTS_TAILWIND","BREAKPOINTS_BOOTSTRAP_V5","BREAKPOINTS_ANT_DESIGN","BREAKPOINTS_QUASAR_V2","BREAKPOINTS_SEMANTIC","BREAKPOINTS_MASTER_CSS","BREAKPOINTS_PRIME_FLEX"],"mappings":"qJAUMA,EAASC,GAAkB,OAAO,WAAWA,CAAK,EAAE,QA2C7CC,EAAiB,CAC5BC,EACAC,EAAmC,iBACE,CACrC,MAAMC,EAAWC,EAAAA,YAAA,EAEXC,EAAW,CAACC,EAAwBC,IACpCA,EAAc,GAAG,OAAON,EAAYK,CAAU,CAAC,EAAIC,CAAK,KACrD,GAAGN,EAAYK,CAAU,CAAC,KAGnCE,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAW,IAAMN,EAAA,EACvB,cAAO,iBAAiB,SAAUM,CAAQ,EACnC,IAAM,CACX,OAAO,oBAAoB,SAAUA,CAAQ,CAAA,CAC/C,EACC,EAAE,EAEL,MAAMC,EAAkBJ,GAA2BR,EAAM,eAAeO,EAASC,CAAU,CAAC,GAAG,EACzFK,EAAkBL,GAA2BR,EAAM,eAAeO,EAASC,CAAU,CAAC,GAAG,EACzFM,EAAU,IACd,OAAO,KAAKX,CAAW,EACpB,IAAKK,GAAe,CAACA,EAAYI,EAAeJ,CAAwB,CAAC,CAAC,EAC1E,OAAO,CAAC,CAAA,CAAGO,CAAK,IAAMA,CAAK,EAC3B,IAAI,CAAC,CAACP,CAAU,IAAMA,CAAU,EAC/BQ,EAAS,IAAM,CACnB,MAAMb,EAAcW,EAAA,EACpB,OAAQX,EAAY,OAASA,EAAY,GAAG,EAAE,EAAI,MAAA,EAG9Cc,EAAWT,GAA2BR,EAAM,eAAeO,EAASC,EAAY,EAAG,CAAC,GAAG,EACvFU,EAAWV,GAA2BR,EAAM,eAAeO,EAASC,EAAY,GAAI,CAAC,GAAG,EACxFW,EAAU,CAACC,EAAeC,IAC9BrB,EAAM,eAAeO,EAASa,CAAC,CAAC,qBAAqBb,EAASc,EAAG,GAAI,CAAC,GAAG,EAErEC,EAAmB,OAAO,KAAKnB,CAAW,EAAmB,OACjE,CAACoB,EAAKf,IAAe,CACnB,MAAMO,EACJX,IAAa,eAAiBQ,EAAeJ,CAAU,EAAIK,EAAeL,CAAU,EACtF,OAAAe,EAAIf,CAAU,EAAIO,EACXQ,CAAA,EAET,CAAA,CAAC,EAGH,MAAO,CACL,QAAAT,EACA,eAAAF,EACA,eAAAC,EACA,OAAAG,EACA,QAAAC,EACA,QAAAC,EACA,QAAAC,EACA,UAAWF,EACX,iBAAkBL,EAClB,UAAWM,EACX,iBAAkBL,EAClB,YAAaM,EACb,GAAGG,CAAA,CAEP,EAGaE,EAA0B,CACrC,GAAI,EACJ,GAAI,IACJ,GAAI,IACJ,GAAI,KACJ,GAAI,IACN,EAGaC,EAAsB,CACjC,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,KACJ,GAAI,IACN,EAGaC,EAAuB,CAClC,GAAI,IACJ,GAAI,IACJ,GAAI,KACJ,GAAI,KACJ,MAAO,IACT,EAGaC,EAA2B,CACtC,GAAI,EACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,KACJ,IAAK,IACP,EAGaC,EAAyB,CACpC,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,KACJ,IAAK,IACP,EAGaC,EAAwB,CACnC,GAAI,EACJ,GAAI,IACJ,GAAI,KACJ,GAAI,KACJ,GAAI,IACN,EAGaC,EAAuB,CAClC,QAAS,IACT,QAAS,IACT,QAAS,IACT,OAAQ,IACR,OAAQ,KACR,QAAS,KACT,UAAW,IACb,EAGaC,EAAyB,CACpC,MAAO,IACP,MAAO,IACP,GAAI,IACJ,GAAI,IACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,MAAO,KACP,MAAO,KACP,MAAO,IACT,EAGaC,EAAyB,CACpC,GAAI,IACJ,GAAI,IACJ,GAAI,IACJ,GAAI,IACN"}