{"version":3,"file":"useActiveElement.cjs","sources":["../../../../src/hooks/useActiveElement/useActiveElement.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\nexport interface UseActiveElement {\n  (): HTMLElement | null;\n\n  <Target extends Element, ActiveElement extends HTMLElement = HTMLElement>(\n    target?: never\n  ): {\n    ref: StateRef<Target>;\n    value: ActiveElement | null;\n  };\n\n  <ActiveElement extends HTMLElement = HTMLElement>(target: HookTarget): ActiveElement | null;\n}\n\n/**\n * @name useActiveElement\n * @description - Hook that returns the active element\n * @category Elements\n *\n * @overload\n * @param {HookTarget} [target=window] The target element to observe active element changes\n * @returns {ActiveElement | null} The active element\n *\n * @example\n * const activeElement = useActiveElement(ref);\n *\n * @overload\n * @template ActiveElement The active element type\n * @returns {{ ref: StateRef<Element>; activeElement: ActiveElement | null }} An object containing the ref and active element\n *\n * @example\n * const { ref, value } = useActiveElement();\n *\n * @see {@link https://siberiacancode.github.io/reactuse/functions/hooks/useActiveElement.html}\n */\nexport const useActiveElement = ((...params: any[]) => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n\n  const [value, setValue] = useState<HTMLElement | null>(null);\n  const internalRef = useRefState(window);\n\n  useEffect(() => {\n    const element = (target ? getElement(target) : internalRef.current) as Element;\n\n    if (!element) return;\n\n    const observer = new MutationObserver((mutations) => {\n      mutations\n        .filter((mutation) => mutation.removedNodes.length)\n        .map((mutation) => Array.from(mutation.removedNodes))\n        .flat()\n        .forEach((node) => {\n          setValue((prevActiveElement) => {\n            if (node === prevActiveElement) return document.activeElement as HTMLElement | null;\n            return prevActiveElement;\n          });\n        });\n    });\n\n    observer.observe(element, {\n      childList: true,\n      subtree: true\n    });\n\n    const onActiveElementChange = () => setValue(document?.activeElement as HTMLElement | null);\n\n    element.addEventListener('focus', onActiveElementChange, true);\n    element.addEventListener('blur', onActiveElementChange, true);\n\n    return () => {\n      observer.disconnect();\n      element.removeEventListener('focus', onActiveElementChange, true);\n      element.removeEventListener('blur', onActiveElementChange, true);\n    };\n  }, [target, internalRef.state]);\n\n  if (target) return value;\n  return {\n    ref: internalRef,\n    value\n  };\n}) as UseActiveElement;\n"],"names":["useActiveElement","params","target","isTarget","value","setValue","useState","internalRef","useRefState","useEffect","element","getElement","observer","mutations","mutation","node","prevActiveElement","onActiveElementChange"],"mappings":"mPA4CaA,EAAoB,IAAIC,IAAkB,CACrD,MAAMC,EAAUC,EAAAA,SAASF,EAAO,CAAC,CAAC,EAAIA,EAAO,CAAC,EAAI,OAE5C,CAACG,EAAOC,CAAQ,EAAIC,EAAAA,SAA6B,IAAI,EACrDC,EAAcC,EAAAA,YAAY,MAAM,EAqCtC,OAnCAC,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAWR,EAASS,EAAAA,WAAWT,CAAM,EAAIK,EAAY,QAE3D,GAAI,CAACG,EAAS,OAEd,MAAME,EAAW,IAAI,iBAAkBC,GAAc,CACnDA,EACG,OAAQC,GAAaA,EAAS,aAAa,MAAM,EACjD,IAAKA,GAAa,MAAM,KAAKA,EAAS,YAAY,CAAC,EACnD,OACA,QAASC,GAAS,CACjBV,EAAUW,GACJD,IAASC,EAA0B,SAAS,cACzCA,CACR,CAAA,CACF,CAAA,CACJ,EAEDJ,EAAS,QAAQF,EAAS,CACxB,UAAW,GACX,QAAS,EAAA,CACV,EAED,MAAMO,EAAwB,IAAMZ,EAAS,UAAU,aAAmC,EAE1F,OAAAK,EAAQ,iBAAiB,QAASO,EAAuB,EAAI,EAC7DP,EAAQ,iBAAiB,OAAQO,EAAuB,EAAI,EAErD,IAAM,CACXL,EAAS,WAAA,EACTF,EAAQ,oBAAoB,QAASO,EAAuB,EAAI,EAChEP,EAAQ,oBAAoB,OAAQO,EAAuB,EAAI,CAAA,CACjE,EACC,CAACf,EAAQK,EAAY,KAAK,CAAC,EAE1BL,EAAeE,EACZ,CACL,IAAKG,EACL,MAAAH,CAAA,CAEJ"}