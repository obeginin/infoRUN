{"version":3,"file":"useLongPress.cjs","sources":["../../../../src/hooks/useLongPress/useLongPress.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\nexport type LongPressEvents = MouseEvent | TouchEvent;\n\n// * The use long press options type */\nexport interface UseLongPressOptions {\n  // * The threshold time in milliseconds\n  threshold?: number;\n  // * The callback function to be invoked on long press cancel\n  onCancel?: (event: LongPressEvents) => void;\n  // * The callback function to be invoked on long press end\n  onFinish?: (event: LongPressEvents) => void;\n  // * The callback function to be invoked on long press start\n  onStart?: (event: LongPressEvents) => void;\n}\n\nexport interface UseLongPress {\n  (\n    target: HookTarget,\n    callback: (event: LongPressEvents) => void,\n    options?: UseLongPressOptions\n  ): boolean;\n\n  <Target extends Element>(\n    callback: (event: LongPressEvents) => void,\n    options?: UseLongPressOptions,\n    target?: never\n  ): {\n    ref: StateRef<Target>;\n    pressed: boolean;\n  };\n}\n\nconst DEFAULT_THRESHOLD_TIME = 400;\n\n/**\n * @name useLongPress\n * @description - Hook that defines the logic when long pressing an element\n * @category Elements\n *\n * @overload\n * @param {HookTarget} target The target element to be long pressed\n * @param {(event: LongPressEvents) => void} callback The callback function to be invoked on long press\n * @param {UseLongPressOptions} [options] The options for the long press\n * @returns {boolean} The long pressing state\n *\n * @example\n * const pressed = useLongPress(ref, () => console.log('callback'));\n *\n * @overload\n * @template Target The target element\n * @param {(event: LongPressEvents) => void} callback The callback function to be invoked on long press\n * @param {UseLongPressOptions} [options] The options for the long press\n * @returns {boolean} The long pressing state\n *\n * @example\n * const { ref, pressed } = useLongPress(() => console.log('callback'));\n */\nexport const useLongPress = ((...params: any[]): any => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n  const callback = (target ? params[1] : params[0]) as (event: LongPressEvents) => void;\n  const options = (target ? params[2] : params[1]) as UseLongPressOptions | undefined;\n\n  const [pressed, setPressed] = useState(false);\n  const timeoutIdRef = useRef<ReturnType<typeof setTimeout>>(undefined);\n  const isPressedRef = useRef(false);\n  const internalRef = useRefState<Element>();\n\n  const internalCallbackRef = useRef(callback);\n  internalCallbackRef.current = callback;\n  const internalOptionsRef = useRef(options);\n  internalOptionsRef.current = options;\n\n  useEffect(() => {\n    if (!target && !internalRef.state) return;\n\n    const element = target ? getElement(target) : internalRef.current;\n    if (!element) return;\n\n    const onStart = (event: LongPressEvents) => {\n      internalOptionsRef.current?.onStart?.(event);\n\n      isPressedRef.current = true;\n      timeoutIdRef.current = setTimeout(() => {\n        internalCallbackRef.current(event);\n        setPressed(true);\n      }, internalOptionsRef.current?.threshold ?? DEFAULT_THRESHOLD_TIME);\n    };\n\n    const onCancel = (event: LongPressEvents) => {\n      setPressed((prevPressed) => {\n        if (prevPressed) {\n          internalOptionsRef.current?.onFinish?.(event);\n        } else if (isPressedRef.current) {\n          internalOptionsRef.current?.onCancel?.(event);\n        }\n\n        return false;\n      });\n\n      isPressedRef.current = false;\n      if (timeoutIdRef.current) clearTimeout(timeoutIdRef.current);\n    };\n\n    element.addEventListener('mousedown', onStart as EventListener);\n    element.addEventListener('touchstart', onStart as EventListener);\n    element.addEventListener('mouseup', onCancel as EventListener);\n    element.addEventListener('touchend', onCancel as EventListener);\n    window.addEventListener('mouseup', onCancel as EventListener);\n    window.addEventListener('touchend', onCancel as EventListener);\n\n    return () => {\n      element.removeEventListener('mousedown', onStart as EventListener);\n      element.removeEventListener('touchstart', onStart as EventListener);\n      element.removeEventListener('mouseup', onCancel as EventListener);\n      element.removeEventListener('touchend', onCancel as EventListener);\n      window.removeEventListener('mouseup', onCancel as EventListener);\n      window.removeEventListener('touchend', onCancel as EventListener);\n\n      if (timeoutIdRef.current) clearTimeout(timeoutIdRef.current);\n    };\n  }, [target, internalRef.state]);\n\n  if (target) return pressed;\n  return {\n    ref: internalRef,\n    pressed\n  };\n}) as UseLongPress;\n"],"names":["DEFAULT_THRESHOLD_TIME","useLongPress","params","target","isTarget","callback","options","pressed","setPressed","useState","timeoutIdRef","useRef","isPressedRef","internalRef","useRefState","internalCallbackRef","internalOptionsRef","useEffect","element","getElement","onStart","event","onCancel","prevPressed"],"mappings":"mPAyCMA,EAAyB,IAyBlBC,EAAgB,IAAIC,IAAuB,CACtD,MAAMC,EAAUC,EAAAA,SAASF,EAAO,CAAC,CAAC,EAAIA,EAAO,CAAC,EAAI,OAC5CG,EAAYF,EAASD,EAAO,CAAC,EAAIA,EAAO,CAAC,EACzCI,EAAWH,EAASD,EAAO,CAAC,EAAIA,EAAO,CAAC,EAExC,CAACK,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtCC,EAAeC,EAAAA,OAAsC,MAAS,EAC9DC,EAAeD,EAAAA,OAAO,EAAK,EAC3BE,EAAcC,EAAAA,YAAA,EAEdC,EAAsBJ,EAAAA,OAAON,CAAQ,EAC3CU,EAAoB,QAAUV,EAC9B,MAAMW,EAAqBL,EAAAA,OAAOL,CAAO,EAqDzC,OApDAU,EAAmB,QAAUV,EAE7BW,EAAAA,UAAU,IAAM,CACd,GAAI,CAACd,GAAU,CAACU,EAAY,MAAO,OAEnC,MAAMK,EAAUf,EAASgB,EAAAA,WAAWhB,CAAM,EAAIU,EAAY,QAC1D,GAAI,CAACK,EAAS,OAEd,MAAME,EAAWC,GAA2B,CAC1CL,EAAmB,SAAS,UAAUK,CAAK,EAE3CT,EAAa,QAAU,GACvBF,EAAa,QAAU,WAAW,IAAM,CACtCK,EAAoB,QAAQM,CAAK,EACjCb,EAAW,EAAI,CAAA,EACdQ,EAAmB,SAAS,WAAahB,CAAsB,CAAA,EAG9DsB,EAAYD,GAA2B,CAC3Cb,EAAYe,IACNA,EACFP,EAAmB,SAAS,WAAWK,CAAK,EACnCT,EAAa,SACtBI,EAAmB,SAAS,WAAWK,CAAK,EAGvC,GACR,EAEDT,EAAa,QAAU,GACnBF,EAAa,SAAS,aAAaA,EAAa,OAAO,CAAA,EAG7D,OAAAQ,EAAQ,iBAAiB,YAAaE,CAAwB,EAC9DF,EAAQ,iBAAiB,aAAcE,CAAwB,EAC/DF,EAAQ,iBAAiB,UAAWI,CAAyB,EAC7DJ,EAAQ,iBAAiB,WAAYI,CAAyB,EAC9D,OAAO,iBAAiB,UAAWA,CAAyB,EAC5D,OAAO,iBAAiB,WAAYA,CAAyB,EAEtD,IAAM,CACXJ,EAAQ,oBAAoB,YAAaE,CAAwB,EACjEF,EAAQ,oBAAoB,aAAcE,CAAwB,EAClEF,EAAQ,oBAAoB,UAAWI,CAAyB,EAChEJ,EAAQ,oBAAoB,WAAYI,CAAyB,EACjE,OAAO,oBAAoB,UAAWA,CAAyB,EAC/D,OAAO,oBAAoB,WAAYA,CAAyB,EAE5DZ,EAAa,SAAS,aAAaA,EAAa,OAAO,CAAA,CAC7D,EACC,CAACP,EAAQU,EAAY,KAAK,CAAC,EAE1BV,EAAeI,EACZ,CACL,IAAKM,EACL,QAAAN,CAAA,CAEJ"}