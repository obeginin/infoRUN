{"version":3,"file":"useTextSelection.cjs","sources":["../../../../src/hooks/useTextSelection/useTextSelection.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { useRerender } from '../useRerender/useRerender';\n\nexport const getRangesSelection = (selection: Selection) => {\n  const rangeCount = selection.rangeCount ?? 0;\n  return Array.from({ length: rangeCount }, (_, i) => selection.getRangeAt(i));\n};\n\n/** The use text selection return type */\nexport interface UseTextSelectionReturn {\n  /** The current selection ranges */\n  ranges: Range[];\n  /** The current selection rects */\n  rects: DOMRect[];\n  /** The current selection */\n  selection: Selection | null;\n  /** The current selection text */\n  text: string;\n}\n\n/**\n * @name useTextSelection\n * @description - Hook that manages the text selection\n * @category Sensors\n *\n * @browserapi document.getSelection https://developer.mozilla.org/en-US/docs/Web/API/Document/getSelection\n *\n * @returns {UseTextSelectionReturn} An object containing the current text selection\n *\n * @example\n * const selection = useTextSelection();\n */\nexport const useTextSelection = (): UseTextSelectionReturn => {\n  const rerender = useRerender();\n  const [selection, setSelection] = useState<Selection | null>(\n    typeof document !== 'undefined' ? document.getSelection() : null\n  );\n\n  useEffect(() => {\n    const onSelectionChange = () => {\n      setSelection(document.getSelection());\n      rerender();\n    };\n\n    document.addEventListener('selectionchange', onSelectionChange);\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, []);\n\n  const text = selection?.toString() ?? '';\n  const ranges = selection ? getRangesSelection(selection) : [];\n  const rects = ranges.map((range) => range.getBoundingClientRect());\n\n  return {\n    text,\n    ranges,\n    rects,\n    selection\n  };\n};\n"],"names":["getRangesSelection","selection","rangeCount","_","i","useTextSelection","rerender","useRerender","setSelection","useState","useEffect","onSelectionChange","text","ranges","rects","range"],"mappings":"qJAIaA,EAAsBC,GAAyB,CAC1D,MAAMC,EAAaD,EAAU,YAAc,EAC3C,OAAO,MAAM,KAAK,CAAE,OAAQC,CAAA,EAAc,CAACC,EAAGC,IAAMH,EAAU,WAAWG,CAAC,CAAC,CAC7E,EA0BaC,EAAmB,IAA8B,CAC5D,MAAMC,EAAWC,EAAAA,YAAA,EACX,CAACN,EAAWO,CAAY,EAAIC,EAAAA,SAChC,OAAO,SAAa,IAAc,SAAS,eAAiB,IAAA,EAG9DC,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAoB,IAAM,CAC9BH,EAAa,SAAS,cAAc,EACpCF,EAAA,CAAS,EAGX,gBAAS,iBAAiB,kBAAmBK,CAAiB,EACvD,IAAM,SAAS,oBAAoB,kBAAmBA,CAAiB,CAAA,EAC7E,EAAE,EAEL,MAAMC,EAAOX,GAAW,SAAA,GAAc,GAChCY,EAASZ,EAAYD,EAAmBC,CAAS,EAAI,CAAA,EACrDa,EAAQD,EAAO,IAAKE,GAAUA,EAAM,uBAAuB,EAEjE,MAAO,CACL,KAAAH,EACA,OAAAC,EACA,MAAAC,EACA,UAAAb,CAAA,CAEJ"}