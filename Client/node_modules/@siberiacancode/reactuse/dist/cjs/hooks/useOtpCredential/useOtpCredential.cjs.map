{"version":3,"file":"useOtpCredential.cjs","sources":["../../../../src/hooks/useOtpCredential/useOtpCredential.ts"],"sourcesContent":["import { useRef, useState } from 'react';\n\ndeclare global {\n  interface OTPOptions {\n    readonly transport: string[];\n  }\n\n  interface CredentialRequestOptions {\n    readonly otp: OTPOptions;\n  }\n\n  interface Credential {\n    readonly code: string;\n  }\n}\n\n/* The use otp credential callback type */\nexport type UseOtpCredentialCallback = (otp: Credential | null) => void;\n\n/* The use otp credential options type */\nexport interface UseOtpCredentialParams {\n  /* The callback function to be invoked on error */\n  onError: (error: any) => void;\n  /* The callback function to be invoked on success */\n  onSuccess: (credential: Credential | null) => void;\n}\n\n/* The use otp credential return type */\nexport interface UseOtpCredentialReturn {\n  /* The abort function */\n  abort: AbortController['abort'];\n  /*  The aborted state of the query */\n  aborted: boolean;\n  /* The supported state of the otp credential */\n  supported: boolean;\n  /* The get otp credential function */\n  get: () => Promise<Credential | null>;\n}\n\nexport interface UseOtpCredential {\n  (callback?: UseOtpCredentialCallback): UseOtpCredentialReturn;\n\n  (params?: UseOtpCredentialParams): UseOtpCredentialReturn;\n}\n\n/**\n * @name useOtpCredential\n * @description - Hook that creates an otp credential\n * @category Browser\n *\n * @browserapi navigator.credentials https://developer.mozilla.org/en-US/docs/Web/API/Navigator/credentials\n *\n * @overload\n * @param {UseOtpCredentialCallback} callback The callback function to be invoked\n * @returns {UseOtpCredentialReturn}\n *\n * @example\n * useOtpCredential((credential) => console.log(credential));\n *\n * @overload\n * @param {UseOtpCredentialCallback} params.onSuccess The callback function to be invoked on success\n * @param {UseOtpCredentialCallback} params.onError The callback function to be invoked on error\n * @returns {UseOtpCredentialReturn}\n *\n * @example\n * useOtpCredential({ onSuccess: (credential) => console.log(credential), onError: (error) => console.log(error) });\n */\nexport const useOtpCredential = ((...params: any[]) => {\n  const onSuccess =\n    typeof params[0] === 'function'\n      ? (params[0] as UseOtpCredentialCallback | undefined)\n      : (params[0] as UseOtpCredentialParams | undefined)?.onSuccess;\n\n  const onError =\n    typeof params[0] === 'function'\n      ? (params[0] as UseOtpCredentialParams | undefined)?.onError\n      : undefined;\n\n  const supported = typeof navigator !== 'undefined' && 'OTPCredential' in window;\n  const [aborted, setAborted] = useState(false);\n\n  const abortControllerRef = useRef<AbortController>(new AbortController());\n\n  const get = async () => {\n    if (!supported) return;\n\n    abortControllerRef.current = new AbortController();\n    try {\n      const credential = await navigator.credentials.get({\n        otp: { transport: ['sms'] },\n        signal: abortControllerRef.current.signal\n      });\n      onSuccess?.(credential);\n      setAborted(false);\n      return credential;\n    } catch (error) {\n      onError?.(error);\n    }\n  };\n\n  const abort = () => {\n    abortControllerRef.current.abort();\n    abortControllerRef.current = new AbortController();\n    abortControllerRef.current.signal.onabort = () => setAborted(true);\n  };\n\n  return { supported, abort, aborted, get };\n}) as UseOtpCredential;\n"],"names":["useOtpCredential","params","onSuccess","onError","supported","aborted","setAborted","useState","abortControllerRef","useRef","credential","error"],"mappings":"yGAmEaA,EAAoB,IAAIC,IAAkB,CACrD,MAAMC,EACJ,OAAOD,EAAO,CAAC,GAAM,WAChBA,EAAO,CAAC,EACRA,EAAO,CAAC,GAA0C,UAEnDE,EACJ,OAAOF,EAAO,CAAC,GAAM,WAChBA,EAAO,CAAC,GAA0C,QACnD,OAEAG,EAAY,OAAO,UAAc,KAAe,kBAAmB,OACnE,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EAEtCC,EAAqBC,EAAAA,OAAwB,IAAI,eAAiB,EAyBxE,MAAO,CAAE,UAAAL,EAAW,MANN,IAAM,CAClBI,EAAmB,QAAQ,MAAA,EAC3BA,EAAmB,QAAU,IAAI,gBACjCA,EAAmB,QAAQ,OAAO,QAAU,IAAMF,EAAW,EAAI,CAAA,EAGxC,QAAAD,EAAS,IAvBxB,SAAY,CACtB,GAAKD,EAEL,CAAAI,EAAmB,QAAU,IAAI,gBACjC,GAAI,CACF,MAAME,EAAa,MAAM,UAAU,YAAY,IAAI,CACjD,IAAK,CAAE,UAAW,CAAC,KAAK,CAAA,EACxB,OAAQF,EAAmB,QAAQ,MAAA,CACpC,EACD,OAAAN,IAAYQ,CAAU,EACtBJ,EAAW,EAAK,EACTI,CAAA,OACAC,EAAO,CACdR,IAAUQ,CAAK,CAAA,EACjB,CASkC,CACtC"}