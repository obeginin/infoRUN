{"version":3,"file":"useResizeObserver.cjs","sources":["../../../../src/hooks/useResizeObserver/useResizeObserver.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\n/** The resize observer options type */\nexport interface UseResizeObserverOptions extends ResizeObserverOptions {\n  /** The enabled state */\n  enabled?: boolean;\n  /** The resize observer callback */\n  onChange?: (entries: ResizeObserverEntry[], observer: ResizeObserver) => void;\n}\n\n/** The resize observer return type */\nexport interface UseResizeObserverReturn {\n  /** The resize observer entries */\n  entries: ResizeObserverEntry[];\n}\n\nexport interface UseResizeObserver {\n  (target: HookTarget, options?: UseResizeObserverOptions): UseResizeObserverReturn;\n\n  <Target extends Element>(\n    options?: UseResizeObserverOptions,\n    target?: never\n  ): UseResizeObserverReturn & { ref: StateRef<Target> };\n}\n\n/**\n *  @name useResizeObserver\n *  @description - Hook that gives you resize observer state\n *  @category Sensors\n *\n *  @browserapi ResizeObserver https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n *\n *  @overload\n *  @template Target The target element\n *  @param {boolean} [options.enabled=true] The IntersectionObserver options\n *  @param {boolean} [options.box] The IntersectionObserver options\n *  @param {(entries: ResizeObserverEntry[], observer: ResizeObserver) => void} [options.onChange] The callback to execute when resize is detected\n *  @returns {UseResizeObserverReturn & { ref: StateRef<Target> }} An object containing the resize observer state\n *\n *  @example\n *  const { ref, entries } = useResizeObserver();\n *\n *  @overload\n *  @template Target The target element\n *  @param {HookTarget} target The target element to observe\n *  @param {boolean} [options.enabled=true] The IntersectionObserver options\n *  @param {boolean} [options.box] The IntersectionObserver options\n *  @param {(entries: ResizeObserverEntry[], observer: ResizeObserver) => void} [options.onChange] The callback to execute when resize is detected\n *  @returns {UseResizeObserverReturn} An object containing the resize observer state\n *\n *  @example\n *  const { entries } = useResizeObserver(ref);\n */\nexport const useResizeObserver = ((...params: any[]) => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n  const options = (target ? params[1] : params[0]) as UseResizeObserverOptions | undefined;\n  const enabled = options?.enabled ?? true;\n\n  const [entries, setEntries] = useState<ResizeObserverEntry[]>([]);\n\n  const internalRef = useRefState<Element>();\n  const internalOnChangeRef = useRef<UseResizeObserverOptions['onChange']>(options?.onChange);\n  internalOnChangeRef.current = options?.onChange;\n\n  useEffect(() => {\n    if (!enabled || (!target && !internalRef.state)) return;\n\n    const element = target ? getElement(target) : internalRef.current;\n    if (!element) return;\n\n    const observer = new ResizeObserver((entries) => {\n      setEntries(entries);\n      internalOnChangeRef.current?.(entries, observer);\n    });\n    observer.observe(element as Element, options);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [target, internalRef.state, options?.box, enabled]);\n\n  if (target) return { entries };\n  return {\n    ref: internalRef,\n    entries\n  };\n}) as UseResizeObserver;\n"],"names":["useResizeObserver","params","target","isTarget","options","enabled","entries","setEntries","useState","internalRef","useRefState","internalOnChangeRef","useRef","useEffect","element","getElement","observer"],"mappings":"mPA6DaA,EAAqB,IAAIC,IAAkB,CACtD,MAAMC,EAAUC,EAAAA,SAASF,EAAO,CAAC,CAAC,EAAIA,EAAO,CAAC,EAAI,OAC5CG,EAAWF,EAASD,EAAO,CAAC,EAAIA,EAAO,CAAC,EACxCI,EAAUD,GAAS,SAAW,GAE9B,CAACE,EAASC,CAAU,EAAIC,EAAAA,SAAgC,CAAA,CAAE,EAE1DC,EAAcC,EAAAA,YAAA,EACdC,EAAsBC,EAAAA,OAA6CR,GAAS,QAAQ,EAoB1F,OAnBAO,EAAoB,QAAUP,GAAS,SAEvCS,EAAAA,UAAU,IAAM,CACd,GAAI,CAACR,GAAY,CAACH,GAAU,CAACO,EAAY,MAAQ,OAEjD,MAAMK,EAAUZ,EAASa,EAAAA,WAAWb,CAAM,EAAIO,EAAY,QAC1D,GAAI,CAACK,EAAS,OAEd,MAAME,EAAW,IAAI,eAAgBV,GAAY,CAC/CC,EAAWD,CAAO,EAClBK,EAAoB,UAAUL,EAASU,CAAQ,CAAA,CAChD,EACD,OAAAA,EAAS,QAAQF,EAAoBV,CAAO,EAErC,IAAM,CACXY,EAAS,WAAA,CAAW,CACtB,EACC,CAACd,EAAQO,EAAY,MAAOL,GAAS,IAAKC,CAAO,CAAC,EAEjDH,EAAe,CAAE,QAAAI,CAAA,EACd,CACL,IAAKG,EACL,QAAAH,CAAA,CAEJ"}