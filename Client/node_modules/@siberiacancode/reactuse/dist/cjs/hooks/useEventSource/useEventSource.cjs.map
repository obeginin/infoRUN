{"version":3,"file":"useEventSource.cjs","sources":["../../../../src/hooks/useEventSource/useEventSource.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport { getRetry } from '@/utils/helpers';\n\n/** The use event source options type */\nexport interface UseEventSourceOptions<QueryData, Data> extends EventSourceInit {\n  /** Immediately open the connection when calling this hook */\n  immediately?: boolean;\n  /* The placeholder data for the hook */\n  placeholderData?: (() => Data) | Data;\n  /* The retry count of requests */\n  retry?: boolean | number;\n  /* The retry delay of requests */\n  retryDelay?: ((retry: number, event: Event) => number) | number;\n  /* The onError function to be invoked */\n  onError?: (error: Event) => void;\n  /* The onMessage function to be invoked */\n  onMessage?: (event: Event & { data?: Data }) => void;\n  /* The onOpen function to be invoked */\n  onOpen?: () => void;\n  /* The select function to be invoked */\n  select?: (data: QueryData) => Data;\n}\n\n/** The use event source return type */\ninterface UseEventSourceReturn<Data = any> {\n  /** The latest data received via the EventSource */\n  data?: Data;\n  /** The current error */\n  error?: Event;\n  /** The instance of the EventSource */\n  instance?: EventSource;\n  /* The connecting state of the query */\n  isConnecting: boolean;\n  /* The error state of the query */\n  isError: boolean;\n  /* The open state of the query */\n  isOpen: boolean;\n  /** Closes the EventSource connection gracefully */\n  close: () => void;\n  /** Reopen the EventSource connection */\n  open: () => void;\n}\n\n/**\n * @name useEventSource\n * @description - Hook that provides a reactive wrapper for event source\n * @category Browser\n *\n * @browserapi EventSource https://developer.mozilla.org/en-US/docs/Web/API/EventSource\n *\n * @param {string | URL} url The URL of the EventSource\n * @param {string[]} [events=[]] List of events to listen to\n * @param {UseEventSourceOptions} [options={}] Configuration options\n * @returns {UseEventSourceReturn<Data>} The EventSource state and controls\n *\n * @example\n * const { instance, data, isConnecting, isOpen, isError, close, open } = useEventSource('url', ['message']);\n */\nexport const useEventSource = <QueryData = any, Data = QueryData>(\n  url: string | URL,\n  events: string[] = [],\n  options: UseEventSourceOptions<QueryData, Data> = {}\n): UseEventSourceReturn<Data> => {\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const retryCountRef = useRef(options?.retry ? getRetry(options.retry) : 0);\n  const [error, setError] = useState<Event | undefined>(undefined);\n  const [data, setData] = useState<Data | undefined>(options?.placeholderData);\n\n  const eventSourceRef = useRef<EventSource>(undefined);\n\n  const immediately = options.immediately ?? true;\n\n  const close = () => {\n    if (!eventSourceRef.current) return;\n\n    eventSourceRef.current.close();\n    eventSourceRef.current = undefined;\n    setIsOpen(false);\n    setIsConnecting(false);\n    setIsError(false);\n  };\n\n  const open = () => {\n    close();\n\n    const eventSource = new EventSource(url, {\n      withCredentials: options.withCredentials ?? false\n    });\n    eventSourceRef.current = eventSource;\n\n    setIsConnecting(true);\n\n    eventSource.onopen = () => {\n      setIsOpen(true);\n      setIsConnecting(false);\n      setError(undefined);\n      options?.onOpen?.();\n    };\n\n    eventSource.onerror = (event) => {\n      setIsOpen(false);\n      setIsConnecting(false);\n      setIsError(true);\n      setError(event);\n      options?.onError?.(event);\n\n      if (retryCountRef.current > 0) {\n        retryCountRef.current -= 1;\n\n        const retryDelay =\n          typeof options?.retryDelay === 'function'\n            ? options?.retryDelay(retryCountRef.current, event)\n            : options?.retryDelay;\n\n        if (retryDelay) {\n          setTimeout(open, retryDelay);\n          return;\n        }\n      }\n\n      retryCountRef.current = options?.retry ? getRetry(options.retry) : 0;\n    };\n\n    eventSource.onmessage = (event) => {\n      const data = options?.select ? options?.select(event.data) : event.data;\n      setData(data);\n      options?.onMessage?.(event);\n    };\n\n    events.forEach((eventName) => {\n      eventSource.addEventListener(eventName, (event: Event & { data?: Data }) => {\n        setData(event.data);\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (!immediately) return;\n\n    open();\n    return () => {\n      close();\n    };\n  }, [immediately]);\n\n  return {\n    instance: eventSourceRef.current,\n    data,\n    error,\n    isConnecting,\n    isOpen,\n    isError,\n    close,\n    open\n  };\n};\n"],"names":["useEventSource","url","events","options","isConnecting","setIsConnecting","useState","isOpen","setIsOpen","isError","setIsError","retryCountRef","useRef","getRetry","error","setError","data","setData","eventSourceRef","immediately","close","open","eventSource","event","retryDelay","eventName","useEffect"],"mappings":"uJA2DaA,EAAiB,CAC5BC,EACAC,EAAmB,CAAA,EACnBC,EAAkD,CAAA,IACnB,CAC/B,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAAA,SAAS,EAAK,EAChD,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAAS,EAAK,EACpC,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAK,EAEtCK,EAAgBC,EAAAA,OAAOT,GAAS,MAAQU,EAAAA,SAASV,EAAQ,KAAK,EAAI,CAAC,EACnE,CAACW,EAAOC,CAAQ,EAAIT,EAAAA,SAA4B,MAAS,EACzD,CAACU,EAAMC,CAAO,EAAIX,EAAAA,SAA2BH,GAAS,eAAe,EAErEe,EAAiBN,EAAAA,OAAoB,MAAS,EAE9CO,EAAchB,EAAQ,aAAe,GAErCiB,EAAQ,IAAM,CACbF,EAAe,UAEpBA,EAAe,QAAQ,MAAA,EACvBA,EAAe,QAAU,OACzBV,EAAU,EAAK,EACfH,EAAgB,EAAK,EACrBK,EAAW,EAAK,EAAA,EAGZW,EAAO,IAAM,CACjBD,EAAA,EAEA,MAAME,EAAc,IAAI,YAAYrB,EAAK,CACvC,gBAAiBE,EAAQ,iBAAmB,EAAA,CAC7C,EACDe,EAAe,QAAUI,EAEzBjB,EAAgB,EAAI,EAEpBiB,EAAY,OAAS,IAAM,CACzBd,EAAU,EAAI,EACdH,EAAgB,EAAK,EACrBU,EAAS,MAAS,EAClBZ,GAAS,SAAA,CAAS,EAGpBmB,EAAY,QAAWC,GAAU,CAO/B,GANAf,EAAU,EAAK,EACfH,EAAgB,EAAK,EACrBK,EAAW,EAAI,EACfK,EAASQ,CAAK,EACdpB,GAAS,UAAUoB,CAAK,EAEpBZ,EAAc,QAAU,EAAG,CAC7BA,EAAc,SAAW,EAEzB,MAAMa,EACJ,OAAOrB,GAAS,YAAe,WAC3BA,GAAS,WAAWQ,EAAc,QAASY,CAAK,EAChDpB,GAAS,WAEf,GAAIqB,EAAY,CACd,WAAWH,EAAMG,CAAU,EAC3B,MAAA,CACF,CAGFb,EAAc,QAAUR,GAAS,MAAQU,EAAAA,SAASV,EAAQ,KAAK,EAAI,CAAA,EAGrEmB,EAAY,UAAaC,GAAU,CACjC,MAAMP,EAAOb,GAAS,OAASA,GAAS,OAAOoB,EAAM,IAAI,EAAIA,EAAM,KACnEN,EAAQD,CAAI,EACZb,GAAS,YAAYoB,CAAK,CAAA,EAG5BrB,EAAO,QAASuB,GAAc,CAC5BH,EAAY,iBAAiBG,EAAYF,GAAmC,CAC1EN,EAAQM,EAAM,IAAI,CAAA,CACnB,CAAA,CACF,CAAA,EAGHG,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAKP,EAEL,OAAAE,EAAA,EACO,IAAM,CACXD,EAAA,CAAM,CACR,EACC,CAACD,CAAW,CAAC,EAET,CACL,SAAUD,EAAe,QACzB,KAAAF,EACA,MAAAF,EACA,aAAAV,EACA,OAAAG,EACA,QAAAE,EACA,MAAAW,EACA,KAAAC,CAAA,CAEJ"}