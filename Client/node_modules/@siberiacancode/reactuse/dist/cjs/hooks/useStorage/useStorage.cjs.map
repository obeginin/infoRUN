{"version":3,"file":"useStorage.cjs","sources":["../../../../src/hooks/useStorage/useStorage.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n/* The use storage initial value type */\nexport type UseStorageInitialValue<Value> = (() => Value) | Value;\n\n/* The use storage options type */\nexport interface UseStorageOptions<Value> {\n  /* The initial value of the storage */\n  initialValue?: UseStorageInitialValue<Value>;\n  /* The storage to be used */\n  storage?: Storage;\n  /* The deserializer function to be invoked */\n  deserializer?: (value: string) => Value;\n  /* The serializer function to be invoked */\n  serializer?: (value: Value) => string;\n}\n\n/* The use storage return type */\nexport interface UseStorageReturn<Value> {\n  /* The value of the storage */\n  value: Value;\n  /* The error state of the storage */\n  remove: () => void;\n  /* The loading state of the storage */\n  set: (value: Value) => void;\n}\n\nexport interface UseStorage {\n  <Value>(key: string, options?: UseStorageOptions<Value>): UseStorageReturn<Value | undefined>;\n\n  <Value>(\n    key: string,\n    initialValue?: UseStorageInitialValue<Value>\n  ): UseStorageReturn<Value | undefined>;\n}\n\nexport const STORAGE_EVENT = 'reactuse-storage';\n\nexport const dispatchStorageEvent = (params: Partial<StorageEvent>) =>\n  window.dispatchEvent(new StorageEvent(STORAGE_EVENT, params));\n\nconst setStorageItem = (storage: Storage, key: string, value: string) => {\n  const oldValue = storage.getItem(key);\n\n  storage.setItem(key, value);\n  dispatchStorageEvent({\n    key,\n    oldValue,\n    newValue: value,\n    storageArea: storage\n  });\n};\n\nconst removeStorageItem = (storage: Storage, key: string) => {\n  const oldValue = storage.getItem(key);\n\n  storage.removeItem(key);\n  dispatchStorageEvent({ key, oldValue, newValue: null, storageArea: storage });\n};\n\nconst getStorageItem = (storage: Storage, key: string) => {\n  const value = storage.getItem(key);\n  if (!value) return undefined;\n  return value;\n};\n\n/**\n * @name useStorage\n * @description - Hook that manages storage value\n * @category State\n *\n * @overload\n * @param {string} key The key of the storage\n * @param {UseStorageInitialValue<Value>} [initialValue] The initial value of the storage\n * @returns {UseStorageReturn<Value>} The value and the set function\n *\n * @overload\n * @param {string} key The key of the storage\n * @param {(value: Value) => string} [params.serializer] The serializer function\n * @param {(value: string) => Value} [params.deserializer] The deserializer function\n * @param {Storage} [params.storage] The storage\n * @param {UseStorageInitialValue<Value>} [params.initialValue] The initial value of the storage\n * @returns {UseStorageReturn<Value>} The value and the set function\n *\n * @example\n * const { value, set, remove } = useStorage('key', 'value');\n */\nexport const useStorage = (<Value>(key: string, params?: any): UseStorageReturn<Value> => {\n  const options = (\n    typeof params === 'object' &&\n    params &&\n    ('serializer' in params ||\n      'deserializer' in params ||\n      'initialValue' in params ||\n      'storage' in params)\n      ? params\n      : undefined\n  ) as UseStorageOptions<Value>;\n\n  const initialValue = (options ? options?.initialValue : params) as UseStorageInitialValue<Value>;\n\n  if (typeof window === 'undefined') {\n    const value = typeof initialValue === 'function' ? (initialValue as () => any)() : initialValue;\n    return {\n      value,\n      set: () => {},\n      remove: () => {}\n    };\n  }\n\n  const serializer = (value: Value) => {\n    if (options?.serializer) return options.serializer(value);\n    if (typeof value === 'string') return value;\n    return JSON.stringify(value);\n  };\n\n  const storage = options?.storage ?? window?.localStorage;\n\n  const set = (value: Value) => setStorageItem(storage, key, serializer(value));\n  const remove = () => removeStorageItem(storage, key);\n\n  const deserializer = (value: string) => {\n    if (options?.deserializer) return options.deserializer(value);\n    if (value === 'undefined') return undefined as unknown as Value;\n\n    try {\n      return JSON.parse(value) as Value;\n    } catch {\n      return value as Value;\n    }\n  };\n\n  const [value, setValue] = useState<Value | undefined>(() => {\n    const storageValue = getStorageItem(storage, key);\n    if (storageValue === undefined && initialValue !== undefined) {\n      const value =\n        typeof initialValue === 'function' ? (initialValue as () => Value)() : initialValue;\n      setStorageItem(storage, key, serializer(value));\n      return value;\n    }\n    return storageValue ? deserializer(storageValue) : undefined;\n  });\n\n  useEffect(() => {\n    const onChange = () => {\n      const storageValue = getStorageItem(storage, key);\n      setValue(storageValue ? deserializer(storageValue) : undefined);\n    };\n    window.addEventListener(STORAGE_EVENT, onChange);\n    return () => window.removeEventListener(STORAGE_EVENT, onChange);\n  }, [key]);\n\n  return {\n    value: value as Value,\n    set,\n    remove\n  };\n}) as UseStorage;\n"],"names":["STORAGE_EVENT","dispatchStorageEvent","params","setStorageItem","storage","key","value","oldValue","removeStorageItem","getStorageItem","useStorage","options","initialValue","serializer","set","remove","deserializer","setValue","useState","storageValue","useEffect","onChange"],"mappings":"yGAoCaA,EAAgB,mBAEhBC,EAAwBC,GACnC,OAAO,cAAc,IAAI,aAAaF,EAAeE,CAAM,CAAC,EAExDC,EAAiB,CAACC,EAAkBC,EAAaC,IAAkB,CACvE,MAAMC,EAAWH,EAAQ,QAAQC,CAAG,EAEpCD,EAAQ,QAAQC,EAAKC,CAAK,EAC1BL,EAAqB,CACnB,IAAAI,EACA,SAAAE,EACA,SAAUD,EACV,YAAaF,CAAA,CACd,CACH,EAEMI,EAAoB,CAACJ,EAAkBC,IAAgB,CAC3D,MAAME,EAAWH,EAAQ,QAAQC,CAAG,EAEpCD,EAAQ,WAAWC,CAAG,EACtBJ,EAAqB,CAAE,IAAAI,EAAK,SAAAE,EAAU,SAAU,KAAM,YAAaH,EAAS,CAC9E,EAEMK,EAAiB,CAACL,EAAkBC,IAAgB,CACxD,MAAMC,EAAQF,EAAQ,QAAQC,CAAG,EACjC,GAAKC,EACL,OAAOA,CACT,EAuBaI,EAAc,CAAQL,EAAaH,IAA0C,CACxF,MAAMS,EACJ,OAAOT,GAAW,UAClBA,IACC,eAAgBA,GACf,iBAAkBA,GAClB,iBAAkBA,GAClB,YAAaA,GACXA,EACA,OAGAU,EAAgBD,EAAUA,GAAS,aAAeT,EAExD,GAAI,OAAO,OAAW,IAEpB,MAAO,CACL,MAFY,OAAOU,GAAiB,WAAcA,IAA+BA,EAGjF,IAAK,IAAM,CAAA,EACX,OAAQ,IAAM,CAAA,CAAC,EAInB,MAAMC,EAAcP,GACdK,GAAS,WAAmBA,EAAQ,WAAWL,CAAK,EACpD,OAAOA,GAAU,SAAiBA,EAC/B,KAAK,UAAUA,CAAK,EAGvBF,EAAUO,GAAS,SAAW,QAAQ,aAEtCG,EAAOR,GAAiBH,EAAeC,EAASC,EAAKQ,EAAWP,CAAK,CAAC,EACtES,EAAS,IAAMP,EAAkBJ,EAASC,CAAG,EAE7CW,EAAgBV,GAAkB,CACtC,GAAIK,GAAS,aAAc,OAAOA,EAAQ,aAAaL,CAAK,EAC5D,GAAIA,IAAU,YAEd,GAAI,CACF,OAAO,KAAK,MAAMA,CAAK,CAAA,MACjB,CACN,OAAOA,CAAA,CACT,EAGI,CAACA,EAAOW,CAAQ,EAAIC,EAAAA,SAA4B,IAAM,CAC1D,MAAMC,EAAeV,EAAeL,EAASC,CAAG,EAChD,GAAIc,IAAiB,QAAaP,IAAiB,OAAW,CAC5D,MAAMN,EACJ,OAAOM,GAAiB,WAAcA,IAAiCA,EACzE,OAAAT,EAAeC,EAASC,EAAKQ,EAAWP,CAAK,CAAC,EACvCA,CAAA,CAET,OAAOa,EAAeH,EAAaG,CAAY,EAAI,MAAA,CACpD,EAEDC,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAW,IAAM,CACrB,MAAMF,EAAeV,EAAeL,EAASC,CAAG,EAChDY,EAASE,EAAeH,EAAaG,CAAY,EAAI,MAAS,CAAA,EAEhE,cAAO,iBAAiBnB,EAAeqB,CAAQ,EACxC,IAAM,OAAO,oBAAoBrB,EAAeqB,CAAQ,CAAA,EAC9D,CAAChB,CAAG,CAAC,EAED,CACL,MAAAC,EACA,IAAAQ,EACA,OAAAC,CAAA,CAEJ"}