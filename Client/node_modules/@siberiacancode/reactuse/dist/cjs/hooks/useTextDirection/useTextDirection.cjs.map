{"version":3,"file":"useTextDirection.cjs","sources":["../../../../src/hooks/useTextDirection/useTextDirection.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\n/** The use text direction value type */\nexport type UseTextDirectionValue = 'auto' | 'ltr' | 'rtl';\n\n/** The use text direction return type */\nexport interface UseTextDirectionReturn {\n  /** The current direction */\n  value: UseTextDirectionValue;\n  /*** The function to remove the direction */\n  remove: () => void;\n  /*** The function to set the direction */\n  set: (value: UseTextDirectionValue | null) => void;\n}\n\nexport interface UseTextDirection {\n  (target: HookTarget, initialValue?: UseTextDirectionValue): UseTextDirectionReturn;\n\n  <Target extends Element>(\n    initialValue?: UseTextDirectionValue,\n    target?: never\n  ): UseTextDirectionReturn & { ref: StateRef<Target> };\n}\n\n/**\n * @name useTextDirection\n * @description - Hook that can get and set the direction of the element\n * @category Elements\n *\n * @overload\n * @param {HookTarget} [target=document.querySelector('html')] The target element to observe\n * @param {UseTextDirectionValue} [initialValue = 'ltr'] The initial direction of the element\n * @returns {UseTextDirectionReturn} An object containing the current text direction of the element\n *\n * @example\n * const { value, set, remove } = useTextDirection(ref);\n *\n * @overload\n * @template Target The target element type\n * @param {UseTextDirectionValue} [initialValue = 'ltr'] The initial direction of the element\n * @returns { { ref: StateRef<Target> } & UseTextDirectionReturn } An object containing the current text direction of the element\n *\n * @example\n * const { ref, value, set, remove } = useTextDirection();\n */\nexport const useTextDirection = ((...params: any[]) => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n  const initialValue = ((target ? params[1] : params[0]) as UseTextDirectionValue) ?? 'ltr';\n\n  const internalRef = useRefState();\n  const elementRef = useRef<Element>(null);\n\n  const getDirection = () => {\n    const element = (target ? getElement(target) : internalRef.current) as Element;\n    return (element?.getAttribute('dir') as UseTextDirectionValue) ?? initialValue;\n  };\n\n  const [value, setValue] = useState<UseTextDirectionValue>(getDirection());\n\n  const remove = () => {\n    if (!elementRef.current) return;\n\n    elementRef.current?.removeAttribute('dir');\n  };\n\n  const set = (value: UseTextDirectionValue) => {\n    if (!elementRef.current) return;\n\n    setValue(value);\n    elementRef.current.setAttribute('dir', value);\n  };\n\n  useEffect(() => {\n    if (!target && !internalRef.state) return;\n\n    const element =\n      ((target ? getElement(target) : internalRef.current) as Element) ??\n      document.querySelector('html');\n    if (!element) return;\n\n    elementRef.current = element;\n\n    const direction = getDirection();\n    element.setAttribute('dir', direction);\n    setValue(direction);\n\n    const observer = new MutationObserver(getDirection);\n\n    observer.observe(element, { attributes: true });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [internalRef.state, target]);\n\n  if (target) return { value, set, remove };\n  return {\n    ref: internalRef,\n    value,\n    set,\n    remove\n  };\n}) as UseTextDirection;\n"],"names":["useTextDirection","params","target","isTarget","initialValue","internalRef","useRefState","elementRef","useRef","getDirection","getElement","value","setValue","useState","remove","set","useEffect","element","direction","observer"],"mappings":"mPAqDaA,EAAoB,IAAIC,IAAkB,CACrD,MAAMC,EAAUC,EAAAA,SAASF,EAAO,CAAC,CAAC,EAAIA,EAAO,CAAC,EAAI,OAC5CG,GAAiBF,EAASD,EAAO,CAAC,EAAIA,EAAO,CAAC,IAAgC,MAE9EI,EAAcC,EAAAA,YAAA,EACdC,EAAaC,EAAAA,OAAgB,IAAI,EAEjCC,EAAe,KACFP,EAASQ,EAAAA,WAAWR,CAAM,EAAIG,EAAY,UAC1C,aAAa,KAAK,GAA+BD,EAG9D,CAACO,EAAOC,CAAQ,EAAIC,EAAAA,SAAgCJ,GAAc,EAElEK,EAAS,IAAM,CACdP,EAAW,SAEhBA,EAAW,SAAS,gBAAgB,KAAK,CAAA,EAGrCQ,EAAOJ,GAAiC,CACvCJ,EAAW,UAEhBK,EAASD,CAAK,EACdJ,EAAW,QAAQ,aAAa,MAAOI,CAAK,EAAA,EA0B9C,OAvBAK,EAAAA,UAAU,IAAM,CACd,GAAI,CAACd,GAAU,CAACG,EAAY,MAAO,OAEnC,MAAMY,GACFf,EAASQ,EAAAA,WAAWR,CAAM,EAAIG,EAAY,UAC5C,SAAS,cAAc,MAAM,EAC/B,GAAI,CAACY,EAAS,OAEdV,EAAW,QAAUU,EAErB,MAAMC,EAAYT,EAAA,EAClBQ,EAAQ,aAAa,MAAOC,CAAS,EACrCN,EAASM,CAAS,EAElB,MAAMC,EAAW,IAAI,iBAAiBV,CAAY,EAElD,OAAAU,EAAS,QAAQF,EAAS,CAAE,WAAY,GAAM,EAEvC,IAAM,CACXE,EAAS,WAAA,CAAW,CACtB,EACC,CAACd,EAAY,MAAOH,CAAM,CAAC,EAE1BA,EAAe,CAAE,MAAAS,EAAO,IAAAI,EAAK,OAAAD,CAAA,EAC1B,CACL,IAAKT,EACL,MAAAM,EACA,IAAAI,EACA,OAAAD,CAAA,CAEJ"}