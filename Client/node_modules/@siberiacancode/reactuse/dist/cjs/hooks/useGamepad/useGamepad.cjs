"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const i=require("react"),l=require("../useRaf/useRaf.cjs"),f=()=>{const t=typeof navigator<"u"&&"getGamepads"in navigator,[s,r]=i.useState({}),u=e=>{const o=[],n="vibrationActuator"in e?e.vibrationActuator:null;return n&&o.push(n),e.hapticActuators&&o.push(...e.hapticActuators),{...e,hapticActuators:o}},b=()=>{for(const e of navigator.getGamepads()??[])e&&s[e.index]&&(s[e.index]=u(e))},{active:d}=l.useRaf(b,{enabled:!!Object.keys(s).length});return i.useEffect(()=>{if(!t)return;const e=navigator.getGamepads();r(e.reduce((o,n)=>({...o,...n&&{[n.index]:u(n)}}),{}))},[]),i.useEffect(()=>{const e=n=>{const{gamepad:c}=n;r({...s,[c.index]:u(c)})},o=n=>{const{gamepad:c}=n,a={...s};delete a[c.index],r(a)};return document.addEventListener("gamepadconnected",e),document.addEventListener("gamepaddisconnected",o),()=>{document.removeEventListener("gamepadconnected",e),document.removeEventListener("gamepaddisconnected",o)}},[]),{active:d,supported:t,gamepads:Object.values(s)}},v=t=>({buttons:{a:t.buttons[0],b:t.buttons[1],x:t.buttons[2],y:t.buttons[3]},bumper:{left:t.buttons[4],right:t.buttons[5]},triggers:{left:t.buttons[6],right:t.buttons[7]},stick:{left:{horizontal:t.axes[0],vertical:t.axes[1],button:t.buttons[10]},right:{horizontal:t.axes[2],vertical:t.axes[3],button:t.buttons[11]}},dpad:{up:t.buttons[12],down:t.buttons[13],left:t.buttons[14],right:t.buttons[15]},back:t.buttons[8],start:t.buttons[9]});exports.mapGamepadToXbox360Controller=v;exports.useGamepad=f;
//# sourceMappingURL=useGamepad.cjs.map
