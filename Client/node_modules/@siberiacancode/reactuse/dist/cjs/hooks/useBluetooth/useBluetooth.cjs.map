{"version":3,"file":"useBluetooth.cjs","sources":["../../../../src/hooks/useBluetooth/useBluetooth.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n/** The use bluetooth return type */\nexport interface UseBluetoothReturn {\n  /** Indicates if bluetooth device is currently connected */\n  connected: boolean;\n  /** Describe connected bluetooth device */\n  device?: BluetoothDevice;\n  /** The GATT server for connected bluetooth device */\n  server?: BluetoothRemoteGATTServer;\n  /** Whether the bluetooth is supported*/\n  supported: boolean;\n  /** Function to request bluetooth device from the user */\n  requestDevice: () => Promise<void>;\n}\n\n/** The use bluetooth options type */\nexport interface UseBluetoothOptions {\n  /** The options to request all bluetooth devices */\n  acceptAllDevices?: boolean;\n  /** Array of filters to apply when scanning bluetooth devices */\n  filters?: BluetoothLEScanFilter[];\n  /** Array of optional services that the application can use */\n  optionalServices?: BluetoothServiceUUID[];\n}\n\n/**\n * @name useBluetooth\n * @description - Hook for getting information about bluetooth\n * @category Browser\n *\n * @browserapi navigator.bluetooth https://developer.mozilla.org/en-US/docs/Web/API/Navigator/bluetooth\n *\n * @param {boolean} [options.acceptAllDevices=false] The options to request all Bluetooth devices\n * @param {Array<BluetoothLEScanFilter>} [options.filters] Array of filters to apply when scanning Bluetooth devices\n * @param {Array<BluetoothServiceUUID>} [options.optionalServices] Array of optional services that the application can use\n * @returns {UseBluetoothReturn} Object containing battery information & Battery API support\n *\n * @example\n * const { supported, connected, device, requestDevice, server } = useBluetooth(options);\n */\nexport const useBluetooth = (options?: UseBluetoothOptions): UseBluetoothReturn => {\n  const supported = typeof navigator !== 'undefined' && 'bluetooth' in navigator;\n  const { acceptAllDevices = false, filters, optionalServices } = options ?? {};\n\n  const [connected, setIsConnected] = useState(false);\n  const [device, setDevice] = useState<BluetoothDevice | undefined>(undefined);\n  const [server, setServer] = useState<BluetoothRemoteGATTServer | undefined>(undefined);\n\n  const requestDevice = async () => {\n    if (!supported) return;\n\n    const selectedDevice = await navigator.bluetooth.requestDevice({\n      acceptAllDevices,\n      optionalServices,\n      ...(filters && { filters, acceptAllDevices: false })\n    });\n\n    setDevice(selectedDevice);\n  };\n\n  useEffect(() => {\n    if (device && device.gatt) {\n      const connectToBluetoothGATTServer = async () => {\n        if (!device.gatt) return;\n        const gattServer = await device.gatt.connect();\n        setServer(gattServer);\n        setIsConnected(gattServer.connected);\n      };\n\n      const reset = () => {\n        setServer(undefined);\n        setDevice(undefined);\n        setIsConnected(false);\n      };\n\n      device.addEventListener('gattserverdisconnected', reset);\n      connectToBluetoothGATTServer();\n\n      return () => {\n        device.removeEventListener('gattserverdisconnected', reset);\n        device.gatt?.disconnect();\n      };\n    }\n  }, [device]);\n\n  return {\n    supported,\n    connected,\n    device,\n    requestDevice,\n    server\n  };\n};\n"],"names":["useBluetooth","options","supported","acceptAllDevices","filters","optionalServices","connected","setIsConnected","useState","device","setDevice","server","setServer","requestDevice","selectedDevice","useEffect","connectToBluetoothGATTServer","gattServer","reset"],"mappings":"yGAyCaA,EAAgBC,GAAsD,CACjF,MAAMC,EAAY,OAAO,UAAc,KAAe,cAAe,UAC/D,CAAE,iBAAAC,EAAmB,GAAO,QAAAC,EAAS,iBAAAC,CAAA,EAAqBJ,GAAW,CAAA,EAErE,CAACK,EAAWC,CAAc,EAAIC,EAAAA,SAAS,EAAK,EAC5C,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAAsC,MAAS,EACrE,CAACG,EAAQC,CAAS,EAAIJ,EAAAA,SAAgD,MAAS,EAE/EK,EAAgB,SAAY,CAChC,GAAI,CAACX,EAAW,OAEhB,MAAMY,EAAiB,MAAM,UAAU,UAAU,cAAc,CAC7D,iBAAAX,EACA,iBAAAE,EACA,GAAID,GAAW,CAAE,QAAAA,EAAS,iBAAkB,EAAA,CAAM,CACnD,EAEDM,EAAUI,CAAc,CAAA,EAG1BC,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAIN,GAAUA,EAAO,KAAM,CACzB,MAAMO,EAA+B,SAAY,CAC/C,GAAI,CAACP,EAAO,KAAM,OAClB,MAAMQ,EAAa,MAAMR,EAAO,KAAK,QAAA,EACrCG,EAAUK,CAAU,EACpBV,EAAeU,EAAW,SAAS,CAAA,EAG/BC,EAAQ,IAAM,CAClBN,EAAU,MAAS,EACnBF,EAAU,MAAS,EACnBH,EAAe,EAAK,CAAA,EAGtB,OAAAE,EAAO,iBAAiB,yBAA0BS,CAAK,EACvDF,EAAA,EAEO,IAAM,CACXP,EAAO,oBAAoB,yBAA0BS,CAAK,EAC1DT,EAAO,MAAM,WAAA,CAAW,CAC1B,CACF,EACC,CAACA,CAAM,CAAC,EAEJ,CACL,UAAAP,EACA,UAAAI,EACA,OAAAG,EACA,cAAAI,EACA,OAAAF,CAAA,CAEJ"}