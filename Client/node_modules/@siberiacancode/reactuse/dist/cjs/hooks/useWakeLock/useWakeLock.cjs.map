{"version":3,"file":"useWakeLock.cjs","sources":["../../../../src/hooks/useWakeLock/useWakeLock.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\n/** The use wake lock options type */\nexport interface UseWakeLockOptions {\n  /** Determines if the wake lock should be automatically reacquired when the document becomes visible. */\n  immediately?: boolean;\n  /** A string specifying the screen wake lock type. */\n  type?: WakeLockType;\n}\n\n/** The use wake lock return type */\nexport interface UseWakeLockReturn {\n  /** Indicates if the wake lock is currently active. */\n  active: boolean;\n  /** Indicates if the Wake Lock API is supported in the current environment. */\n  supported: boolean;\n  /** Function to release the wake lock. */\n  release: () => Promise<void>;\n  /** Function to request the wake lock. */\n  request: () => Promise<void>;\n}\n\n/**\n * @name useWakeLock\n * @description - Hook that provides a wake lock functionality\n * @category Browser\n *\n * @browserapi navigator.wakeLock https://developer.mozilla.org/en-US/docs/Web/API/WakeLock\n *\n * @param {immediately} [options] Configuration options for the hook.\n * @returns {UseWakeLockReturn} An object containing the wake lock state and control methods.\n *\n * @example\n * const { supported, active, request, release } = useWakeLock();\n */\nexport const useWakeLock = (options?: UseWakeLockOptions): UseWakeLockReturn => {\n  const supported = typeof navigator !== 'undefined' && 'wakeLock' in navigator;\n\n  const [active, setActive] = useState(false);\n  const sentinel = useRef<WakeLockSentinel>(undefined);\n\n  const immediately = options?.immediately ?? false;\n  const type = options?.type ?? 'screen';\n\n  const request = async (type?: WakeLockType) => {\n    if (!supported) return;\n\n    sentinel.current = await navigator.wakeLock.request(type ?? options?.type);\n    sentinel.current.addEventListener('release', () => {\n      setActive(false);\n      sentinel.current = undefined;\n    });\n\n    setActive(true);\n  };\n\n  const release = async () => {\n    if (!supported || !sentinel.current) return;\n\n    await sentinel.current.release();\n    sentinel.current = undefined;\n    setActive(false);\n  };\n\n  useEffect(() => {\n    if (!supported || !immediately || document.visibilityState !== 'visible' || type !== 'screen')\n      return;\n\n    const onVisibilityChange = async () => {\n      await release();\n      await request(type);\n    };\n\n    document.addEventListener('visibilitychange', onVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', onVisibilityChange);\n    };\n  }, [type]);\n\n  return { supported, active, request, release };\n};\n"],"names":["useWakeLock","options","supported","active","setActive","useState","sentinel","useRef","immediately","type","request","release","useEffect","onVisibilityChange"],"mappings":"yGAmCaA,EAAeC,GAAoD,CAC9E,MAAMC,EAAY,OAAO,UAAc,KAAe,aAAc,UAE9D,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAAS,EAAK,EACpCC,EAAWC,EAAAA,OAAyB,MAAS,EAE7CC,EAAcP,GAAS,aAAe,GACtCQ,EAAOR,GAAS,MAAQ,SAExBS,EAAU,MAAOD,GAAwB,CACxCP,IAELI,EAAS,QAAU,MAAM,UAAU,SAAS,QAAQG,GAAQR,GAAS,IAAI,EACzEK,EAAS,QAAQ,iBAAiB,UAAW,IAAM,CACjDF,EAAU,EAAK,EACfE,EAAS,QAAU,MAAA,CACpB,EAEDF,EAAU,EAAI,EAAA,EAGVO,EAAU,SAAY,CACtB,CAACT,GAAa,CAACI,EAAS,UAE5B,MAAMA,EAAS,QAAQ,QAAA,EACvBA,EAAS,QAAU,OACnBF,EAAU,EAAK,EAAA,EAGjBQ,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAI,CAACV,GAAa,CAACM,GAAe,SAAS,kBAAoB,WAAaC,IAAS,SACnF,OAEF,MAAMI,EAAqB,SAAY,CACrC,MAAMF,EAAA,EACN,MAAMD,EAAQD,CAAI,CAAA,EAGpB,gBAAS,iBAAiB,mBAAoBI,CAAkB,EACzD,IAAM,CACX,SAAS,oBAAoB,mBAAoBA,CAAkB,CAAA,CACrE,EACC,CAACJ,CAAI,CAAC,EAEF,CAAE,UAAAP,EAAW,OAAAC,EAAQ,QAAAO,EAAS,QAAAC,CAAA,CACvC"}