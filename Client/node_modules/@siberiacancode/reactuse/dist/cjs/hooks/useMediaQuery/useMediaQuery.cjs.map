{"version":3,"file":"useMediaQuery.cjs","sources":["../../../../src/hooks/useMediaQuery/useMediaQuery.ts"],"sourcesContent":["import { useCallback, useSyncExternalStore } from 'react';\n\nconst getServerSnapshot = () => false;\n\n/**\n * @name useMediaQuery\n * @description - Hook that manages a media query\n * @category Browser\n *\n * @browserapi window.matchMedia https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n *\n * @param {string} query The media query string\n * @returns {boolean} A boolean indicating if the media query matches\n *\n * @example\n * const matches = useMediaQuery('(max-width: 768px)');\n */\nexport const useMediaQuery = (query: string) => {\n  const subscribe = useCallback(\n    (callback: () => void) => {\n      const matchMedia = window.matchMedia(query);\n\n      matchMedia.addEventListener('change', callback);\n      return () => {\n        matchMedia.removeEventListener('change', callback);\n      };\n    },\n    [query]\n  );\n\n  const getSnapshot = () => window.matchMedia(query).matches;\n\n  return useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n};\n"],"names":["getServerSnapshot","useMediaQuery","query","subscribe","useCallback","callback","matchMedia","getSnapshot","useSyncExternalStore"],"mappings":"yGAEMA,EAAoB,IAAM,GAenBC,EAAiBC,GAAkB,CAC9C,MAAMC,EAAYC,EAAAA,YACfC,GAAyB,CACxB,MAAMC,EAAa,OAAO,WAAWJ,CAAK,EAE1C,OAAAI,EAAW,iBAAiB,SAAUD,CAAQ,EACvC,IAAM,CACXC,EAAW,oBAAoB,SAAUD,CAAQ,CAAA,CACnD,EAEF,CAACH,CAAK,CAAA,EAGFK,EAAc,IAAM,OAAO,WAAWL,CAAK,EAAE,QAEnD,OAAOM,uBAAqBL,EAAWI,EAAaP,CAAiB,CACvE"}