{"version":3,"file":"useOperatingSystem.cjs","sources":["../../../../src/hooks/useOperatingSystem/useOperatingSystem.ts"],"sourcesContent":["import { useState } from 'react';\n\n/** The operating system type */\nexport type OperatingSystem = 'android' | 'ios' | 'linux' | 'macos' | 'undetermined' | 'windows';\n\nexport const getOperatingSystem = (): OperatingSystem => {\n  if (typeof window === 'undefined') return 'undetermined';\n\n  const { userAgent } = window.navigator;\n\n  if (/Macintosh|MacIntel|MacPPC|Mac68K/i.test(userAgent)) return 'macos';\n  if (/iPhone|iPad|iPod/i.test(userAgent)) return 'ios';\n  if (/Win32|Win64|Windows|WinCE/i.test(userAgent)) return 'windows';\n  if (/Android/i.test(userAgent)) return 'android';\n  if (/Linux/i.test(userAgent)) return 'linux';\n\n  return 'undetermined';\n};\n\n/**\n * @name useOperatingSystem\n * @description - Hook that returns the operating system of the current browser\n * @category User\n *\n * @returns {OperatingSystem} The operating system\n *\n * @example\n * const operatingSystem = useOperatingSystem();\n */\nexport const useOperatingSystem = () => {\n  const [osOperatingSystem] = useState<OperatingSystem>(getOperatingSystem());\n  return osOperatingSystem;\n};\n"],"names":["getOperatingSystem","userAgent","useOperatingSystem","osOperatingSystem","useState"],"mappings":"yGAKaA,EAAqB,IAAuB,CACvD,GAAI,OAAO,OAAW,IAAa,MAAO,eAE1C,KAAM,CAAE,UAAAC,GAAc,OAAO,UAE7B,MAAI,oCAAoC,KAAKA,CAAS,EAAU,QAC5D,oBAAoB,KAAKA,CAAS,EAAU,MAC5C,6BAA6B,KAAKA,CAAS,EAAU,UACrD,WAAW,KAAKA,CAAS,EAAU,UACnC,SAAS,KAAKA,CAAS,EAAU,QAE9B,cACT,EAYaC,EAAqB,IAAM,CACtC,KAAM,CAACC,CAAiB,EAAIC,EAAAA,SAA0BJ,GAAoB,EAC1E,OAAOG,CACT"}