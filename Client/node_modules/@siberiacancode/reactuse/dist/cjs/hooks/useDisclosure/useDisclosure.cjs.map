{"version":3,"file":"useDisclosure.cjs","sources":["../../../../src/hooks/useDisclosure/useDisclosure.ts"],"sourcesContent":["import { useState } from 'react';\n\n/** The use disclosure options type */\nexport interface UseDisclosureOptions {\n  /** The callback function to be invoked on close */\n  onClose?: () => void;\n  /** The callback function to be invoked on open */\n  onOpen?: () => void;\n}\n\n/** The use disclosure return type */\nexport interface UseDisclosureReturn {\n  /** The opened value */\n  opened: boolean;\n  /** Function to close the modal */\n  close: () => void;\n  /** Function to open the modal */\n  open: () => void;\n  /** Function to toggle the modal */\n  toggle: () => void;\n}\n\n/**\n * @name useDisclosure\n * @description - Hook that allows you to open and close a modal\n * @category State\n *\n * @param {boolean} [initialValue=false] The initial value of the component\n * @param {() => void} [options.onOpen] The callback function to be invoked on open\n * @param {() => void} [options.onClose] The callback function to be invoked on close\n * @returns {UseDisclosureReturn} An object with the opened, open, close, and toggle properties\n *\n * @example\n * const { opened, open, close, toggle } = useDisclosure();\n */\nexport const useDisclosure = (\n  initialValue = false,\n  options?: UseDisclosureOptions\n): UseDisclosureReturn => {\n  const [opened, setOpened] = useState(initialValue);\n\n  const open = () =>\n    setOpened((opened) => {\n      if (!opened) {\n        options?.onOpen?.();\n        return true;\n      }\n      return opened;\n    });\n\n  const close = () =>\n    setOpened((opened) => {\n      if (opened) {\n        options?.onClose?.();\n        return false;\n      }\n      return opened;\n    });\n\n  const toggle = () => (opened ? close() : open());\n\n  return { opened, open, close, toggle };\n};\n"],"names":["useDisclosure","initialValue","options","opened","setOpened","useState","open","close"],"mappings":"yGAmCaA,EAAgB,CAC3BC,EAAe,GACfC,IACwB,CACxB,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAASJ,CAAY,EAE3CK,EAAO,IACXF,EAAWD,GACJA,IACHD,GAAS,SAAA,EACF,GAGV,EAEGK,EAAQ,IACZH,EAAWD,GACLA,IACFD,GAAS,UAAA,EACF,GAGV,EAIH,MAAO,CAAE,OAAAC,EAAQ,KAAAG,EAAM,MAAAC,EAAO,OAFf,IAAOJ,EAASI,EAAA,EAAUD,EAAA,CAEX,CAChC"}