{"version":3,"file":"useStep.cjs","sources":["../../../../src/hooks/useStep/useStep.ts"],"sourcesContent":["import { useRef, useState } from 'react';\n\n/** The use step params type */\nexport interface UseStepParams {\n  /** Initial value for step */\n  initial: number;\n  /** Maximum value for step */\n  max: number;\n}\n\n/** The use step return type */\nexport interface UseStepReturn {\n  /** Counts of steps */\n  counts: number;\n  /** Current value of step */\n  currentStep: number;\n  /** Boolean value if current step is first */\n  isFirst: boolean;\n  /** Boolean value if current step is last */\n  isLast: boolean;\n  /** Go to back step */\n  back: () => void;\n  /** Go to next step */\n  next: () => void;\n  /** Reset current step to initial value */\n  reset: () => void;\n  /** Go to custom step */\n  set: (value: number | 'first' | 'last') => void;\n}\n\nconst FIRST_STEP_VALUE = 1;\n\n/**\n * @name useStep\n * @description - Hook that create stepper\n * @category State\n *\n * @overload\n * @param {number} max Maximum number of steps\n * @returns {UseStepReturn} An object contains variables and functions to change the step\n *\n * @example\n * const stepper = useStep(5);\n *\n * @overload\n * @param {number} params.max Maximum number of steps\n * @param {number} params.initial Initial value for step\n * @returns {UseStepReturn} An object contains variables and functions to change the step\n *\n * @example\n * const stepper = useStep({ initial: 2, max: 5 });\n */\nexport const useStep = (params: number | UseStepParams): UseStepReturn => {\n  const max = typeof params === 'object' ? params.max : params;\n  const initial = typeof params === 'object' ? params.initial : FIRST_STEP_VALUE;\n\n  const initialStep = useRef(\n    initial > max || initial < FIRST_STEP_VALUE ? FIRST_STEP_VALUE : initial\n  );\n  const [currentStep, setCurrentStep] = useState(initial);\n\n  const isFirst = currentStep === FIRST_STEP_VALUE;\n  const isLast = currentStep === max;\n\n  const next = () => {\n    if (isLast) return;\n    setCurrentStep((prevStep) => prevStep + 1);\n  };\n\n  const back = () => {\n    if (isFirst) return;\n    setCurrentStep((prevStep) => prevStep - 1);\n  };\n\n  const reset = () => setCurrentStep(initialStep.current);\n\n  const set = (value: number | 'first' | 'last') => {\n    if (value === 'first') return setCurrentStep(initialStep.current);\n    if (value === 'last') return setCurrentStep(max);\n    if (value >= max) return setCurrentStep(max);\n    if (value <= FIRST_STEP_VALUE) return setCurrentStep(FIRST_STEP_VALUE);\n    setCurrentStep(value);\n  };\n\n  return {\n    counts: max,\n    currentStep,\n    isFirst,\n    isLast,\n    next,\n    back,\n    reset,\n    set\n  };\n};\n"],"names":["FIRST_STEP_VALUE","useStep","params","max","initial","initialStep","useRef","currentStep","setCurrentStep","useState","isFirst","isLast","prevStep","value"],"mappings":"yGA8BMA,EAAmB,EAsBZC,EAAWC,GAAkD,CACxE,MAAMC,EAAM,OAAOD,GAAW,SAAWA,EAAO,IAAMA,EAChDE,EAAU,OAAOF,GAAW,SAAWA,EAAO,QAAUF,EAExDK,EAAcC,EAAAA,OAClBF,EAAUD,GAAOC,EAAUJ,EAAmBA,EAAmBI,CAAA,EAE7D,CAACG,EAAaC,CAAc,EAAIC,EAAAA,SAASL,CAAO,EAEhDM,EAAUH,IAAgBP,EAC1BW,EAASJ,IAAgBJ,EAsB/B,MAAO,CACL,OAAQA,EACR,YAAAI,EACA,QAAAG,EACA,OAAAC,EACA,KAzBW,IAAM,CACbA,GACJH,EAAgBI,GAAaA,EAAW,CAAC,CAAA,EAwBzC,KArBW,IAAM,CACbF,GACJF,EAAgBI,GAAaA,EAAW,CAAC,CAAA,EAoBzC,MAjBY,IAAMJ,EAAeH,EAAY,OAAO,EAkBpD,IAhBWQ,GAAqC,CAChD,GAAIA,IAAU,QAAS,OAAOL,EAAeH,EAAY,OAAO,EAEhE,GADIQ,IAAU,QACVA,GAASV,EAAK,OAAOK,EAAeL,CAAG,EAC3C,GAAIU,GAASb,EAAkB,OAAOQ,EAAeR,CAAgB,EACrEQ,EAAeK,CAAK,CAAA,CAWpB,CAEJ"}