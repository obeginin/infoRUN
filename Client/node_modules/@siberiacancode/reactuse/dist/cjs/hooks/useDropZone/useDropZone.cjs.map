{"version":3,"file":"useDropZone.cjs","sources":["../../../../src/hooks/useDropZone/useDropZone.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\nexport type DropZoneDataTypes = ((types: string[]) => boolean) | string[];\n\nexport interface UseDropZoneOptions {\n  /** The data types for drop zone */\n  dataTypes?: DropZoneDataTypes;\n  /** The multiple mode for drop zone */\n  multiple?: boolean;\n  /** The on drop callback */\n  onDrop?: (files: File[] | null, event: DragEvent) => void;\n  /** The on enter callback */\n  onEnter?: (event: DragEvent) => void;\n  /** The on leave callback */\n  onLeave?: (event: DragEvent) => void;\n  /** The on over callback */\n  onOver?: (event: DragEvent) => void;\n}\n\nexport interface UseDropZoneReturn {\n  /** The files that was dropped in drop zone */\n  files: File[] | null;\n  /** The over drop zone status */\n  overed: boolean;\n}\n\nexport interface UseDropZone {\n  (\n    target: HookTarget,\n    callback?: (files: File[] | null, event: DragEvent) => void\n  ): UseDropZoneReturn;\n\n  <Target extends Element>(\n    callback?: (files: File[] | null, event: DragEvent) => void,\n    target?: never\n  ): UseDropZoneReturn & {\n    ref: StateRef<Target>;\n  };\n\n  (target: HookTarget, options?: UseDropZoneOptions): UseDropZoneReturn;\n\n  <Target extends Element>(\n    options?: UseDropZoneOptions,\n    target?: never\n  ): UseDropZoneReturn & {\n    ref: StateRef<Target>;\n  };\n}\n\n/**\n * @name useDropZone\n * @description - Hook that provides drop zone functionality\n * @category Elements\n *\n * @overload\n * @template Target The target element\n * @param {Target} target The target element drop zone's\n * @param {DataTypes} [options.dataTypes] The data types\n * @param {boolean} [options.multiple] The multiple mode\n * @param {(files: File[] | null, event: DragEvent) => void} [options.onDrop] The on drop callback function\n * @param {(event: DragEvent) => void} [options.onEnter] The on enter callback function\n * @param {(event: DragEvent) => void} [options.onLeave] The on leave callback function\n * @param {(event: DragEvent) => void} [options.onOver] The on over callback function\n * @returns {UseDropZoneReturn} The object with drop zone states\n *\n * @example\n * const { overed, files } = useDropZone(ref, options);\n *\n * @overload\n * @param {Target} target The target element drop zone's\n * @param {(files: File[] | null, event: DragEvent) => void} [callback] The callback function to be invoked on drop\n * @returns {UseDropZoneReturn} The object with drop zone states\n *\n * @example\n * const { overed, files } = useDropZone(ref, () => console.log('callback'));\n *\n * @overload\n * @param {DataTypes} [options.dataTypes] The data types\n * @param {boolean} [options.multiple] The multiple mode\n * @param {(files: File[] | null, event: DragEvent) => void} [options.onDrop] The on drop callback function\n * @param {(event: DragEvent) => void} [options.onEnter] The on enter callback function\n * @param {(event: DragEvent) => void} [options.onLeave] The on leave callback function\n * @param {(event: DragEvent) => void} [options.onOver] The on over callback function\n * @returns {UseDropZoneReturn & { ref: StateRef<Target> }} The object with drop zone states and ref\n *\n * @example\n * const { ref, overed, files } = useDropZone(options);\n *\n * @overload\n * @param {(files: File[] | null, event: DragEvent) => void} [callback] The callback function to be invoked on drop\n * @returns {UseDropZoneReturn & { ref: StateRef<Target> }} The object with drop zone states and ref\n *\n * @example\n * const { ref, overed, files } = useDropZone(() => console.log('callback'));\n */\n\nexport const useDropZone = ((...params: any[]) => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n\n  const options = (\n    target\n      ? typeof params[1] === 'object'\n        ? params[1]\n        : { onDrop: params[1] }\n      : typeof params[0] === 'object'\n        ? params[0]\n        : { onDrop: params[0] }\n  ) as UseDropZoneOptions;\n\n  const internalRef = useRefState<Element>();\n\n  const counterRef = useRef(0);\n  const [files, setFiles] = useState<File[] | null>(null);\n  const [overed, setOvered] = useState(false);\n\n  const dataTypes = options.dataTypes;\n\n  const getFiles = (event: DragEvent) => {\n    if (!event.dataTransfer) return null;\n    const list = Array.from(event.dataTransfer.files);\n    if (options.multiple) return list;\n    if (!list.length) return null;\n    return [list[0]];\n  };\n\n  const checkDataTypes = (types: string[]) => {\n    if (!dataTypes) return true;\n    if (typeof dataTypes === 'function') return dataTypes(types);\n    if (!dataTypes.length) return true;\n    if (!types.length) return false;\n\n    return types.every((type) => {\n      console.log('type', type);\n      console.log('dataTypes', dataTypes);\n      return dataTypes.some((dataType) => type.includes(dataType));\n    });\n  };\n\n  const checkValidity = (items: DataTransferItemList) => {\n    const types = Array.from(items).map((item) => item.type);\n    const dataTypesValid = checkDataTypes(types);\n    const multipleFilesValid = options.multiple || items.length <= 1;\n\n    return dataTypesValid && multipleFilesValid;\n  };\n\n  useEffect(() => {\n    if (!target && !internalRef.state) return;\n\n    const element = target ? getElement(target) : internalRef.current;\n\n    if (!element) return;\n\n    const onEvent = (event: DragEvent, type: 'drop' | 'enter' | 'leave' | 'over') => {\n      if (!event.dataTransfer) return;\n\n      const isValid = checkValidity(event.dataTransfer.items);\n      if (!isValid) {\n        event.dataTransfer.dropEffect = 'none';\n        return;\n      }\n\n      event.preventDefault();\n      event.dataTransfer.dropEffect = 'copy';\n\n      const currentFiles = getFiles(event);\n\n      if (type === 'drop') {\n        counterRef.current = 0;\n        setOvered(false);\n        setFiles(currentFiles);\n        options.onDrop?.(currentFiles, event);\n        return;\n      }\n\n      if (type === 'enter') {\n        counterRef.current += 1;\n        setOvered(true);\n        options.onEnter?.(event);\n        return;\n      }\n\n      if (type === 'leave') {\n        counterRef.current -= 1;\n        if (counterRef.current !== 0) return;\n        setOvered(false);\n        options.onLeave?.(event);\n        return;\n      }\n\n      if (type === 'over') options.onOver?.(event);\n    };\n\n    const onDrop = ((event: DragEvent) => onEvent(event, 'drop')) as EventListener;\n    const onDragOver = ((event: DragEvent) => onEvent(event, 'over')) as EventListener;\n    const onDragEnter = ((event: DragEvent) => onEvent(event, 'enter')) as EventListener;\n    const onDragLeave = ((event: DragEvent) => onEvent(event, 'leave')) as EventListener;\n\n    element.addEventListener('dragenter', onDragEnter);\n    element.addEventListener('dragover', onDragOver);\n    element.addEventListener('dragleave', onDragLeave);\n    element.addEventListener('drop', onDrop);\n\n    return () => {\n      element.removeEventListener('dragenter', onDragEnter);\n      element.removeEventListener('dragover', onDragOver);\n      element.removeEventListener('dragleave', onDragLeave);\n      element.removeEventListener('drop', onDrop);\n    };\n  }, [target, internalRef.current]);\n\n  if (target) return { overed, files };\n  return { ref: internalRef, overed, files };\n}) as UseDropZone;\n"],"names":["useDropZone","params","target","isTarget","options","internalRef","useRefState","counterRef","useRef","files","setFiles","useState","overed","setOvered","dataTypes","getFiles","event","list","checkDataTypes","types","type","dataType","checkValidity","items","item","dataTypesValid","multipleFilesValid","useEffect","element","getElement","onEvent","currentFiles","onDrop","onDragOver","onDragEnter","onDragLeave"],"mappings":"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"}