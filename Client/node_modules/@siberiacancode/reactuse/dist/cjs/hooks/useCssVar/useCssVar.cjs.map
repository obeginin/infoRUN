{"version":3,"file":"useCssVar.cjs","sources":["../../../../src/hooks/useCssVar/useCssVar.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\n/** The css variable return type */\nexport interface UseCssVarReturn {\n  /** The value of the CSS variable */\n  value: string;\n  /** Remove the value of the CSS variable */\n  remove: () => void;\n  /** Set the value of the CSS variable */\n  set: (value: string) => void;\n}\n\nexport interface UseCssVar {\n  <Target extends HTMLElement>(\n    key: string,\n    initialValue?: string\n  ): UseCssVarReturn & {\n    ref: StateRef<Target>;\n  };\n\n  (target: HookTarget, key: string, initialValue?: string): UseCssVarReturn;\n}\n\n/**\n * @name useCssVar\n * @description - Hook that returns the value of a css variable\n * @category Browser\n *\n * @overload\n * @param {string} key The CSS variable key\n * @param {string} initialValue The initial value of the CSS variable\n * @returns {UseCssVarReturn & { ref: StateRef<Element> }} The object containing the value of the CSS variable and ref\n *\n * @example\n * const { ref, value, set, remove } = useCssVar('--color', 'red');\n *\n * @overload\n * @param {HookTarget} target The target element\n * @param {string} key The CSS variable key\n * @param {string} initialValue The initial value of the CSS variable\n * @returns {UseCssVarReturn} The object containing the value of the CSS variable\n *\n * @example\n * const { value, set, remove } = useCssVar(ref, '--color', 'red');\n */\nexport const useCssVar = ((...params: any[]) => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n  const key = (target ? params[1] : params[0]) as string;\n  const initialValue = (target ? params[2] : params[1]) as string | undefined;\n\n  const [value, setValue] = useState(initialValue ?? '');\n  const internalRef = useRefState<HTMLElement>();\n  const elementRef = useRef<HTMLElement>(null);\n\n  const set = (value: string) => {\n    if (!elementRef.current) return;\n    const element = elementRef.current;\n\n    if (!element.style) return;\n    element.style.setProperty(key, value);\n    setValue(value);\n  };\n\n  const remove = () => {\n    if (!elementRef.current) return;\n    const element = elementRef.current;\n    if (!element.style) return;\n\n    element.style.removeProperty(key);\n    setValue('');\n  };\n\n  useEffect(() => {\n    if (!initialValue) return;\n\n    const element =\n      ((target ? getElement(target) : internalRef.current) as HTMLElement) ??\n      window.document.documentElement;\n\n    if (!element.style) return;\n    element.style.setProperty(key, initialValue);\n    setValue(initialValue);\n  }, []);\n\n  useEffect(() => {\n    const element =\n      ((target ? getElement(target) : internalRef.current) as HTMLElement) ??\n      window.document.documentElement;\n\n    elementRef.current = element;\n\n    const onChange = () => {\n      const value = window.getComputedStyle(element).getPropertyValue(key)?.trim();\n\n      setValue(value ?? initialValue);\n    };\n\n    const observer = new MutationObserver(onChange);\n\n    observer.observe(element, { attributeFilter: ['style', 'class'] });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [target, internalRef.state]);\n\n  if (target) return { value, set, remove };\n  return { ref: internalRef, value, set, remove };\n}) as UseCssVar;\n"],"names":["useCssVar","params","target","isTarget","key","initialValue","value","setValue","useState","internalRef","useRefState","elementRef","useRef","set","element","remove","useEffect","getElement","onChange","observer"],"mappings":"mPAqDaA,EAAa,IAAIC,IAAkB,CAC9C,MAAMC,EAAUC,EAAAA,SAASF,EAAO,CAAC,CAAC,EAAIA,EAAO,CAAC,EAAI,OAC5CG,EAAOF,EAASD,EAAO,CAAC,EAAIA,EAAO,CAAC,EACpCI,EAAgBH,EAASD,EAAO,CAAC,EAAIA,EAAO,CAAC,EAE7C,CAACK,EAAOC,CAAQ,EAAIC,EAAAA,SAASH,GAAgB,EAAE,EAC/CI,EAAcC,EAAAA,YAAA,EACdC,EAAaC,EAAAA,OAAoB,IAAI,EAErCC,EAAOP,GAAkB,CAC7B,GAAI,CAACK,EAAW,QAAS,OACzB,MAAMG,EAAUH,EAAW,QAEtBG,EAAQ,QACbA,EAAQ,MAAM,YAAYV,EAAKE,CAAK,EACpCC,EAASD,CAAK,EAAA,EAGVS,EAAS,IAAM,CACnB,GAAI,CAACJ,EAAW,QAAS,OACzB,MAAMG,EAAUH,EAAW,QACtBG,EAAQ,QAEbA,EAAQ,MAAM,eAAeV,CAAG,EAChCG,EAAS,EAAE,EAAA,EAqCb,OAlCAS,EAAAA,UAAU,IAAM,CACd,GAAI,CAACX,EAAc,OAEnB,MAAMS,GACFZ,EAASe,aAAWf,CAAM,EAAIO,EAAY,UAC5C,OAAO,SAAS,gBAEbK,EAAQ,QACbA,EAAQ,MAAM,YAAYV,EAAKC,CAAY,EAC3CE,EAASF,CAAY,EAAA,EACpB,EAAE,EAELW,EAAAA,UAAU,IAAM,CACd,MAAMF,GACFZ,EAASe,aAAWf,CAAM,EAAIO,EAAY,UAC5C,OAAO,SAAS,gBAElBE,EAAW,QAAUG,EAErB,MAAMI,EAAW,IAAM,CACrB,MAAMZ,EAAQ,OAAO,iBAAiBQ,CAAO,EAAE,iBAAiBV,CAAG,GAAG,KAAA,EAEtEG,EAASD,GAASD,CAAY,CAAA,EAG1Bc,EAAW,IAAI,iBAAiBD,CAAQ,EAE9C,OAAAC,EAAS,QAAQL,EAAS,CAAE,gBAAiB,CAAC,QAAS,OAAO,EAAG,EAE1D,IAAM,CACXK,EAAS,WAAA,CAAW,CACtB,EACC,CAACjB,EAAQO,EAAY,KAAK,CAAC,EAE1BP,EAAe,CAAE,MAAAI,EAAO,IAAAO,EAAK,OAAAE,CAAA,EAC1B,CAAE,IAAKN,EAAa,MAAAH,EAAO,IAAAO,EAAK,OAAAE,CAAA,CACzC"}