{"version":3,"file":"useEvent.cjs","sources":["../../../../src/hooks/useEvent/useEvent.ts"],"sourcesContent":["import { useCallback, useRef } from 'react';\n\n/**\n * @name useEvent\n * @description - Hook that creates an event and returns a stable reference of it\n * @category Utilities\n *\n * @template Params The type of the params\n * @template Return The type of the return\n * @param {(...args: Params) => Return} callback The callback function\n * @returns {(...args: Params) => Return} The callback\n *\n * @example\n * const onClick = useEvent(() => console.log('clicked'));\n */\nexport const useEvent = <Params extends unknown[], Return>(\n  callback: (...args: Params) => Return\n): ((...args: Params) => Return) => {\n  const internalCallbackRef = useRef<typeof callback>(callback);\n  internalCallbackRef.current = callback;\n\n  return useCallback((...args) => {\n    const fn = internalCallbackRef.current;\n    return fn(...args);\n  }, []);\n};\n"],"names":["useEvent","callback","internalCallbackRef","useRef","useCallback","args","fn"],"mappings":"yGAeaA,EACXC,GACkC,CAClC,MAAMC,EAAsBC,EAAAA,OAAwBF,CAAQ,EAC5D,OAAAC,EAAoB,QAAUD,EAEvBG,EAAAA,YAAY,IAAIC,IAAS,CAC9B,MAAMC,EAAKJ,EAAoB,QAC/B,OAAOI,EAAG,GAAGD,CAAI,CAAA,EAChB,EAAE,CACP"}