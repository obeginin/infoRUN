{"version":3,"file":"useRaf.cjs","sources":["../../../../src/hooks/useRaf/useRaf.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\n/* The use raf params type */\nexport interface UseRafParams {\n  /** The delta between each frame in milliseconds */\n  delta: number;\n  /** The timestamp of the current frame in milliseconds */\n  timestamp: DOMHighResTimeStamp;\n}\n\n/* The use raf type */\nexport type UseRafCallback = (params: UseRafParams) => void;\n\n/* The use raf options type */\nexport interface UseRafOptions {\n  /** The delay between each frame in milliseconds */\n  delay?: number;\n  /** Whether the callback should be enabled */\n  enabled?: boolean;\n}\n\n/* The use raf return type */\nexport interface UseRafReturn {\n  /** Whether the callback is active */\n  active: boolean;\n  /** Function to pause the callback */\n  pause: () => void;\n  /** Function to resume the callback */\n  resume: () => void;\n}\n\n/**\n * @name useRaf\n * @description - Hook that defines the logic for raf callback\n * @category Browser\n *\n * @browserapi requestAnimationFrame https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\n *\n * @param {UseRafCallback} callback The callback to execute\n * @param {number} [options.delay] The delay between each frame in milliseconds\n * @param {boolean} [options.enabled=true] Whether the callback should be enabled\n * @returns {UseRafCallbackReturn} An object of raf callback functions\n *\n * @example\n * useRaf(() => console.log('callback'));\n */\nexport const useRaf = (callback: UseRafCallback, options?: UseRafOptions): UseRafReturn => {\n  const rafIdRef = useRef<number | null>(null);\n  const previousFrameTimestampRef = useRef(0);\n  const [active, setActive] = useState(false);\n  const enabled = options?.enabled ?? true;\n\n  const internalCallbackRef = useRef(callback);\n  internalCallbackRef.current = callback;\n\n  const loop = (timestamp: DOMHighResTimeStamp) => {\n    const delta = timestamp - previousFrameTimestampRef.current;\n\n    if (options?.delay && delta < options?.delay) {\n      rafIdRef.current = window.requestAnimationFrame(loop);\n      return;\n    }\n\n    previousFrameTimestampRef.current = timestamp;\n    internalCallbackRef.current({ delta, timestamp });\n    rafIdRef.current = window.requestAnimationFrame(loop);\n  };\n\n  const resume = () => {\n    if (active) return;\n    setActive(true);\n    previousFrameTimestampRef.current = 0;\n    rafIdRef.current = window.requestAnimationFrame(loop);\n  };\n\n  function pause() {\n    if (!rafIdRef.current) return;\n\n    setActive(false);\n    window.cancelAnimationFrame(rafIdRef.current);\n    rafIdRef.current = null;\n  }\n\n  useEffect(() => {\n    if (!enabled) return;\n    resume();\n\n    return pause;\n  }, [enabled, options?.delay]);\n\n  return {\n    active,\n    pause,\n    resume\n  };\n};\n"],"names":["useRaf","callback","options","rafIdRef","useRef","previousFrameTimestampRef","active","setActive","useState","enabled","internalCallbackRef","loop","timestamp","delta","resume","pause","useEffect"],"mappings":"yGA8CaA,EAAS,CAACC,EAA0BC,IAA0C,CACzF,MAAMC,EAAWC,EAAAA,OAAsB,IAAI,EACrCC,EAA4BD,EAAAA,OAAO,CAAC,EACpC,CAACE,EAAQC,CAAS,EAAIC,EAAAA,SAAS,EAAK,EACpCC,EAAUP,GAAS,SAAW,GAE9BQ,EAAsBN,EAAAA,OAAOH,CAAQ,EAC3CS,EAAoB,QAAUT,EAE9B,MAAMU,EAAQC,GAAmC,CAC/C,MAAMC,EAAQD,EAAYP,EAA0B,QAEpD,GAAIH,GAAS,OAASW,EAAQX,GAAS,MAAO,CAC5CC,EAAS,QAAU,OAAO,sBAAsBQ,CAAI,EACpD,MAAA,CAGFN,EAA0B,QAAUO,EACpCF,EAAoB,QAAQ,CAAE,MAAAG,EAAO,UAAAD,CAAA,CAAW,EAChDT,EAAS,QAAU,OAAO,sBAAsBQ,CAAI,CAAA,EAGhDG,EAAS,IAAM,CACfR,IACJC,EAAU,EAAI,EACdF,EAA0B,QAAU,EACpCF,EAAS,QAAU,OAAO,sBAAsBQ,CAAI,EAAA,EAGtD,SAASI,GAAQ,CACVZ,EAAS,UAEdI,EAAU,EAAK,EACf,OAAO,qBAAqBJ,EAAS,OAAO,EAC5CA,EAAS,QAAU,KAAA,CAGrBa,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAKP,EACL,OAAAK,EAAA,EAEOC,CAAA,EACN,CAACN,EAASP,GAAS,KAAK,CAAC,EAErB,CACL,OAAAI,EACA,MAAAS,EACA,OAAAD,CAAA,CAEJ"}