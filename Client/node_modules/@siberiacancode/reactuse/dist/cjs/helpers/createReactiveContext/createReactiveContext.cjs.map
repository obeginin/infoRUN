{"version":3,"file":"createReactiveContext.cjs","sources":["../../../../src/helpers/createReactiveContext/createReactiveContext.ts"],"sourcesContent":["import type { Context, FC, Provider, ProviderProps, RefObject } from 'react';\n\nimport {\n  createContext,\n  createElement,\n  startTransition,\n  useContext,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\n\nimport { useEvent, useIsomorphicLayoutEffect } from '@/hooks';\n\n/** The create reactive context options type */\nexport interface CreateReactiveContextOptions {\n  /** Display name for the context (useful for debugging) */\n  name?: string;\n  /** Whether to throw an error if context is used outside of Provider */\n  strict?: boolean;\n}\n\n/** The create reactive context return type */\nexport interface CreateReactiveContextReturn<Value> {\n  /** The context instance */\n  instance: Context<ReactiveContextValue<Value>>;\n  /** The Provider component for the context */\n  Provider: Provider<Value>;\n  /** A hook to select a part of the context state */\n  useSelector: <Selected>(selector?: (state: Value) => Selected) => Selected;\n}\n\ntype ContextListener<Value> = (value: Value) => void;\n\ninterface ReactiveContextValue<Value> {\n  /** The listeners for the context */\n  listeners: Set<ContextListener<Value>>;\n  /** The value for the context */\n  value: RefObject<Value>;\n}\n\nconst createProvider = <Value>(originalProvider: Provider<ReactiveContextValue<Value>>) => {\n  const Provider: FC<ProviderProps<Value>> = (props) => {\n    const valueRef = useRef(props.value);\n    const contextValue = useMemo<ReactiveContextValue<Value>>(\n      () => ({\n        value: valueRef,\n        listeners: new Set()\n      }),\n      []\n    );\n\n    useIsomorphicLayoutEffect(() => {\n      if (!Object.is(valueRef.current, props.value)) {\n        valueRef.current = props.value;\n\n        startTransition(() => {\n          contextValue.listeners.forEach((listener) => {\n            listener(valueRef.current);\n          });\n        });\n      }\n    }, [props.value]);\n\n    return createElement(originalProvider, { value: contextValue }, props.children);\n  };\n\n  return Provider as unknown as Provider<ReactiveContextValue<Value>>;\n};\n\nconst createReactiveContextSelector = <Value, Selected>(\n  Context: Context<ReactiveContextValue<Value>>,\n  selector: (state: Value) => Selected,\n  options: CreateReactiveContextOptions = {}\n) => {\n  const context = useContext(Context);\n\n  if (!context && options.strict) {\n    throw new Error(`Context hook ${options.name} must be used inside a Provider`);\n  }\n\n  const [value, setValue] = useState({\n    selected: selector(context.value.current),\n    value: context.value.current\n  });\n\n  const dispatch = useEvent((newValue: Value) => {\n    setValue((prevValue) => {\n      if (Object.is(prevValue.value, newValue)) return prevValue;\n\n      const newSelected = selector(newValue);\n      if (Object.is(prevValue.selected, newSelected)) return prevValue;\n\n      return { value: newValue, selected: newSelected };\n    });\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    context.listeners.add(dispatch);\n    return () => {\n      context.listeners.delete(dispatch);\n    };\n  }, [context.listeners]);\n\n  return value.selected;\n};\n\n/**\n * @name createReactiveContext\n * @description - Creates a typed context selector with optimized updates for state selection\n * @category Helpers\n *\n * @warning - For complex interfaces, we strongly recommend using state management solutions outside of React like createStore, reatom, effector, or zustand instead of context\n *\n * @template Value - The type of value that will be stored in the context\n * @param {Value | undefined} [defaultValue] - Default value for the context\n * @param {CreateReactiveContextOptions<Value>} [options] - Additional options for context creation\n * @returns {CreateReactiveContextReturn<Value>} Object containing context utilities and components\n *\n * @example\n * const { Provider, useSelector, instance } = createReactiveContext<number>(0);\n */\nexport const createReactiveContext = <Value extends Record<string, any>>(\n  defaultValue: Value | undefined = undefined,\n  options: CreateReactiveContextOptions = {}\n) => {\n  const Context = createContext<ReactiveContextValue<Value>>({\n    value: { current: defaultValue as Value },\n    listeners: new Set()\n  });\n\n  const Provider = createProvider(Context.Provider) as unknown as Provider<Value>;\n\n  Context.displayName = options.name;\n\n  function useSelector(): Value;\n  function useSelector<SelectedValue>(selector: (state: Value) => SelectedValue): SelectedValue;\n  function useSelector<SelectedValue>(selector?: (state: Value) => SelectedValue) {\n    return createReactiveContextSelector(\n      Context as unknown as Context<ReactiveContextValue<Value>>,\n      selector ?? ((state) => state as unknown as SelectedValue),\n      options\n    );\n  }\n\n  return { instance: Context, Provider, useSelector };\n};\n"],"names":["createProvider","originalProvider","props","valueRef","useRef","contextValue","useMemo","useIsomorphicLayoutEffect","startTransition","listener","createElement","createReactiveContextSelector","Context","selector","options","context","useContext","value","setValue","useState","dispatch","useEvent","newValue","prevValue","newSelected","createReactiveContext","defaultValue","createContext","Provider","useSelector","state"],"mappings":"yOAyCMA,EAAyBC,GACeC,GAAU,CACpD,MAAMC,EAAWC,EAAAA,OAAOF,EAAM,KAAK,EAC7BG,EAAeC,EAAAA,QACnB,KAAO,CACL,MAAOH,EACP,cAAe,GAAI,GAErB,CAAA,CAAC,EAGHI,OAAAA,EAAAA,0BAA0B,IAAM,CACzB,OAAO,GAAGJ,EAAS,QAASD,EAAM,KAAK,IAC1CC,EAAS,QAAUD,EAAM,MAEzBM,EAAAA,gBAAgB,IAAM,CACpBH,EAAa,UAAU,QAASI,GAAa,CAC3CA,EAASN,EAAS,OAAO,CAAA,CAC1B,CAAA,CACF,EACH,EACC,CAACD,EAAM,KAAK,CAAC,EAETQ,EAAAA,cAAcT,EAAkB,CAAE,MAAOI,CAAA,EAAgBH,EAAM,QAAQ,CAAA,EAM5ES,EAAgC,CACpCC,EACAC,EACAC,EAAwC,CAAA,IACrC,CACH,MAAMC,EAAUC,EAAAA,WAAWJ,CAAO,EAElC,GAAI,CAACG,GAAWD,EAAQ,OACtB,MAAM,IAAI,MAAM,gBAAgBA,EAAQ,IAAI,iCAAiC,EAG/E,KAAM,CAACG,EAAOC,CAAQ,EAAIC,WAAS,CACjC,SAAUN,EAASE,EAAQ,MAAM,OAAO,EACxC,MAAOA,EAAQ,MAAM,OAAA,CACtB,EAEKK,EAAWC,WAAUC,GAAoB,CAC7CJ,EAAUK,GAAc,CACtB,GAAI,OAAO,GAAGA,EAAU,MAAOD,CAAQ,EAAG,OAAOC,EAEjD,MAAMC,EAAcX,EAASS,CAAQ,EACrC,OAAI,OAAO,GAAGC,EAAU,SAAUC,CAAW,EAAUD,EAEhD,CAAE,MAAOD,EAAU,SAAUE,CAAA,CAAY,CACjD,CAAA,CACF,EAEDjB,OAAAA,EAAAA,0BAA0B,KACxBQ,EAAQ,UAAU,IAAIK,CAAQ,EACvB,IAAM,CACXL,EAAQ,UAAU,OAAOK,CAAQ,CAAA,GAElC,CAACL,EAAQ,SAAS,CAAC,EAEfE,EAAM,QACf,EAiBaQ,EAAwB,CACnCC,EAAkC,OAClCZ,EAAwC,CAAA,IACrC,CACH,MAAMF,EAAUe,EAAAA,cAA2C,CACzD,MAAO,CAAE,QAASD,CAAA,EAClB,cAAe,GAAI,CACpB,EAEKE,EAAW5B,EAAeY,EAAQ,QAAQ,EAEhDA,EAAQ,YAAcE,EAAQ,KAI9B,SAASe,EAA2BhB,EAA4C,CAC9E,OAAOF,EACLC,EACAC,IAAciB,GAAUA,GACxBhB,CAAA,CACF,CAGF,MAAO,CAAE,SAAUF,EAAS,SAAAgB,EAAU,YAAAC,CAAA,CACxC"}