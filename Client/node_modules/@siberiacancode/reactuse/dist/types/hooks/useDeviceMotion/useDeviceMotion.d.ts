export interface UseDeviceMotionReturn {
    acceleration: DeviceMotionEventAcceleration;
    accelerationIncludingGravity: DeviceMotionEventAcceleration;
    interval: DeviceMotionEvent['interval'];
    rotationRate: DeviceMotionEventRotationRate;
}
export interface UseDeviceMotionParams {
    /** The delay in milliseconds */
    delay?: number;
    /** Whether to enable the hook */
    enabled?: boolean;
    /** The callback function to be invoked */
    callback?: (event: DeviceMotionEvent) => void;
}
/**
 * @name useDeviceMotion
 * @description - Hook that work with device motion
 * @category Utilities
 *
 * @browserapi DeviceMotionEvent https://developer.mozilla.org/en-US/docs/Web/API/Window/DeviceMotionEvent
 *
 * @param {number} [delay=1000] The delay in milliseconds
 * @param {(event: DeviceMotionEvent) => void} [callback] The callback function to be invoked
 * @param {boolean} [enabled=true] Whether to enable the hook
 * @returns {UseDeviceMotionReturn} The device motion data and interval
 *
 * @example
 * const { interval, rotationRate, acceleration, accelerationIncludingGravity } = useDeviceMotion();
 */
export declare const useDeviceMotion: (params?: UseDeviceMotionParams) => UseDeviceMotionReturn;
