/** The use broadcast channel return type */
export interface UseBroadcastChannelReturn<Data = unknown> {
    /** The underlying BroadcastChannel instance if supported, undefined otherwise */
    channel?: BroadcastChannel;
    /** Whether the channel has been closed */
    closed: boolean;
    /** The most recently received data from other contexts */
    data?: Data;
    /** Error object if any error occurred during channel operations */
    error?: Event;
    /** Whether the BroadcastChannel API is supported in the current environment */
    supported: boolean;
    /** Function to close the channel and clean up resources */
    close: () => void;
    /** Function to send data to other contexts through the channel */
    post: (data: Data) => void;
}
/**
 * @name useBroadcastChannel
 * @description Hook that provides cross-tab/window communication
 * @category Browser
 *
 * @browserapi BroadcastChannel https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel
 *
 * @param {string} name The name of the channel
 * @param {Function} callback A callback function that will be called when a message is received
 * @returns {UseBroadcastChannelReturn} An object containing the channel state and controls
 *
 * @example
 * const { supported, data, post, error } = useBroadcastChannel('channel');
 */
export declare const useBroadcastChannel: <Data = unknown>(name: string, callback?: (data: Data) => void) => UseBroadcastChannelReturn<Data>;
