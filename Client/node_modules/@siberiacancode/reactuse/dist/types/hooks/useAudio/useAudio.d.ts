/** Type sprite map */
export interface SpriteMap {
    /** [start time in seconds, end time in seconds] */
    [key: string]: [number, number];
}
/** Type use audio options */
export interface UseAudioOptions {
    /** Whether audio playback is initially enabled */
    immediately?: boolean;
    /** Whether to stop current playback when starting a new one */
    interrupt?: boolean;
    /** Initial playback speed (0.5 to 2) */
    playbackRate?: number;
    /** Map of named audio segments for sprite-based playback */
    sprite?: SpriteMap;
    /** Initial volume level (0 to 1) */
    volume?: number;
}
/** Type use audio return type */
export interface UseAudioReturn {
    /** Current playback speed (0.5 to 2) */
    playbackRate: number;
    /** Whether audio is currently playing */
    playing: boolean;
    /** Current volume level (0 to 1) */
    volume: number;
    /** Set playback speed (0.5 to 2) */
    changePlaybackRate: (value: number) => void;
    /** Pause audio playback at current position */
    pause: () => void;
    /** Start audio playback from the beginning or specified sprite segment */
    play: (sprite?: string) => Promise<void>;
    /** Set audio volume level (0 to 1) */
    setVolume: (value: number) => void;
    /** Stop audio playback and reset position to start */
    stop: () => void;
}
/**
 * @name useAudio
 * @description - Hook that manages audio playback with sprite support
 * @category Browser
 *
 * @browserapi Audio https://developer.mozilla.org/en-US/docs/Web/API/Audio
 *
 * @template Value The type of the value
 * @param {string} url The URL of the audio file to play
 * @param {UseAudioOptions} [options] Audio configuration options
 * @param {number} [options.volume=1] Initial volume level (0 to 1)
 * @param {number} [options.playbackRate=1] Initial playback speed (0.5 to 2)
 * @param {boolean} [options.interrupt=false] Whether to stop current playback when starting a new one
 * @param {boolean} [options.soundEnabled=true] Whether audio playback is initially enabled
 * @param {SpriteMap} [options.sprite] Map of named audio segments for sprite-based playback
 * @returns {UseAudioReturn} An object containing audio controls and state
 *
 * @example
 * const audio = useAudio("/path/to/sound.mp3");
 */
export declare const useAudio: (src: string, options?: UseAudioOptions) => UseAudioReturn;
