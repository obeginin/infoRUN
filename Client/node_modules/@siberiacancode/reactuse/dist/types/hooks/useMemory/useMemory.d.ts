declare global {
    interface Performance {
        memory: {
            readonly jsHeapSizeLimit: number;
            readonly totalJSHeapSize: number;
            readonly usedJSHeapSize: number;
        };
    }
}
/** The use memory return type */
export interface UseMemoryReturn {
    /** The memory supported status */
    supported: boolean;
    /** The current memory usage */
    value: Performance['memory'];
}
/**
 * @name useMemory
 * @description - Hook that gives you current memory usage
 * @category Browser
 *
 * @browserapi performance.memory https://developer.mozilla.org/en-US/docs/Web/API/Performance/memory
 *
 * @returns {UseMemoryReturn} An object containing the current memory usage
 *
 * @example
 * const { supported, value } = useMemory();
 */
export declare const useMemory: () => UseMemoryReturn;
