export interface UseRafParams {
    /** The delta between each frame in milliseconds */
    delta: number;
    /** The timestamp of the current frame in milliseconds */
    timestamp: DOMHighResTimeStamp;
}
export type UseRafCallback = (params: UseRafParams) => void;
export interface UseRafOptions {
    /** The delay between each frame in milliseconds */
    delay?: number;
    /** Whether the callback should be enabled */
    enabled?: boolean;
}
export interface UseRafReturn {
    /** Whether the callback is active */
    active: boolean;
    /** Function to pause the callback */
    pause: () => void;
    /** Function to resume the callback */
    resume: () => void;
}
/**
 * @name useRaf
 * @description - Hook that defines the logic for raf callback
 * @category Browser
 *
 * @browserapi requestAnimationFrame https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame
 *
 * @param {UseRafCallback} callback The callback to execute
 * @param {number} [options.delay] The delay between each frame in milliseconds
 * @param {boolean} [options.enabled=true] Whether the callback should be enabled
 * @returns {UseRafCallbackReturn} An object of raf callback functions
 *
 * @example
 * useRaf(() => console.log('callback'));
 */
export declare const useRaf: (callback: UseRafCallback, options?: UseRafOptions) => UseRafReturn;
