declare global {
    interface ScreenOrientation {
        lock: (orientation: OrientationLockType) => Promise<void>;
    }
}
export interface UseOrientationValue {
    /** The current angle */
    angle: number;
    /** The current orientation type */
    orientationType: OrientationType;
}
export type OrientationLockType = 'any' | 'landscape-primary' | 'landscape-secondary' | 'landscape' | 'natural' | 'portrait-primary' | 'portrait-secondary' | 'portrait';
export interface useOrientationReturn {
    /** Whether the screen orientation is supported */
    supported: boolean;
    /** The current screen orientation value */
    value: UseOrientationValue;
    /** Lock the screen orientation */
    lock: (orientation: OrientationLockType) => void;
    /** Unlock the screen orientation */
    unlock: () => void;
}
/**
 * @name useOrientation
 * @description - Hook that provides the current screen orientation
 * @category Sensors
 *
 * @browserapi screen.orientation https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation
 *
 * @returns {useOrientationReturn} The current screen orientation
 *
 * @example
 * const { supported, value, lock, unlock } = useOrientation();
 */
export declare const useOrientation: () => useOrientationReturn;
