import { HookTarget } from '../../utils/helpers';
import { StateRef } from '../useRefState/useRefState';
/** The use hover options type */
export interface UseHoverOptions {
    /** The on entry callback */
    onEntry?: (event: Event) => void;
    /** The on leave callback */
    onLeave?: (event: Event) => void;
}
export interface UseHoverReturn {
    value: boolean;
}
export interface UseHover {
    (target: HookTarget, callback?: (event: Event) => void): boolean;
    (target: HookTarget, options?: UseHoverOptions): boolean;
    <Target extends Element>(callback?: (event: Event) => void, target?: never): {
        ref: StateRef<Target>;
    } & UseHoverReturn;
    <Target extends Element>(options?: UseHoverOptions, target?: never): {
        ref: StateRef<Target>;
    } & UseHoverReturn;
}
/**
 * @name useHover
 * @description - Hook that defines the logic when hovering an element
 * @category Elements
 *
 * @overload
 * @param {HookTarget} target The target element to be hovered
 * @param {(event: Event) => void} [callback] The callback function to be invoked on mouse enter
 * @returns {boolean} The state of the hover
 *
 * @example
 * const hovering = useHover(ref, () => console.log('callback'));
 *
 * @overload
 * @param {HookTarget} target The target element to be hovered
 * @param {(event: Event) => void} [options.onEntry] The callback function to be invoked on mouse enter
 * @param {(event: Event) => void} [options.onLeave] The callback function to be invoked on mouse leave
 * @returns {boolean} The state of the hover
 *
 * @example
 * const hovering = useHover(ref, options);
 *
 * @overload
 * @template Target The target element
 * @param {(event: Event) => void} [callback] The callback function to be invoked on mouse enter
 * @returns {{ ref: StateRef<Target> } & UseHoverReturn} The state of the hover
 *
 * @example
 * const [ref, hovering] = useHover(() => console.log('callback'));
 *
 * @overload
 * @template Target The target element
 * @param {(event: Event) => void} [options.onEntry] The callback function to be invoked on mouse enter
 * @param {(event: Event) => void} [options.onLeave] The callback function to be invoked on mouse leave
 * @returns {{ ref: StateRef<Target> } & UseHoverReturn} The state of the hover
 *
 * @example
 * const [ref, hovering] = useHover(options);
 */
export declare const useHover: UseHover;
