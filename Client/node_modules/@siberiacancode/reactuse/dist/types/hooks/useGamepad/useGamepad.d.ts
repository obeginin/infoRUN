declare global {
    interface Gamepad {
        hapticActuators?: GamepadHapticActuator[];
    }
}
/** The use gamepad return type  */
export interface UseGamepadStateReturn {
    /** The gamepad active status */
    active: boolean;
    /** The gamepad state */
    gamepads: Gamepad[];
    /** The gamepad supported status */
    supported: boolean;
}
/**
 * @name useGamepad
 * @description - Hook for getting information about gamepad
 * @category Browser
 *
 * @browserapi navigator.getGamepads https://developer.mozilla.org/en-US/docs/Web/API/Navigator/getGamepads
 *
 * @returns {UseGamepadStateReturn} An object containing the gamepad information
 *
 * @example
 * const { supported, gamepads, active } = useGamepad();
 */
export declare const useGamepad: () => {
    active: boolean;
    supported: boolean;
    gamepads: Gamepad[];
};
export declare const mapGamepadToXbox360Controller: (gamepad: Gamepad) => {
    buttons: {
        a: GamepadButton;
        b: GamepadButton;
        x: GamepadButton;
        y: GamepadButton;
    };
    bumper: {
        left: GamepadButton;
        right: GamepadButton;
    };
    triggers: {
        left: GamepadButton;
        right: GamepadButton;
    };
    stick: {
        left: {
            horizontal: number;
            vertical: number;
            button: GamepadButton;
        };
        right: {
            horizontal: number;
            vertical: number;
            button: GamepadButton;
        };
    };
    dpad: {
        up: GamepadButton;
        down: GamepadButton;
        left: GamepadButton;
        right: GamepadButton;
    };
    back: GamepadButton;
    start: GamepadButton;
};
