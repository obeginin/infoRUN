import { HookTarget } from '../../utils/helpers';
import { StateRef } from '../useRefState/useRefState';
export type DoubleClickEvents = MouseEvent | TouchEvent;
/** The use double click options type */
export interface UseDoubleClickOptions {
    /** The threshold time in milliseconds between clicks */
    threshold?: number;
    /** The callback function to be invoked on single click */
    onSingleClick?: (event: DoubleClickEvents) => void;
}
export interface UseDoubleClick {
    (target: HookTarget, callback: (event: DoubleClickEvents) => void, options?: UseDoubleClickOptions): boolean;
    <Target extends Element>(callback: (event: DoubleClickEvents) => void, options?: UseDoubleClickOptions, target?: never): StateRef<Target>;
}
export declare const DEFAULT_THRESHOLD_TIME = 300;
/**
 * @name useDoubleClick
 * @description - Hook that defines the logic when double clicking an element
 * @category Elements
 *
 * @overload
 * @param {HookTarget} target The target element to be double clicked
 * @param {(event: DoubleClickEvents) => void} callback The callback function to be invoked on double click
 * @param {UseDoubleClickOptions} [options] The options for the double click
 * @returns {boolean} The double clicking state
 *
 * @example
 * useDoubleClick(ref, () => console.log('double clicked'));
 *
 * @overload
 * @template Target The target element
 * @param {(event: DoubleClickEvents) => void} callback The callback function to be invoked on double click
 * @param {UseDoubleClickOptions} [options] The options for the double click
 * @returns {boolean} The double clicking state
 *
 * @example
 * const ref = useDoubleClick(() => console.log('double clicked'));
 *
 * @see {@link https://siberiacancode.github.io/reactuse/functions/hooks/useDoubleClick.html}
 */
export declare const useDoubleClick: UseDoubleClick;
