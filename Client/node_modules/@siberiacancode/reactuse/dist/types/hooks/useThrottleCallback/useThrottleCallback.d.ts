export type ThrottledCallback<Params extends unknown[]> = ((...args: Params) => void) & {
    cancel: () => void;
};
/**
 * @name useThrottleCallback
 * @description - Hook that creates a throttled callback
 * @category Utilities
 *
 * @template Params The type of the params
 * @template Return The type of the return
 * @param {(...args: Params) => Return} callback The callback function
 * @param {number} delay The delay in milliseconds
 * @returns {(...args: Params) => Return} The callback with throttle
 *
 * @example
 * const throttled = useThrottleCallback(() => console.log('callback'), 500);
 */
export declare const useThrottleCallback: <Params extends unknown[], Return>(callback: (...args: Params) => Return, delay: number) => ThrottledCallback<Params>;
