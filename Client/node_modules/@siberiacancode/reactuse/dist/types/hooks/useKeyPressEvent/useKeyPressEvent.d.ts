import { HookTarget } from '../../utils/helpers';
import { StateRef } from '../useRefState/useRefState';
/** The key or keys to listen for */
export type UseKeyPressEventKey = string | string[];
/** The use key press event options type */
export interface UseKeyPressEventOptions {
    /** Whether the event should be captured */
    capture?: boolean;
    /** Whether the event listener should only be triggered once */
    once?: boolean;
    /** Whether the event listener should be passive */
    passive?: boolean;
}
export interface UseKeyPressEvent {
    (target: HookTarget | Window, key: UseKeyPressEventKey, listener: (event: KeyboardEvent) => void, options?: UseKeyPressEventOptions): void;
    <Target extends Element>(key: UseKeyPressEventKey, listener: (event: KeyboardEvent) => void, options?: UseKeyPressEventOptions, target?: never): {
        ref: StateRef<Target>;
    };
}
/**
 * @name useKeyPressEvent
 * @description - Hook that listens for key press events on specified targets
 * @category Sensors
 *
 * @overload
 * @param {UseKeyPressEventKey} key The key or array of keys to listen for.
 * @param {HookTarget | Window} target The target to attach the event listener to.
 * @param {(event: KeyboardEvent) => void} listener The callback function to be executed when the specified key or keys are pressed.
 * @param {UseKeyPressEventOptions} [options] The options for the event listener.
 * @returns {void}
 *
 * @example
 * useKeyPressEvent(ref, 'Enter', () => console.log('pressed'));
 *
 * @overload
 * @template Target extends Element
 * @param {UseKeyPressEventKey} key The key or array of keys to listen for.
 * @param {(event: KeyboardEvent) => void} listener The callback function to be executed when the specified key or keys are pressed.
 * @param {UseKeyPressEventOptions} [options] The options for the event listener.
 * @returns {{ ref: StateRef<Target> }} An object containing the ref
 *
 * @example
 * const ref = useKeyPressEvent('Enter', (event) => console.log('pressed'));
 */
export declare const useKeyPressEvent: UseKeyPressEvent;
