import { jsx as u } from "react/jsx-runtime";
import { createContext as m, useContext as x, useState as v, useMemo as d } from "react";
const P = (n = void 0, o = {}) => {
  const t = m({
    value: n,
    set: () => {
    }
  });
  t.displayName = o.name;
  function i(r) {
    const e = x(t);
    if (!e && o.strict)
      throw new Error(`Context hook ${o.name} must be used inside a Provider`);
    return r ? r(e.value) : e;
  }
  return {
    useSelect: i,
    instance: t,
    Provider: ({ children: r, initialValue: e }) => {
      const [s, a] = v(e ?? n), c = d(
        () => ({
          value: s,
          set: a
        }),
        [s]
      );
      return /* @__PURE__ */ u(t, { value: c, children: r });
    }
  };
};
export {
  P as createContext
};
//# sourceMappingURL=createContext.mjs.map
