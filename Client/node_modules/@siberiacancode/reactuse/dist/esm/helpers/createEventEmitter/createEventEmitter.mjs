import { useState as a, useRef as v, useEffect as S } from "react";
const E = () => {
  const r = /* @__PURE__ */ new Map(), b = (e, t) => {
    r.get(e)?.forEach((n) => n(t));
  }, c = (e, t) => {
    const s = e, n = r.get(s);
    n && (n.delete(t), n.size || r.delete(s));
  }, o = (e, t) => {
    const s = e;
    return r.has(s) || r.set(s, /* @__PURE__ */ new Set()), r.get(e).add(t), () => {
      c(e, t);
    };
  };
  return {
    push: b,
    subscribe: o,
    unsubscribe: c,
    useSubscribe: (e, t) => {
      const [s, n] = a(void 0), u = v(t);
      return u.current = t, S(() => {
        const f = o(e, (i) => {
          n(i), u.current?.(i);
        });
        return () => {
          f();
        };
      }, [e]), s;
    }
  };
};
export {
  E as createEventEmitter
};
//# sourceMappingURL=createEventEmitter.mjs.map
