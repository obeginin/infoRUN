{"version":3,"file":"createReactiveContext.mjs","sources":["../../../../src/helpers/createReactiveContext/createReactiveContext.ts"],"sourcesContent":["import type { Context, FC, Provider, ProviderProps, RefObject } from 'react';\n\nimport {\n  createContext,\n  createElement,\n  startTransition,\n  useContext,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\n\nimport { useEvent, useIsomorphicLayoutEffect } from '@/hooks';\n\n/** The create reactive context options type */\nexport interface CreateReactiveContextOptions {\n  /** Display name for the context (useful for debugging) */\n  name?: string;\n  /** Whether to throw an error if context is used outside of Provider */\n  strict?: boolean;\n}\n\n/** The create reactive context return type */\nexport interface CreateReactiveContextReturn<Value> {\n  /** The context instance */\n  instance: Context<ReactiveContextValue<Value>>;\n  /** The Provider component for the context */\n  Provider: Provider<Value>;\n  /** A hook to select a part of the context state */\n  useSelector: <Selected>(selector?: (state: Value) => Selected) => Selected;\n}\n\ntype ContextListener<Value> = (value: Value) => void;\n\ninterface ReactiveContextValue<Value> {\n  /** The listeners for the context */\n  listeners: Set<ContextListener<Value>>;\n  /** The value for the context */\n  value: RefObject<Value>;\n}\n\nconst createProvider = <Value>(originalProvider: Provider<ReactiveContextValue<Value>>) => {\n  const Provider: FC<ProviderProps<Value>> = (props) => {\n    const valueRef = useRef(props.value);\n    const contextValue = useMemo<ReactiveContextValue<Value>>(\n      () => ({\n        value: valueRef,\n        listeners: new Set()\n      }),\n      []\n    );\n\n    useIsomorphicLayoutEffect(() => {\n      if (!Object.is(valueRef.current, props.value)) {\n        valueRef.current = props.value;\n\n        startTransition(() => {\n          contextValue.listeners.forEach((listener) => {\n            listener(valueRef.current);\n          });\n        });\n      }\n    }, [props.value]);\n\n    return createElement(originalProvider, { value: contextValue }, props.children);\n  };\n\n  return Provider as unknown as Provider<ReactiveContextValue<Value>>;\n};\n\nconst createReactiveContextSelector = <Value, Selected>(\n  Context: Context<ReactiveContextValue<Value>>,\n  selector: (state: Value) => Selected,\n  options: CreateReactiveContextOptions = {}\n) => {\n  const context = useContext(Context);\n\n  if (!context && options.strict) {\n    throw new Error(`Context hook ${options.name} must be used inside a Provider`);\n  }\n\n  const [value, setValue] = useState({\n    selected: selector(context.value.current),\n    value: context.value.current\n  });\n\n  const dispatch = useEvent((newValue: Value) => {\n    setValue((prevValue) => {\n      if (Object.is(prevValue.value, newValue)) return prevValue;\n\n      const newSelected = selector(newValue);\n      if (Object.is(prevValue.selected, newSelected)) return prevValue;\n\n      return { value: newValue, selected: newSelected };\n    });\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    context.listeners.add(dispatch);\n    return () => {\n      context.listeners.delete(dispatch);\n    };\n  }, [context.listeners]);\n\n  return value.selected;\n};\n\n/**\n * @name createReactiveContext\n * @description - Creates a typed context selector with optimized updates for state selection\n * @category Helpers\n *\n * @warning - For complex interfaces, we strongly recommend using state management solutions outside of React like createStore, reatom, effector, or zustand instead of context\n *\n * @template Value - The type of value that will be stored in the context\n * @param {Value | undefined} [defaultValue] - Default value for the context\n * @param {CreateReactiveContextOptions<Value>} [options] - Additional options for context creation\n * @returns {CreateReactiveContextReturn<Value>} Object containing context utilities and components\n *\n * @example\n * const { Provider, useSelector, instance } = createReactiveContext<number>(0);\n */\nexport const createReactiveContext = <Value extends Record<string, any>>(\n  defaultValue: Value | undefined = undefined,\n  options: CreateReactiveContextOptions = {}\n) => {\n  const Context = createContext<ReactiveContextValue<Value>>({\n    value: { current: defaultValue as Value },\n    listeners: new Set()\n  });\n\n  const Provider = createProvider(Context.Provider) as unknown as Provider<Value>;\n\n  Context.displayName = options.name;\n\n  function useSelector(): Value;\n  function useSelector<SelectedValue>(selector: (state: Value) => SelectedValue): SelectedValue;\n  function useSelector<SelectedValue>(selector?: (state: Value) => SelectedValue) {\n    return createReactiveContextSelector(\n      Context as unknown as Context<ReactiveContextValue<Value>>,\n      selector ?? ((state) => state as unknown as SelectedValue),\n      options\n    );\n  }\n\n  return { instance: Context, Provider, useSelector };\n};\n"],"names":["createProvider","originalProvider","props","valueRef","useRef","contextValue","useMemo","useIsomorphicLayoutEffect","startTransition","listener","createElement","createReactiveContextSelector","Context","selector","options","context","useContext","value","setValue","useState","dispatch","useEvent","newValue","prevValue","newSelected","createReactiveContext","defaultValue","createContext","Provider","useSelector","state"],"mappings":";;;AAyCA,MAAMA,IAAiB,CAAQC,MACc,CAACC,MAAU;AACpD,QAAMC,IAAWC,EAAOF,EAAM,KAAK,GAC7BG,IAAeC;AAAA,IACnB,OAAO;AAAA,MACL,OAAOH;AAAA,MACP,+BAAe,IAAA;AAAA,IAAI;AAAA,IAErB,CAAA;AAAA,EAAC;AAGH,SAAAI,EAA0B,MAAM;AAC9B,IAAK,OAAO,GAAGJ,EAAS,SAASD,EAAM,KAAK,MAC1CC,EAAS,UAAUD,EAAM,OAEzBM,EAAgB,MAAM;AACpB,MAAAH,EAAa,UAAU,QAAQ,CAACI,MAAa;AAC3C,QAAAA,EAASN,EAAS,OAAO;AAAA,MAAA,CAC1B;AAAA,IAAA,CACF;AAAA,EACH,GACC,CAACD,EAAM,KAAK,CAAC,GAETQ,EAAcT,GAAkB,EAAE,OAAOI,EAAA,GAAgBH,EAAM,QAAQ;AAAA,GAM5ES,IAAgC,CACpCC,GACAC,GACAC,IAAwC,CAAA,MACrC;AACH,QAAMC,IAAUC,EAAWJ,CAAO;AAElC,MAAI,CAACG,KAAWD,EAAQ;AACtB,UAAM,IAAI,MAAM,gBAAgBA,EAAQ,IAAI,iCAAiC;AAG/E,QAAM,CAACG,GAAOC,CAAQ,IAAIC,EAAS;AAAA,IACjC,UAAUN,EAASE,EAAQ,MAAM,OAAO;AAAA,IACxC,OAAOA,EAAQ,MAAM;AAAA,EAAA,CACtB,GAEKK,IAAWC,EAAS,CAACC,MAAoB;AAC7C,IAAAJ,EAAS,CAACK,MAAc;AACtB,UAAI,OAAO,GAAGA,EAAU,OAAOD,CAAQ,EAAG,QAAOC;AAEjD,YAAMC,IAAcX,EAASS,CAAQ;AACrC,aAAI,OAAO,GAAGC,EAAU,UAAUC,CAAW,IAAUD,IAEhD,EAAE,OAAOD,GAAU,UAAUE,EAAA;AAAA,IAAY,CACjD;AAAA,EAAA,CACF;AAED,SAAAjB,EAA0B,OACxBQ,EAAQ,UAAU,IAAIK,CAAQ,GACvB,MAAM;AACX,IAAAL,EAAQ,UAAU,OAAOK,CAAQ;AAAA,EAAA,IAElC,CAACL,EAAQ,SAAS,CAAC,GAEfE,EAAM;AACf,GAiBaQ,IAAwB,CACnCC,IAAkC,QAClCZ,IAAwC,CAAA,MACrC;AACH,QAAMF,IAAUe,EAA2C;AAAA,IACzD,OAAO,EAAE,SAASD,EAAA;AAAA,IAClB,+BAAe,IAAA;AAAA,EAAI,CACpB,GAEKE,IAAW5B,EAAeY,EAAQ,QAAQ;AAEhD,EAAAA,EAAQ,cAAcE,EAAQ;AAI9B,WAASe,EAA2BhB,GAA4C;AAC9E,WAAOF;AAAA,MACLC;AAAA,MACAC,MAAa,CAACiB,MAAUA;AAAA,MACxBhB;AAAA,IAAA;AAAA,EACF;AAGF,SAAO,EAAE,UAAUF,GAAS,UAAAgB,GAAU,aAAAC,EAAA;AACxC;"}