import { useRef as l, useEffect as c } from "react";
const n = (e, r) => {
  if (e === r) return !0;
  if (e == null || r == null) return e === r;
  if (typeof e != typeof r) return !1;
  if (typeof e != "object") return e === r;
  if (Array.isArray(e) !== Array.isArray(r)) return !1;
  if (Array.isArray(e))
    return e.length === r.length && e.every((f, s) => n(f, r[s]));
  const t = Object.keys(e), u = Object.keys(r);
  if (t.length !== u.length) return !1;
  for (const f of t)
    if (!u.includes(f) || !n(e[f], r[f])) return !1;
  return !0;
}, i = (e, r) => {
  const t = l(r);
  (!t.current || !n(r, t.current)) && (t.current = r), c(e, t.current);
};
export {
  n as deepEqual,
  i as useShallowEffect
};
//# sourceMappingURL=useShallowEffect.mjs.map
