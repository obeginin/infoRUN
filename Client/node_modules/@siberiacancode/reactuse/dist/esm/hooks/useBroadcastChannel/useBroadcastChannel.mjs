import { useState as n, useRef as p, useEffect as L } from "react";
const w = (s, d) => {
  const o = typeof window < "u" && "BroadcastChannel" in window, [i, c] = n(!1), [l, f] = n(), [v, E] = n(), e = p(void 0);
  L(() => {
    if (!o) return;
    e.current = new BroadcastChannel(s);
    const r = (t) => {
      f(t.data), d?.(t.data);
    }, a = (t) => E(t), u = () => c(!0);
    return e.current.addEventListener("message", r), e.current.addEventListener("messageerror", a), e.current.addEventListener("close", u), () => {
      e.current && (e.current.removeEventListener("message", r), e.current.removeEventListener("messageerror", a), e.current.removeEventListener("close", u), e.current.close());
    };
  }, [s]);
  const g = (r) => {
    console.log("post", r, e.current), e.current && e.current.postMessage(r);
  }, m = () => {
    e.current && (e.current.close(), c(!0));
  };
  return {
    supported: o,
    channel: e.current,
    data: l,
    post: g,
    close: m,
    error: v,
    closed: i
  };
};
export {
  w as useBroadcastChannel
};
//# sourceMappingURL=useBroadcastChannel.mjs.map
