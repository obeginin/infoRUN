{"version":3,"file":"useBluetooth.mjs","sources":["../../../../src/hooks/useBluetooth/useBluetooth.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n/** The use bluetooth return type */\nexport interface UseBluetoothReturn {\n  /** Indicates if bluetooth device is currently connected */\n  connected: boolean;\n  /** Describe connected bluetooth device */\n  device?: BluetoothDevice;\n  /** The GATT server for connected bluetooth device */\n  server?: BluetoothRemoteGATTServer;\n  /** Whether the bluetooth is supported*/\n  supported: boolean;\n  /** Function to request bluetooth device from the user */\n  requestDevice: () => Promise<void>;\n}\n\n/** The use bluetooth options type */\nexport interface UseBluetoothOptions {\n  /** The options to request all bluetooth devices */\n  acceptAllDevices?: boolean;\n  /** Array of filters to apply when scanning bluetooth devices */\n  filters?: BluetoothLEScanFilter[];\n  /** Array of optional services that the application can use */\n  optionalServices?: BluetoothServiceUUID[];\n}\n\n/**\n * @name useBluetooth\n * @description - Hook for getting information about bluetooth\n * @category Browser\n *\n * @browserapi navigator.bluetooth https://developer.mozilla.org/en-US/docs/Web/API/Navigator/bluetooth\n *\n * @param {boolean} [options.acceptAllDevices=false] The options to request all Bluetooth devices\n * @param {Array<BluetoothLEScanFilter>} [options.filters] Array of filters to apply when scanning Bluetooth devices\n * @param {Array<BluetoothServiceUUID>} [options.optionalServices] Array of optional services that the application can use\n * @returns {UseBluetoothReturn} Object containing battery information & Battery API support\n *\n * @example\n * const { supported, connected, device, requestDevice, server } = useBluetooth(options);\n */\nexport const useBluetooth = (options?: UseBluetoothOptions): UseBluetoothReturn => {\n  const supported = typeof navigator !== 'undefined' && 'bluetooth' in navigator;\n  const { acceptAllDevices = false, filters, optionalServices } = options ?? {};\n\n  const [connected, setIsConnected] = useState(false);\n  const [device, setDevice] = useState<BluetoothDevice | undefined>(undefined);\n  const [server, setServer] = useState<BluetoothRemoteGATTServer | undefined>(undefined);\n\n  const requestDevice = async () => {\n    if (!supported) return;\n\n    const selectedDevice = await navigator.bluetooth.requestDevice({\n      acceptAllDevices,\n      optionalServices,\n      ...(filters && { filters, acceptAllDevices: false })\n    });\n\n    setDevice(selectedDevice);\n  };\n\n  useEffect(() => {\n    if (device && device.gatt) {\n      const connectToBluetoothGATTServer = async () => {\n        if (!device.gatt) return;\n        const gattServer = await device.gatt.connect();\n        setServer(gattServer);\n        setIsConnected(gattServer.connected);\n      };\n\n      const reset = () => {\n        setServer(undefined);\n        setDevice(undefined);\n        setIsConnected(false);\n      };\n\n      device.addEventListener('gattserverdisconnected', reset);\n      connectToBluetoothGATTServer();\n\n      return () => {\n        device.removeEventListener('gattserverdisconnected', reset);\n        device.gatt?.disconnect();\n      };\n    }\n  }, [device]);\n\n  return {\n    supported,\n    connected,\n    device,\n    requestDevice,\n    server\n  };\n};\n"],"names":["useBluetooth","options","supported","acceptAllDevices","filters","optionalServices","connected","setIsConnected","useState","device","setDevice","server","setServer","requestDevice","selectedDevice","useEffect","connectToBluetoothGATTServer","gattServer","reset"],"mappings":";AAyCO,MAAMA,IAAe,CAACC,MAAsD;AACjF,QAAMC,IAAY,OAAO,YAAc,OAAe,eAAe,WAC/D,EAAE,kBAAAC,IAAmB,IAAO,SAAAC,GAAS,kBAAAC,EAAA,IAAqBJ,KAAW,CAAA,GAErE,CAACK,GAAWC,CAAc,IAAIC,EAAS,EAAK,GAC5C,CAACC,GAAQC,CAAS,IAAIF,EAAsC,MAAS,GACrE,CAACG,GAAQC,CAAS,IAAIJ,EAAgD,MAAS,GAE/EK,IAAgB,YAAY;AAChC,QAAI,CAACX,EAAW;AAEhB,UAAMY,IAAiB,MAAM,UAAU,UAAU,cAAc;AAAA,MAC7D,kBAAAX;AAAA,MACA,kBAAAE;AAAA,MACA,GAAID,KAAW,EAAE,SAAAA,GAAS,kBAAkB,GAAA;AAAA,IAAM,CACnD;AAED,IAAAM,EAAUI,CAAc;AAAA,EAAA;AAG1B,SAAAC,EAAU,MAAM;AACd,QAAIN,KAAUA,EAAO,MAAM;AACzB,YAAMO,IAA+B,YAAY;AAC/C,YAAI,CAACP,EAAO,KAAM;AAClB,cAAMQ,IAAa,MAAMR,EAAO,KAAK,QAAA;AACrC,QAAAG,EAAUK,CAAU,GACpBV,EAAeU,EAAW,SAAS;AAAA,MAAA,GAG/BC,IAAQ,MAAM;AAClB,QAAAN,EAAU,MAAS,GACnBF,EAAU,MAAS,GACnBH,EAAe,EAAK;AAAA,MAAA;AAGtB,aAAAE,EAAO,iBAAiB,0BAA0BS,CAAK,GACvDF,EAAA,GAEO,MAAM;AACX,QAAAP,EAAO,oBAAoB,0BAA0BS,CAAK,GAC1DT,EAAO,MAAM,WAAA;AAAA,MAAW;AAAA,IAC1B;AAAA,EACF,GACC,CAACA,CAAM,CAAC,GAEJ;AAAA,IACL,WAAAP;AAAA,IACA,WAAAI;AAAA,IACA,QAAAG;AAAA,IACA,eAAAI;AAAA,IACA,QAAAF;AAAA,EAAA;AAEJ;"}