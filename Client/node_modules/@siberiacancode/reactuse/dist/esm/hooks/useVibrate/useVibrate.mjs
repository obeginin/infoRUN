import { useRef as v, useState as l, useEffect as g } from "react";
const d = (a, t = 0) => {
  const e = typeof navigator < "u" && "vibrate" in navigator, r = v(void 0), [o, n] = l(!1), c = (u = a) => {
    e && navigator.vibrate(u);
  }, i = () => {
    e && (navigator.vibrate(0), n(!1), r.current && clearInterval(r.current));
  }, f = () => {
    e && (n(!1), r.current && clearInterval(r.current));
  }, s = (u = t) => {
    e && (r.current && clearInterval(r.current), n(!0), r.current = setInterval(c, u));
  };
  return g(() => {
    if (!(!e || t <= 0))
      return s(t), () => {
        i();
      };
  }, [t, a]), { supported: e, trigger: c, stop: i, active: o, pause: f, resume: s };
};
export {
  d as useVibrate
};
//# sourceMappingURL=useVibrate.mjs.map
