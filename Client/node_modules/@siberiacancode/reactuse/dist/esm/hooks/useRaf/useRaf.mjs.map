{"version":3,"file":"useRaf.mjs","sources":["../../../../src/hooks/useRaf/useRaf.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\n/* The use raf params type */\nexport interface UseRafParams {\n  /** The delta between each frame in milliseconds */\n  delta: number;\n  /** The timestamp of the current frame in milliseconds */\n  timestamp: DOMHighResTimeStamp;\n}\n\n/* The use raf type */\nexport type UseRafCallback = (params: UseRafParams) => void;\n\n/* The use raf options type */\nexport interface UseRafOptions {\n  /** The delay between each frame in milliseconds */\n  delay?: number;\n  /** Whether the callback should be enabled */\n  enabled?: boolean;\n}\n\n/* The use raf return type */\nexport interface UseRafReturn {\n  /** Whether the callback is active */\n  active: boolean;\n  /** Function to pause the callback */\n  pause: () => void;\n  /** Function to resume the callback */\n  resume: () => void;\n}\n\n/**\n * @name useRaf\n * @description - Hook that defines the logic for raf callback\n * @category Browser\n *\n * @browserapi requestAnimationFrame https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\n *\n * @param {UseRafCallback} callback The callback to execute\n * @param {number} [options.delay] The delay between each frame in milliseconds\n * @param {boolean} [options.enabled=true] Whether the callback should be enabled\n * @returns {UseRafCallbackReturn} An object of raf callback functions\n *\n * @example\n * useRaf(() => console.log('callback'));\n */\nexport const useRaf = (callback: UseRafCallback, options?: UseRafOptions): UseRafReturn => {\n  const rafIdRef = useRef<number | null>(null);\n  const previousFrameTimestampRef = useRef(0);\n  const [active, setActive] = useState(false);\n  const enabled = options?.enabled ?? true;\n\n  const internalCallbackRef = useRef(callback);\n  internalCallbackRef.current = callback;\n\n  const loop = (timestamp: DOMHighResTimeStamp) => {\n    const delta = timestamp - previousFrameTimestampRef.current;\n\n    if (options?.delay && delta < options?.delay) {\n      rafIdRef.current = window.requestAnimationFrame(loop);\n      return;\n    }\n\n    previousFrameTimestampRef.current = timestamp;\n    internalCallbackRef.current({ delta, timestamp });\n    rafIdRef.current = window.requestAnimationFrame(loop);\n  };\n\n  const resume = () => {\n    if (active) return;\n    setActive(true);\n    previousFrameTimestampRef.current = 0;\n    rafIdRef.current = window.requestAnimationFrame(loop);\n  };\n\n  function pause() {\n    if (!rafIdRef.current) return;\n\n    setActive(false);\n    window.cancelAnimationFrame(rafIdRef.current);\n    rafIdRef.current = null;\n  }\n\n  useEffect(() => {\n    if (!enabled) return;\n    resume();\n\n    return pause;\n  }, [enabled, options?.delay]);\n\n  return {\n    active,\n    pause,\n    resume\n  };\n};\n"],"names":["useRaf","callback","options","rafIdRef","useRef","previousFrameTimestampRef","active","setActive","useState","enabled","internalCallbackRef","loop","timestamp","delta","resume","pause","useEffect"],"mappings":";AA8CO,MAAMA,IAAS,CAACC,GAA0BC,MAA0C;AACzF,QAAMC,IAAWC,EAAsB,IAAI,GACrCC,IAA4BD,EAAO,CAAC,GACpC,CAACE,GAAQC,CAAS,IAAIC,EAAS,EAAK,GACpCC,IAAUP,GAAS,WAAW,IAE9BQ,IAAsBN,EAAOH,CAAQ;AAC3C,EAAAS,EAAoB,UAAUT;AAE9B,QAAMU,IAAO,CAACC,MAAmC;AAC/C,UAAMC,IAAQD,IAAYP,EAA0B;AAEpD,QAAIH,GAAS,SAASW,IAAQX,GAAS,OAAO;AAC5C,MAAAC,EAAS,UAAU,OAAO,sBAAsBQ,CAAI;AACpD;AAAA,IAAA;AAGF,IAAAN,EAA0B,UAAUO,GACpCF,EAAoB,QAAQ,EAAE,OAAAG,GAAO,WAAAD,EAAA,CAAW,GAChDT,EAAS,UAAU,OAAO,sBAAsBQ,CAAI;AAAA,EAAA,GAGhDG,IAAS,MAAM;AACnB,IAAIR,MACJC,EAAU,EAAI,GACdF,EAA0B,UAAU,GACpCF,EAAS,UAAU,OAAO,sBAAsBQ,CAAI;AAAA,EAAA;AAGtD,WAASI,IAAQ;AACf,IAAKZ,EAAS,YAEdI,EAAU,EAAK,GACf,OAAO,qBAAqBJ,EAAS,OAAO,GAC5CA,EAAS,UAAU;AAAA,EAAA;AAGrB,SAAAa,EAAU,MAAM;AACd,QAAKP;AACL,aAAAK,EAAA,GAEOC;AAAA,EAAA,GACN,CAACN,GAASP,GAAS,KAAK,CAAC,GAErB;AAAA,IACL,QAAAI;AAAA,IACA,OAAAS;AAAA,IACA,QAAAD;AAAA,EAAA;AAEJ;"}