import { useRef as c, useState as w, useEffect as A } from "react";
const R = (a, r) => {
  const e = c(null), n = c(0), [i, o] = w(!1), s = r?.enabled ?? !0, f = c(a);
  f.current = a;
  const t = (u) => {
    const m = u - n.current;
    if (r?.delay && m < r?.delay) {
      e.current = window.requestAnimationFrame(t);
      return;
    }
    n.current = u, f.current({ delta: m, timestamp: u }), e.current = window.requestAnimationFrame(t);
  }, l = () => {
    i || (o(!0), n.current = 0, e.current = window.requestAnimationFrame(t));
  };
  function d() {
    e.current && (o(!1), window.cancelAnimationFrame(e.current), e.current = null);
  }
  return A(() => {
    if (s)
      return l(), d;
  }, [s, r?.delay]), {
    active: i,
    pause: d,
    resume: l
  };
};
export {
  R as useRaf
};
//# sourceMappingURL=useRaf.mjs.map
