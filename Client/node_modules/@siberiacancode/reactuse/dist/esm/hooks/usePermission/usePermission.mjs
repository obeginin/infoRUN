import { useState as u, useEffect as c } from "react";
import { useEvent as m } from "../useEvent/useEvent.mjs";
const v = (e, a) => {
  const n = typeof navigator < "u" && "permissions" in navigator, [i, r] = u("prompt"), s = a?.enabled ?? !0, p = { name: e }, t = m(async () => {
    try {
      const o = await navigator.permissions.query(
        p
      );
      return r(o.state), o.state;
    } catch {
      return r("prompt"), "prompt";
    }
  });
  return c(() => {
    if (!(!n || !s))
      return t(), window.addEventListener("change", t), () => {
        window.removeEventListener("change", t);
      };
  }, [e, s]), {
    state: i,
    supported: n,
    query: t
  };
};
export {
  v as usePermission
};
//# sourceMappingURL=usePermission.mjs.map
