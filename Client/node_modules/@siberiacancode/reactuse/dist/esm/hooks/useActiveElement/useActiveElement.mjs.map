{"version":3,"file":"useActiveElement.mjs","sources":["../../../../src/hooks/useActiveElement/useActiveElement.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\nexport interface UseActiveElement {\n  (): HTMLElement | null;\n\n  <Target extends Element, ActiveElement extends HTMLElement = HTMLElement>(\n    target?: never\n  ): {\n    ref: StateRef<Target>;\n    value: ActiveElement | null;\n  };\n\n  <ActiveElement extends HTMLElement = HTMLElement>(target: HookTarget): ActiveElement | null;\n}\n\n/**\n * @name useActiveElement\n * @description - Hook that returns the active element\n * @category Elements\n *\n * @overload\n * @param {HookTarget} [target=window] The target element to observe active element changes\n * @returns {ActiveElement | null} The active element\n *\n * @example\n * const activeElement = useActiveElement(ref);\n *\n * @overload\n * @template ActiveElement The active element type\n * @returns {{ ref: StateRef<Element>; activeElement: ActiveElement | null }} An object containing the ref and active element\n *\n * @example\n * const { ref, value } = useActiveElement();\n *\n * @see {@link https://siberiacancode.github.io/reactuse/functions/hooks/useActiveElement.html}\n */\nexport const useActiveElement = ((...params: any[]) => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n\n  const [value, setValue] = useState<HTMLElement | null>(null);\n  const internalRef = useRefState(window);\n\n  useEffect(() => {\n    const element = (target ? getElement(target) : internalRef.current) as Element;\n\n    if (!element) return;\n\n    const observer = new MutationObserver((mutations) => {\n      mutations\n        .filter((mutation) => mutation.removedNodes.length)\n        .map((mutation) => Array.from(mutation.removedNodes))\n        .flat()\n        .forEach((node) => {\n          setValue((prevActiveElement) => {\n            if (node === prevActiveElement) return document.activeElement as HTMLElement | null;\n            return prevActiveElement;\n          });\n        });\n    });\n\n    observer.observe(element, {\n      childList: true,\n      subtree: true\n    });\n\n    const onActiveElementChange = () => setValue(document?.activeElement as HTMLElement | null);\n\n    element.addEventListener('focus', onActiveElementChange, true);\n    element.addEventListener('blur', onActiveElementChange, true);\n\n    return () => {\n      observer.disconnect();\n      element.removeEventListener('focus', onActiveElementChange, true);\n      element.removeEventListener('blur', onActiveElementChange, true);\n    };\n  }, [target, internalRef.state]);\n\n  if (target) return value;\n  return {\n    ref: internalRef,\n    value\n  };\n}) as UseActiveElement;\n"],"names":["useActiveElement","params","target","isTarget","value","setValue","useState","internalRef","useRefState","useEffect","element","getElement","observer","mutations","mutation","node","prevActiveElement","onActiveElementChange"],"mappings":";;;;AA4CO,MAAMA,IAAoB,IAAIC,MAAkB;AACrD,QAAMC,IAAUC,EAASF,EAAO,CAAC,CAAC,IAAIA,EAAO,CAAC,IAAI,QAE5C,CAACG,GAAOC,CAAQ,IAAIC,EAA6B,IAAI,GACrDC,IAAcC,EAAY,MAAM;AAqCtC,SAnCAC,EAAU,MAAM;AACd,UAAMC,IAAWR,IAASS,EAAWT,CAAM,IAAIK,EAAY;AAE3D,QAAI,CAACG,EAAS;AAEd,UAAME,IAAW,IAAI,iBAAiB,CAACC,MAAc;AACnD,MAAAA,EACG,OAAO,CAACC,MAAaA,EAAS,aAAa,MAAM,EACjD,IAAI,CAACA,MAAa,MAAM,KAAKA,EAAS,YAAY,CAAC,EACnD,OACA,QAAQ,CAACC,MAAS;AACjB,QAAAV,EAAS,CAACW,MACJD,MAASC,IAA0B,SAAS,gBACzCA,CACR;AAAA,MAAA,CACF;AAAA,IAAA,CACJ;AAED,IAAAJ,EAAS,QAAQF,GAAS;AAAA,MACxB,WAAW;AAAA,MACX,SAAS;AAAA,IAAA,CACV;AAED,UAAMO,IAAwB,MAAMZ,EAAS,UAAU,aAAmC;AAE1F,WAAAK,EAAQ,iBAAiB,SAASO,GAAuB,EAAI,GAC7DP,EAAQ,iBAAiB,QAAQO,GAAuB,EAAI,GAErD,MAAM;AACX,MAAAL,EAAS,WAAA,GACTF,EAAQ,oBAAoB,SAASO,GAAuB,EAAI,GAChEP,EAAQ,oBAAoB,QAAQO,GAAuB,EAAI;AAAA,IAAA;AAAA,EACjE,GACC,CAACf,GAAQK,EAAY,KAAK,CAAC,GAE1BL,IAAeE,IACZ;AAAA,IACL,KAAKG;AAAA,IACL,OAAAH;AAAA,EAAA;AAEJ;"}