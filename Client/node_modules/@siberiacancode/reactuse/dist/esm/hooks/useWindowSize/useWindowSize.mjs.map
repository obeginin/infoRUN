{"version":3,"file":"useWindowSize.mjs","sources":["../../../../src/hooks/useWindowSize/useWindowSize.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n/** The use window size return type */\ninterface UseWindowSizeParams {\n  /** Whether to include the scrollbar in the window size calculation */\n  includeScrollbar?: boolean;\n}\n\n/** The use window size return type */\nexport interface UseWindowSizeReturn {\n  /** The current window height */\n  height: number;\n  /** The current window width */\n  width: number;\n}\n\n/**\n * @name useWindowSize\n * @description - Hook that manages a window size\n * @category Elements\n *\n * @param {number} [params.initialWidth=Number.POSITIVE_INFINITY] The initial window width\n * @param {number} [params.initialHeight=Number.POSITIVE_INFINITY] The initial window height\n * @returns {UseWindowSizeReturn} An object containing the current window width and height\n *\n * @example\n * const { width, height } = useWindowSize();\n */\nexport const useWindowSize = (params?: UseWindowSizeParams) => {\n  const includeScrollbar = params?.includeScrollbar ?? true;\n  const [size, setSize] = useState(() => {\n    if (typeof window === 'undefined') {\n      return {\n        width: Number.POSITIVE_INFINITY,\n        height: Number.POSITIVE_INFINITY\n      };\n    }\n\n    return {\n      width: includeScrollbar ? window.innerWidth : window.document.documentElement.clientWidth,\n      height: includeScrollbar ? window.innerHeight : window.document.documentElement.clientHeight\n    };\n  });\n\n  useEffect(() => {\n    const onResize = () => {\n      if (includeScrollbar) {\n        setSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      } else {\n        setSize({\n          width: window.document.documentElement.clientWidth,\n          height: window.document.documentElement.clientHeight\n        });\n      }\n    };\n\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [params?.includeScrollbar]);\n\n  return size;\n};\n"],"names":["useWindowSize","params","includeScrollbar","size","setSize","useState","useEffect","onResize"],"mappings":";AA4BO,MAAMA,IAAgB,CAACC,MAAiC;AAC7D,QAAMC,IAAmBD,GAAQ,oBAAoB,IAC/C,CAACE,GAAMC,CAAO,IAAIC,EAAS,MAC3B,OAAO,SAAW,MACb;AAAA,IACL,OAAO,OAAO;AAAA,IACd,QAAQ,OAAO;AAAA,EAAA,IAIZ;AAAA,IACL,OAAOH,IAAmB,OAAO,aAAa,OAAO,SAAS,gBAAgB;AAAA,IAC9E,QAAQA,IAAmB,OAAO,cAAc,OAAO,SAAS,gBAAgB;AAAA,EAAA,CAEnF;AAED,SAAAI,EAAU,MAAM;AACd,UAAMC,IAAW,MAAM;AACrB,MACEH,EADEF,IACM;AAAA,QACN,OAAO,OAAO;AAAA,QACd,QAAQ,OAAO;AAAA,MAAA,IAGT;AAAA,QACN,OAAO,OAAO,SAAS,gBAAgB;AAAA,QACvC,QAAQ,OAAO,SAAS,gBAAgB;AAAA,MAAA,CAJzC;AAAA,IAMH;AAGF,kBAAO,iBAAiB,UAAUK,CAAQ,GACnC,MAAM;AACX,aAAO,oBAAoB,UAAUA,CAAQ;AAAA,IAAA;AAAA,EAC/C,GACC,CAACN,GAAQ,gBAAgB,CAAC,GAEtBE;AACT;"}