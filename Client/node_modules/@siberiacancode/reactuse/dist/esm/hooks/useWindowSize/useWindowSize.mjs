import { useState as o, useEffect as r } from "react";
const c = (n) => {
  const e = n?.includeScrollbar ?? !0, [d, t] = o(() => typeof window > "u" ? {
    width: Number.POSITIVE_INFINITY,
    height: Number.POSITIVE_INFINITY
  } : {
    width: e ? window.innerWidth : window.document.documentElement.clientWidth,
    height: e ? window.innerHeight : window.document.documentElement.clientHeight
  });
  return r(() => {
    const i = () => {
      t(e ? {
        width: window.innerWidth,
        height: window.innerHeight
      } : {
        width: window.document.documentElement.clientWidth,
        height: window.document.documentElement.clientHeight
      });
    };
    return window.addEventListener("resize", i), () => {
      window.removeEventListener("resize", i);
    };
  }, [n?.includeScrollbar]), d;
};
export {
  c as useWindowSize
};
//# sourceMappingURL=useWindowSize.mjs.map
