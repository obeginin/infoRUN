{"version":3,"file":"useCssVar.mjs","sources":["../../../../src/hooks/useCssVar/useCssVar.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\n/** The css variable return type */\nexport interface UseCssVarReturn {\n  /** The value of the CSS variable */\n  value: string;\n  /** Remove the value of the CSS variable */\n  remove: () => void;\n  /** Set the value of the CSS variable */\n  set: (value: string) => void;\n}\n\nexport interface UseCssVar {\n  <Target extends HTMLElement>(\n    key: string,\n    initialValue?: string\n  ): UseCssVarReturn & {\n    ref: StateRef<Target>;\n  };\n\n  (target: HookTarget, key: string, initialValue?: string): UseCssVarReturn;\n}\n\n/**\n * @name useCssVar\n * @description - Hook that returns the value of a css variable\n * @category Browser\n *\n * @overload\n * @param {string} key The CSS variable key\n * @param {string} initialValue The initial value of the CSS variable\n * @returns {UseCssVarReturn & { ref: StateRef<Element> }} The object containing the value of the CSS variable and ref\n *\n * @example\n * const { ref, value, set, remove } = useCssVar('--color', 'red');\n *\n * @overload\n * @param {HookTarget} target The target element\n * @param {string} key The CSS variable key\n * @param {string} initialValue The initial value of the CSS variable\n * @returns {UseCssVarReturn} The object containing the value of the CSS variable\n *\n * @example\n * const { value, set, remove } = useCssVar(ref, '--color', 'red');\n */\nexport const useCssVar = ((...params: any[]) => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n  const key = (target ? params[1] : params[0]) as string;\n  const initialValue = (target ? params[2] : params[1]) as string | undefined;\n\n  const [value, setValue] = useState(initialValue ?? '');\n  const internalRef = useRefState<HTMLElement>();\n  const elementRef = useRef<HTMLElement>(null);\n\n  const set = (value: string) => {\n    if (!elementRef.current) return;\n    const element = elementRef.current;\n\n    if (!element.style) return;\n    element.style.setProperty(key, value);\n    setValue(value);\n  };\n\n  const remove = () => {\n    if (!elementRef.current) return;\n    const element = elementRef.current;\n    if (!element.style) return;\n\n    element.style.removeProperty(key);\n    setValue('');\n  };\n\n  useEffect(() => {\n    if (!initialValue) return;\n\n    const element =\n      ((target ? getElement(target) : internalRef.current) as HTMLElement) ??\n      window.document.documentElement;\n\n    if (!element.style) return;\n    element.style.setProperty(key, initialValue);\n    setValue(initialValue);\n  }, []);\n\n  useEffect(() => {\n    const element =\n      ((target ? getElement(target) : internalRef.current) as HTMLElement) ??\n      window.document.documentElement;\n\n    elementRef.current = element;\n\n    const onChange = () => {\n      const value = window.getComputedStyle(element).getPropertyValue(key)?.trim();\n\n      setValue(value ?? initialValue);\n    };\n\n    const observer = new MutationObserver(onChange);\n\n    observer.observe(element, { attributeFilter: ['style', 'class'] });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [target, internalRef.state]);\n\n  if (target) return { value, set, remove };\n  return { ref: internalRef, value, set, remove };\n}) as UseCssVar;\n"],"names":["useCssVar","params","target","isTarget","key","initialValue","value","setValue","useState","internalRef","useRefState","elementRef","useRef","set","element","remove","useEffect","getElement","onChange","observer"],"mappings":";;;;AAqDO,MAAMA,IAAa,IAAIC,MAAkB;AAC9C,QAAMC,IAAUC,EAASF,EAAO,CAAC,CAAC,IAAIA,EAAO,CAAC,IAAI,QAC5CG,IAAOF,IAASD,EAAO,CAAC,IAAIA,EAAO,CAAC,GACpCI,IAAgBH,IAASD,EAAO,CAAC,IAAIA,EAAO,CAAC,GAE7C,CAACK,GAAOC,CAAQ,IAAIC,EAASH,KAAgB,EAAE,GAC/CI,IAAcC,EAAA,GACdC,IAAaC,EAAoB,IAAI,GAErCC,IAAM,CAACP,MAAkB;AAC7B,QAAI,CAACK,EAAW,QAAS;AACzB,UAAMG,IAAUH,EAAW;AAE3B,IAAKG,EAAQ,UACbA,EAAQ,MAAM,YAAYV,GAAKE,CAAK,GACpCC,EAASD,CAAK;AAAA,EAAA,GAGVS,IAAS,MAAM;AACnB,QAAI,CAACJ,EAAW,QAAS;AACzB,UAAMG,IAAUH,EAAW;AAC3B,IAAKG,EAAQ,UAEbA,EAAQ,MAAM,eAAeV,CAAG,GAChCG,EAAS,EAAE;AAAA,EAAA;AAqCb,SAlCAS,EAAU,MAAM;AACd,QAAI,CAACX,EAAc;AAEnB,UAAMS,KACFZ,IAASe,EAAWf,CAAM,IAAIO,EAAY,YAC5C,OAAO,SAAS;AAElB,IAAKK,EAAQ,UACbA,EAAQ,MAAM,YAAYV,GAAKC,CAAY,GAC3CE,EAASF,CAAY;AAAA,EAAA,GACpB,EAAE,GAELW,EAAU,MAAM;AACd,UAAMF,KACFZ,IAASe,EAAWf,CAAM,IAAIO,EAAY,YAC5C,OAAO,SAAS;AAElB,IAAAE,EAAW,UAAUG;AAErB,UAAMI,IAAW,MAAM;AACrB,YAAMZ,IAAQ,OAAO,iBAAiBQ,CAAO,EAAE,iBAAiBV,CAAG,GAAG,KAAA;AAEtE,MAAAG,EAASD,KAASD,CAAY;AAAA,IAAA,GAG1Bc,IAAW,IAAI,iBAAiBD,CAAQ;AAE9C,WAAAC,EAAS,QAAQL,GAAS,EAAE,iBAAiB,CAAC,SAAS,OAAO,GAAG,GAE1D,MAAM;AACX,MAAAK,EAAS,WAAA;AAAA,IAAW;AAAA,EACtB,GACC,CAACjB,GAAQO,EAAY,KAAK,CAAC,GAE1BP,IAAe,EAAE,OAAAI,GAAO,KAAAO,GAAK,QAAAE,EAAA,IAC1B,EAAE,KAAKN,GAAa,OAAAH,GAAO,KAAAO,GAAK,QAAAE,EAAA;AACzC;"}