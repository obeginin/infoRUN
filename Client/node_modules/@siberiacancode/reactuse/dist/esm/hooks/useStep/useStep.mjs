import { useRef as S, useState as x } from "react";
const r = 1, E = (s) => {
  const n = typeof s == "object" ? s.max : s, c = typeof s == "object" ? s.initial : r, o = S(
    c > n || c < r ? r : c
  ), [i, e] = x(c), f = i === r, u = i === n;
  return {
    counts: n,
    currentStep: i,
    isFirst: f,
    isLast: u,
    next: () => {
      u || e((t) => t + 1);
    },
    back: () => {
      f || e((t) => t - 1);
    },
    reset: () => e(o.current),
    set: (t) => {
      if (t === "first") return e(o.current);
      if (t === "last" || t >= n) return e(n);
      if (t <= r) return e(r);
      e(t);
    }
  };
};
export {
  E as useStep
};
//# sourceMappingURL=useStep.mjs.map
