{"version":3,"file":"usePrevious.mjs","sources":["../../../../src/hooks/usePrevious/usePrevious.ts"],"sourcesContent":["import { useRef } from 'react';\n\nexport interface UsePreviousOptions<Value> {\n  equality: (a: Value, b: Value) => boolean;\n}\n\n/**\n * @name usePrevious\n * @description - Hook that returns the previous value\n * @category Utilities\n *\n * @template Value The type of the value\n * @param {Value} value The value to get the previous value\n * @param {(a: Value, b: Value) => boolean} [options.equality] The custom equality function to determine if the value has changed\n * @returns {Value | undefined} The previous value\n *\n * @example\n * const prevValue = usePrevious(value);\n */\nexport const usePrevious = <Value>(value: Value, options?: UsePreviousOptions<Value>) => {\n  const currentRef = useRef<Value>(value);\n  const previousRef = useRef<Value>(undefined);\n\n  const equality = options?.equality ?? Object.is;\n\n  if (!equality(value, currentRef.current)) {\n    previousRef.current = currentRef.current;\n    currentRef.current = value;\n  }\n\n  return previousRef.current;\n};\n"],"names":["usePrevious","value","options","currentRef","useRef","previousRef"],"mappings":";AAmBO,MAAMA,IAAc,CAAQC,GAAcC,MAAwC;AACvF,QAAMC,IAAaC,EAAcH,CAAK,GAChCI,IAAcD,EAAc,MAAS;AAI3C,UAFiBF,GAAS,YAAY,OAAO,IAE/BD,GAAOE,EAAW,OAAO,MACrCE,EAAY,UAAUF,EAAW,SACjCA,EAAW,UAAUF,IAGhBI,EAAY;AACrB;"}