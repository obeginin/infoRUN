{"version":3,"file":"useWizard.mjs","sources":["../../../../src/hooks/useWizard/useWizard.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport interface WizardItem<WizardStepId> {\n  id: WizardStepId;\n  nodes?: WizardStepId[];\n}\n\n/**\n * @name useWizard\n * @description - Hook that manages a wizard\n * @category State\n *\n * @param {WizardItem<WizardStepId>[]} map The map of the wizard\n * @param {WizardStepId} [initialStepId] The initial step id\n * @returns {UseWizardReturn<WizardStepId>} An object containing the current step id and functions to interact with the wizard\n *\n * @example\n * const { currentStepId, set, reset, back, next, history } = useWizard([\n *  { id: 'step1', nodes: ['step2', 'step3'] },\n *  { id: 'step2', nodes: ['step3'] },\n *  { id: 'step3', nodes: [] },\n * ])\n */\nexport const useWizard = <WizardStepId extends string>(\n  map: WizardItem<WizardStepId>[],\n  initialStepId?: WizardStepId\n) => {\n  const initialId = initialStepId ?? map[0].id;\n  const wizardMap = new Map(map.map((wizardItem) => [wizardItem.id, wizardItem]));\n  const [currentStepId, setCurrentStepId] = useState(initialId);\n  const [history, setHistory] = useState<WizardStepId[]>([initialId]);\n\n  const set = (id: WizardStepId) => {\n    if (!wizardMap.get(currentStepId)?.nodes?.includes(id))\n      throw new Error(`Can't go to ${id} from ${currentStepId}`);\n\n    setHistory([...history, id]);\n    setCurrentStepId(id);\n  };\n\n  const back = () => {\n    if (history.length === 1) return;\n\n    const previousStepId = history[history.length - 2];\n    if (!wizardMap.get(currentStepId)?.nodes?.includes(previousStepId))\n      throw new Error(`Can't go to ${previousStepId} from ${currentStepId}`);\n\n    setHistory(history.slice(0, -1));\n    setCurrentStepId(history[history.length - 2]);\n  };\n\n  const reset = () => {\n    setCurrentStepId(initialId);\n    setHistory([initialId]);\n  };\n\n  return { currentStepId, set, reset, back, history };\n};\n"],"names":["useWizard","map","initialStepId","initialId","wizardMap","wizardItem","currentStepId","setCurrentStepId","useState","history","setHistory","id","previousStepId"],"mappings":";AAuBO,MAAMA,IAAY,CACvBC,GACAC,MACG;AACH,QAAMC,IAAYD,KAAiBD,EAAI,CAAC,EAAE,IACpCG,IAAY,IAAI,IAAIH,EAAI,IAAI,CAACI,MAAe,CAACA,EAAW,IAAIA,CAAU,CAAC,CAAC,GACxE,CAACC,GAAeC,CAAgB,IAAIC,EAASL,CAAS,GACtD,CAACM,GAASC,CAAU,IAAIF,EAAyB,CAACL,CAAS,CAAC;AA0BlE,SAAO,EAAE,eAAAG,GAAe,KAxBZ,CAACK,MAAqB;AAChC,QAAI,CAACP,EAAU,IAAIE,CAAa,GAAG,OAAO,SAASK,CAAE;AACnD,YAAM,IAAI,MAAM,eAAeA,CAAE,SAASL,CAAa,EAAE;AAE3D,IAAAI,EAAW,CAAC,GAAGD,GAASE,CAAE,CAAC,GAC3BJ,EAAiBI,CAAE;AAAA,EAAA,GAmBQ,OALf,MAAM;AAClB,IAAAJ,EAAiBJ,CAAS,GAC1BO,EAAW,CAACP,CAAS,CAAC;AAAA,EAAA,GAGY,MAhBvB,MAAM;AACjB,QAAIM,EAAQ,WAAW,EAAG;AAE1B,UAAMG,IAAiBH,EAAQA,EAAQ,SAAS,CAAC;AACjD,QAAI,CAACL,EAAU,IAAIE,CAAa,GAAG,OAAO,SAASM,CAAc;AAC/D,YAAM,IAAI,MAAM,eAAeA,CAAc,SAASN,CAAa,EAAE;AAEvE,IAAAI,EAAWD,EAAQ,MAAM,GAAG,EAAE,CAAC,GAC/BF,EAAiBE,EAAQA,EAAQ,SAAS,CAAC,CAAC;AAAA,EAAA,GAQJ,SAAAA,EAAA;AAC5C;"}