import { useState as a } from "react";
const f = (c, u) => {
  const r = u ?? c[0].id, i = new Map(c.map((t) => [t.id, t])), [o, n] = a(r), [e, s] = a([r]);
  return { currentStepId: o, set: (t) => {
    if (!i.get(o)?.nodes?.includes(t))
      throw new Error(`Can't go to ${t} from ${o}`);
    s([...e, t]), n(t);
  }, reset: () => {
    n(r), s([r]);
  }, back: () => {
    if (e.length === 1) return;
    const t = e[e.length - 2];
    if (!i.get(o)?.nodes?.includes(t))
      throw new Error(`Can't go to ${t} from ${o}`);
    s(e.slice(0, -1)), n(e[e.length - 2]);
  }, history: e };
};
export {
  f as useWizard
};
//# sourceMappingURL=useWizard.mjs.map
