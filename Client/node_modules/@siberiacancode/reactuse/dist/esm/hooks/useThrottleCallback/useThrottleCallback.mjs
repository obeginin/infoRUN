import { useRef as t, useMemo as m } from "react";
const h = (o, u) => {
  const c = t(o), r = t(null), e = t(!1), l = t(u), n = t(null);
  return c.current = o, l.current = u, m(() => {
    const s = () => {
      e.current = !1, n.current && (c.current.apply(void 0, n.current), n.current = null, setTimeout(s, l.current));
    }, f = () => {
      r.current && (clearTimeout(r.current), r.current = null, e.current = !1);
    }, i = function(...a) {
      n.current = a, !e.current && (c.current.apply(this, a), e.current = !0, r.current = setTimeout(s, l.current));
    };
    return i.cancel = f, f(), i;
  }, [u]);
};
export {
  h as useThrottleCallback
};
//# sourceMappingURL=useThrottleCallback.mjs.map
