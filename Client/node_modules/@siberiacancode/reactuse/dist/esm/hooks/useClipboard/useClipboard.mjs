import { useState as a, useEffect as s } from "react";
import { copy as d } from "../../utils/helpers/copy.mjs";
const l = (c) => {
  const [r, o] = a(null), n = c?.enabled ?? !1, e = async () => {
    try {
      const t = await navigator.clipboard.readText();
      o(t);
    } catch {
      o(document.getSelection?.()?.toString() ?? "");
    }
  };
  return s(() => {
    if (n)
      return document.addEventListener("copy", e), document.addEventListener("cut", e), () => {
        document.removeEventListener("copy", e), document.removeEventListener("cut", e);
      };
  }, [n]), { value: r, copy: async (t) => {
    d(t), o(t);
  } };
};
export {
  l as useClipboard
};
//# sourceMappingURL=useClipboard.mjs.map
