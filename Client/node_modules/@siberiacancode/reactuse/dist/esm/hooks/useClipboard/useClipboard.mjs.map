{"version":3,"file":"useClipboard.mjs","sources":["../../../../src/hooks/useClipboard/useClipboard.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { copy } from '@/utils/helpers';\n\n/** The use copy to clipboard return type */\nexport interface UseCopyToClipboardReturn {\n  /** The copied value */\n  value: string | null;\n  /** Function to copy to clipboard  */\n  copy: (value: string) => Promise<void>;\n}\n\n/** The use copy to clipboard params type */\nexport interface UseCopyToClipboardParams {\n  /** Whether the copy to clipboard is enabled */\n  enabled: boolean;\n}\n\n/**\n * @name useClipboard\n * @description - Hook that manages a copy to clipboard\n * @category Browser\n *\n * @browserapi navigator.clipboard https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard\n *\n * @param {boolean} [params.enabled=false] Whether the copy to clipboard is enabled\n * @returns {UseCopyToClipboardReturn} An object containing the boolean state value and utility functions to manipulate the state\n *\n * @example\n * const { value, copy } = useClipboard();\n */\nexport const useClipboard = (params?: UseCopyToClipboardParams): UseCopyToClipboardReturn => {\n  const [value, setValue] = useState<string | null>(null);\n  const enabled = params?.enabled ?? false;\n\n  const set = async () => {\n    try {\n      const value = await navigator.clipboard.readText();\n      setValue(value);\n    } catch {\n      setValue(document.getSelection?.()?.toString() ?? '');\n    }\n  };\n\n  useEffect(() => {\n    if (!enabled) return;\n\n    document.addEventListener('copy', set);\n    document.addEventListener('cut', set);\n    return () => {\n      document.removeEventListener('copy', set);\n      document.removeEventListener('cut', set);\n    };\n  }, [enabled]);\n\n  const copyToClipboard = async (value: string) => {\n    copy(value);\n    setValue(value);\n  };\n\n  return { value, copy: copyToClipboard };\n};\n"],"names":["useClipboard","params","value","setValue","useState","enabled","set","useEffect","copy"],"mappings":";;AA+BO,MAAMA,IAAe,CAACC,MAAgE;AAC3F,QAAM,CAACC,GAAOC,CAAQ,IAAIC,EAAwB,IAAI,GAChDC,IAAUJ,GAAQ,WAAW,IAE7BK,IAAM,YAAY;AACtB,QAAI;AACF,YAAMJ,IAAQ,MAAM,UAAU,UAAU,SAAA;AACxC,MAAAC,EAASD,CAAK;AAAA,IAAA,QACR;AACN,MAAAC,EAAS,SAAS,eAAA,GAAkB,SAAA,KAAc,EAAE;AAAA,IAAA;AAAA,EACtD;AAGF,SAAAI,EAAU,MAAM;AACd,QAAKF;AAEL,sBAAS,iBAAiB,QAAQC,CAAG,GACrC,SAAS,iBAAiB,OAAOA,CAAG,GAC7B,MAAM;AACX,iBAAS,oBAAoB,QAAQA,CAAG,GACxC,SAAS,oBAAoB,OAAOA,CAAG;AAAA,MAAA;AAAA,EACzC,GACC,CAACD,CAAO,CAAC,GAOL,EAAE,OAAAH,GAAO,MALQ,OAAOA,MAAkB;AAC/C,IAAAM,EAAKN,CAAK,GACVC,EAASD,CAAK;AAAA,EAAA,EAGM;AACxB;"}