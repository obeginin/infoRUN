import { useLayoutEffect as p } from "react";
import { useRefState as v } from "../useRefState/useRefState.mjs";
import { isTarget as h } from "../../utils/helpers/isTarget.mjs";
import { getElement as f } from "../../utils/helpers/getElement.mjs";
const E = (...r) => {
  const t = h(r[0]) ? r[0] : void 0, c = t ? r[1] : r[0], { x: s, y: u, behavior: l = "auto", enabled: m = !0 } = c ?? {}, e = v();
  p(() => {
    if (!m || !t && !e.state) return;
    const o = t ? f(t) : e.current;
    o && o.scrollTo({ top: u, left: s, behavior: l });
  }, [t, e.state]);
  const n = (o) => {
    const i = t ? f(t) : e.current;
    if (!i) return;
    const { x: a, y: b, behavior: g } = o ?? {};
    i.scrollTo({ left: a, top: b, behavior: g });
  };
  return t ? { trigger: n } : { ref: e, trigger: n };
};
export {
  E as useScrollTo
};
//# sourceMappingURL=useScrollTo.mjs.map
