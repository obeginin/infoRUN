import { useState as r, useEffect as c } from "react";
const l = () => {
  const e = typeof window < "u" && "screen" in window && "orientation" in window.screen, n = e ? window.screen.orientation : {}, [t, i] = r(() => ({
    angle: n?.angle ?? 0,
    orientationType: n?.type
  }));
  return c(() => {
    if (!e) return;
    const o = () => i({
      angle: n.angle,
      orientationType: n.type
    });
    return window.addEventListener("orientationchange", o), () => {
      window.removeEventListener("orientationchange", o);
    };
  }), {
    supported: e,
    value: t,
    lock: (o) => {
      if (e && typeof n.lock == "function") return n.lock(o);
    },
    unlock: () => {
      e && typeof n.unlock == "function" && n.unlock();
    }
  };
};
export {
  l as useOrientation
};
//# sourceMappingURL=useOrientation.mjs.map
