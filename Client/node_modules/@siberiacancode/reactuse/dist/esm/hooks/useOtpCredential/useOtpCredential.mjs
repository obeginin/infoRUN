import { useState as u, useRef as a } from "react";
const b = (...t) => {
  const c = typeof t[0] == "function" ? t[0] : t[0]?.onSuccess, s = typeof t[0] == "function" ? t[0]?.onError : void 0, e = typeof navigator < "u" && "OTPCredential" in window, [i, n] = u(!1), r = a(new AbortController());
  return { supported: e, abort: () => {
    r.current.abort(), r.current = new AbortController(), r.current.signal.onabort = () => n(!0);
  }, aborted: i, get: async () => {
    if (e) {
      r.current = new AbortController();
      try {
        const o = await navigator.credentials.get({
          otp: { transport: ["sms"] },
          signal: r.current.signal
        });
        return c?.(o), n(!1), o;
      } catch (o) {
        s?.(o);
      }
    }
  } };
};
export {
  b as useOtpCredential
};
//# sourceMappingURL=useOtpCredential.mjs.map
