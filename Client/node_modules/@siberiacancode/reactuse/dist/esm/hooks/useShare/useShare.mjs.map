{"version":3,"file":"useShare.mjs","sources":["../../../../src/hooks/useShare/useShare.ts"],"sourcesContent":["/** The use share options type */\nexport interface UseShareParams {\n  /** Array of files to be shared */\n  files?: File[];\n  /** Text content to be shared */\n  text?: string;\n  /** Title of the content being shared */\n  title?: string;\n  /** URL link to be shared */\n  url?: string;\n}\n\n/** The use share return type */\nexport interface UseShareReturn {\n  /** Whether the Web Share API is supported in the current environment */\n  supported: boolean;\n  /** Function to trigger the native share dialog */\n  trigger: (shareParams: ShareData) => Promise<void>;\n}\n\n/**\n * @name useShare\n * @description - Hook that utilizes the share api\n * @category Browser\n *\n * @browserapi share https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share\n *\n * @param {UseShareParams} [params] The use share options\n * @returns {UseShareReturn}\n *\n * @example\n * const { share, supported } = useShare();\n */\nexport const useShare = (params?: UseShareParams) => {\n  const supported = typeof navigator !== 'undefined' && 'share' in navigator;\n\n  const trigger = async (shareParams: ShareData) => {\n    if (!supported) return;\n\n    const data = {\n      ...params,\n      ...shareParams\n    };\n\n    if (data.files && navigator.canShare({ files: data.files })) navigator.share(data);\n\n    return navigator.share(data);\n  };\n\n  return { trigger, supported };\n};\n"],"names":["useShare","params","supported","shareParams","data"],"mappings":"AAiCO,MAAMA,IAAW,CAACC,MAA4B;AACnD,QAAMC,IAAY,OAAO,YAAc,OAAe,WAAW;AAejE,SAAO,EAAE,SAbO,OAAOC,MAA2B;AAChD,QAAI,CAACD,EAAW;AAEhB,UAAME,IAAO;AAAA,MACX,GAAGH;AAAA,MACH,GAAGE;AAAA,IAAA;AAGL,WAAIC,EAAK,SAAS,UAAU,SAAS,EAAE,OAAOA,EAAK,MAAA,CAAO,KAAG,UAAU,MAAMA,CAAI,GAE1E,UAAU,MAAMA,CAAI;AAAA,EAAA,GAGX,WAAAF,EAAA;AACpB;"}