{"version":3,"file":"useEventSource.mjs","sources":["../../../../src/hooks/useEventSource/useEventSource.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport { getRetry } from '@/utils/helpers';\n\n/** The use event source options type */\nexport interface UseEventSourceOptions<QueryData, Data> extends EventSourceInit {\n  /** Immediately open the connection when calling this hook */\n  immediately?: boolean;\n  /* The placeholder data for the hook */\n  placeholderData?: (() => Data) | Data;\n  /* The retry count of requests */\n  retry?: boolean | number;\n  /* The retry delay of requests */\n  retryDelay?: ((retry: number, event: Event) => number) | number;\n  /* The onError function to be invoked */\n  onError?: (error: Event) => void;\n  /* The onMessage function to be invoked */\n  onMessage?: (event: Event & { data?: Data }) => void;\n  /* The onOpen function to be invoked */\n  onOpen?: () => void;\n  /* The select function to be invoked */\n  select?: (data: QueryData) => Data;\n}\n\n/** The use event source return type */\ninterface UseEventSourceReturn<Data = any> {\n  /** The latest data received via the EventSource */\n  data?: Data;\n  /** The current error */\n  error?: Event;\n  /** The instance of the EventSource */\n  instance?: EventSource;\n  /* The connecting state of the query */\n  isConnecting: boolean;\n  /* The error state of the query */\n  isError: boolean;\n  /* The open state of the query */\n  isOpen: boolean;\n  /** Closes the EventSource connection gracefully */\n  close: () => void;\n  /** Reopen the EventSource connection */\n  open: () => void;\n}\n\n/**\n * @name useEventSource\n * @description - Hook that provides a reactive wrapper for event source\n * @category Browser\n *\n * @browserapi EventSource https://developer.mozilla.org/en-US/docs/Web/API/EventSource\n *\n * @param {string | URL} url The URL of the EventSource\n * @param {string[]} [events=[]] List of events to listen to\n * @param {UseEventSourceOptions} [options={}] Configuration options\n * @returns {UseEventSourceReturn<Data>} The EventSource state and controls\n *\n * @example\n * const { instance, data, isConnecting, isOpen, isError, close, open } = useEventSource('url', ['message']);\n */\nexport const useEventSource = <QueryData = any, Data = QueryData>(\n  url: string | URL,\n  events: string[] = [],\n  options: UseEventSourceOptions<QueryData, Data> = {}\n): UseEventSourceReturn<Data> => {\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const retryCountRef = useRef(options?.retry ? getRetry(options.retry) : 0);\n  const [error, setError] = useState<Event | undefined>(undefined);\n  const [data, setData] = useState<Data | undefined>(options?.placeholderData);\n\n  const eventSourceRef = useRef<EventSource>(undefined);\n\n  const immediately = options.immediately ?? true;\n\n  const close = () => {\n    if (!eventSourceRef.current) return;\n\n    eventSourceRef.current.close();\n    eventSourceRef.current = undefined;\n    setIsOpen(false);\n    setIsConnecting(false);\n    setIsError(false);\n  };\n\n  const open = () => {\n    close();\n\n    const eventSource = new EventSource(url, {\n      withCredentials: options.withCredentials ?? false\n    });\n    eventSourceRef.current = eventSource;\n\n    setIsConnecting(true);\n\n    eventSource.onopen = () => {\n      setIsOpen(true);\n      setIsConnecting(false);\n      setError(undefined);\n      options?.onOpen?.();\n    };\n\n    eventSource.onerror = (event) => {\n      setIsOpen(false);\n      setIsConnecting(false);\n      setIsError(true);\n      setError(event);\n      options?.onError?.(event);\n\n      if (retryCountRef.current > 0) {\n        retryCountRef.current -= 1;\n\n        const retryDelay =\n          typeof options?.retryDelay === 'function'\n            ? options?.retryDelay(retryCountRef.current, event)\n            : options?.retryDelay;\n\n        if (retryDelay) {\n          setTimeout(open, retryDelay);\n          return;\n        }\n      }\n\n      retryCountRef.current = options?.retry ? getRetry(options.retry) : 0;\n    };\n\n    eventSource.onmessage = (event) => {\n      const data = options?.select ? options?.select(event.data) : event.data;\n      setData(data);\n      options?.onMessage?.(event);\n    };\n\n    events.forEach((eventName) => {\n      eventSource.addEventListener(eventName, (event: Event & { data?: Data }) => {\n        setData(event.data);\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (!immediately) return;\n\n    open();\n    return () => {\n      close();\n    };\n  }, [immediately]);\n\n  return {\n    instance: eventSourceRef.current,\n    data,\n    error,\n    isConnecting,\n    isOpen,\n    isError,\n    close,\n    open\n  };\n};\n"],"names":["useEventSource","url","events","options","isConnecting","setIsConnecting","useState","isOpen","setIsOpen","isError","setIsError","retryCountRef","useRef","getRetry","error","setError","data","setData","eventSourceRef","immediately","close","open","eventSource","event","retryDelay","eventName","useEffect"],"mappings":";;AA2DO,MAAMA,IAAiB,CAC5BC,GACAC,IAAmB,CAAA,GACnBC,IAAkD,CAAA,MACnB;AAC/B,QAAM,CAACC,GAAcC,CAAe,IAAIC,EAAS,EAAK,GAChD,CAACC,GAAQC,CAAS,IAAIF,EAAS,EAAK,GACpC,CAACG,GAASC,CAAU,IAAIJ,EAAS,EAAK,GAEtCK,IAAgBC,EAAOT,GAAS,QAAQU,EAASV,EAAQ,KAAK,IAAI,CAAC,GACnE,CAACW,GAAOC,CAAQ,IAAIT,EAA4B,MAAS,GACzD,CAACU,GAAMC,CAAO,IAAIX,EAA2BH,GAAS,eAAe,GAErEe,IAAiBN,EAAoB,MAAS,GAE9CO,IAAchB,EAAQ,eAAe,IAErCiB,IAAQ,MAAM;AAClB,IAAKF,EAAe,YAEpBA,EAAe,QAAQ,MAAA,GACvBA,EAAe,UAAU,QACzBV,EAAU,EAAK,GACfH,EAAgB,EAAK,GACrBK,EAAW,EAAK;AAAA,EAAA,GAGZW,IAAO,MAAM;AACjB,IAAAD,EAAA;AAEA,UAAME,IAAc,IAAI,YAAYrB,GAAK;AAAA,MACvC,iBAAiBE,EAAQ,mBAAmB;AAAA,IAAA,CAC7C;AACD,IAAAe,EAAe,UAAUI,GAEzBjB,EAAgB,EAAI,GAEpBiB,EAAY,SAAS,MAAM;AACzB,MAAAd,EAAU,EAAI,GACdH,EAAgB,EAAK,GACrBU,EAAS,MAAS,GAClBZ,GAAS,SAAA;AAAA,IAAS,GAGpBmB,EAAY,UAAU,CAACC,MAAU;AAO/B,UANAf,EAAU,EAAK,GACfH,EAAgB,EAAK,GACrBK,EAAW,EAAI,GACfK,EAASQ,CAAK,GACdpB,GAAS,UAAUoB,CAAK,GAEpBZ,EAAc,UAAU,GAAG;AAC7B,QAAAA,EAAc,WAAW;AAEzB,cAAMa,IACJ,OAAOrB,GAAS,cAAe,aAC3BA,GAAS,WAAWQ,EAAc,SAASY,CAAK,IAChDpB,GAAS;AAEf,YAAIqB,GAAY;AACd,qBAAWH,GAAMG,CAAU;AAC3B;AAAA,QAAA;AAAA,MACF;AAGF,MAAAb,EAAc,UAAUR,GAAS,QAAQU,EAASV,EAAQ,KAAK,IAAI;AAAA,IAAA,GAGrEmB,EAAY,YAAY,CAACC,MAAU;AACjC,YAAMP,IAAOb,GAAS,SAASA,GAAS,OAAOoB,EAAM,IAAI,IAAIA,EAAM;AACnE,MAAAN,EAAQD,CAAI,GACZb,GAAS,YAAYoB,CAAK;AAAA,IAAA,GAG5BrB,EAAO,QAAQ,CAACuB,MAAc;AAC5B,MAAAH,EAAY,iBAAiBG,GAAW,CAACF,MAAmC;AAC1E,QAAAN,EAAQM,EAAM,IAAI;AAAA,MAAA,CACnB;AAAA,IAAA,CACF;AAAA,EAAA;AAGH,SAAAG,EAAU,MAAM;AACd,QAAKP;AAEL,aAAAE,EAAA,GACO,MAAM;AACX,QAAAD,EAAA;AAAA,MAAM;AAAA,EACR,GACC,CAACD,CAAW,CAAC,GAET;AAAA,IACL,UAAUD,EAAe;AAAA,IACzB,MAAAF;AAAA,IACA,OAAAF;AAAA,IACA,cAAAV;AAAA,IACA,QAAAG;AAAA,IACA,SAAAE;AAAA,IACA,OAAAW;AAAA,IACA,MAAAC;AAAA,EAAA;AAEJ;"}