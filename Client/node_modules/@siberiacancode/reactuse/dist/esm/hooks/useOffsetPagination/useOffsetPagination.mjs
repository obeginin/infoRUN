import { useState as i, useRef as o, useEffect as p } from "react";
const v = ({
  total: E = Number.POSITIVE_INFINITY,
  pageSize: t = 10,
  initialPage: F = 1,
  onPageChange: r = () => {
  },
  onPageCountChange: f = () => {
  },
  onPageSizeChange: I = () => {
  }
} = {}) => {
  const [c, e] = i(F), M = o(r), m = o(f), R = o(I);
  M.current = r, m.current = f, R.current = I;
  const u = Math.max(1, Math.ceil(E / t)), x = c === 1, N = c === u, O = () => {
    if (N) return r({ page: u, pageSize: t });
    e((s) => {
      const n = s + 1;
      return r({ page: n, pageSize: t }), n;
    });
  }, T = () => {
    if (x) return r({ page: 1, pageSize: t });
    e((s) => {
      const n = s - 1;
      return r({ page: n, pageSize: t }), n;
    });
  }, b = (s) => {
    e(s), r({ page: s, pageSize: t });
  };
  return p(() => {
    m.current({ page: c, pageSize: t });
  }, [u]), p(() => {
    R.current({ page: c, pageSize: t });
  }, [t]), {
    page: c,
    set: b,
    currentPageSize: t,
    isFirstPage: x,
    isLastPage: N,
    pageCount: u,
    next: O,
    prev: T
  };
};
export {
  v as useOffsetPagination
};
//# sourceMappingURL=useOffsetPagination.mjs.map
