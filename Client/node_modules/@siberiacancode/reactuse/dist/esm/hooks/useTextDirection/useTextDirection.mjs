import { useRef as a, useState as v, useEffect as g } from "react";
import { useRefState as A } from "../useRefState/useRefState.mjs";
import { isTarget as R } from "../../utils/helpers/isTarget.mjs";
import { getElement as b } from "../../utils/helpers/getElement.mjs";
const E = (...o) => {
  const t = R(o[0]) ? o[0] : void 0, d = (t ? o[1] : o[0]) ?? "ltr", r = A(), n = a(null), i = () => (t ? b(t) : r.current)?.getAttribute("dir") ?? d, [u, c] = v(i()), s = () => {
    n.current && n.current?.removeAttribute("dir");
  }, f = (e) => {
    n.current && (c(e), n.current.setAttribute("dir", e));
  };
  return g(() => {
    if (!t && !r.state) return;
    const e = (t ? b(t) : r.current) ?? document.querySelector("html");
    if (!e) return;
    n.current = e;
    const l = i();
    e.setAttribute("dir", l), c(l);
    const m = new MutationObserver(i);
    return m.observe(e, { attributes: !0 }), () => {
      m.disconnect();
    };
  }, [r.state, t]), t ? { value: u, set: f, remove: s } : {
    ref: r,
    value: u,
    set: f,
    remove: s
  };
};
export {
  E as useTextDirection
};
//# sourceMappingURL=useTextDirection.mjs.map
