{"version":3,"file":"useTextDirection.mjs","sources":["../../../../src/hooks/useTextDirection/useTextDirection.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\n/** The use text direction value type */\nexport type UseTextDirectionValue = 'auto' | 'ltr' | 'rtl';\n\n/** The use text direction return type */\nexport interface UseTextDirectionReturn {\n  /** The current direction */\n  value: UseTextDirectionValue;\n  /*** The function to remove the direction */\n  remove: () => void;\n  /*** The function to set the direction */\n  set: (value: UseTextDirectionValue | null) => void;\n}\n\nexport interface UseTextDirection {\n  (target: HookTarget, initialValue?: UseTextDirectionValue): UseTextDirectionReturn;\n\n  <Target extends Element>(\n    initialValue?: UseTextDirectionValue,\n    target?: never\n  ): UseTextDirectionReturn & { ref: StateRef<Target> };\n}\n\n/**\n * @name useTextDirection\n * @description - Hook that can get and set the direction of the element\n * @category Elements\n *\n * @overload\n * @param {HookTarget} [target=document.querySelector('html')] The target element to observe\n * @param {UseTextDirectionValue} [initialValue = 'ltr'] The initial direction of the element\n * @returns {UseTextDirectionReturn} An object containing the current text direction of the element\n *\n * @example\n * const { value, set, remove } = useTextDirection(ref);\n *\n * @overload\n * @template Target The target element type\n * @param {UseTextDirectionValue} [initialValue = 'ltr'] The initial direction of the element\n * @returns { { ref: StateRef<Target> } & UseTextDirectionReturn } An object containing the current text direction of the element\n *\n * @example\n * const { ref, value, set, remove } = useTextDirection();\n */\nexport const useTextDirection = ((...params: any[]) => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n  const initialValue = ((target ? params[1] : params[0]) as UseTextDirectionValue) ?? 'ltr';\n\n  const internalRef = useRefState();\n  const elementRef = useRef<Element>(null);\n\n  const getDirection = () => {\n    const element = (target ? getElement(target) : internalRef.current) as Element;\n    return (element?.getAttribute('dir') as UseTextDirectionValue) ?? initialValue;\n  };\n\n  const [value, setValue] = useState<UseTextDirectionValue>(getDirection());\n\n  const remove = () => {\n    if (!elementRef.current) return;\n\n    elementRef.current?.removeAttribute('dir');\n  };\n\n  const set = (value: UseTextDirectionValue) => {\n    if (!elementRef.current) return;\n\n    setValue(value);\n    elementRef.current.setAttribute('dir', value);\n  };\n\n  useEffect(() => {\n    if (!target && !internalRef.state) return;\n\n    const element =\n      ((target ? getElement(target) : internalRef.current) as Element) ??\n      document.querySelector('html');\n    if (!element) return;\n\n    elementRef.current = element;\n\n    const direction = getDirection();\n    element.setAttribute('dir', direction);\n    setValue(direction);\n\n    const observer = new MutationObserver(getDirection);\n\n    observer.observe(element, { attributes: true });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [internalRef.state, target]);\n\n  if (target) return { value, set, remove };\n  return {\n    ref: internalRef,\n    value,\n    set,\n    remove\n  };\n}) as UseTextDirection;\n"],"names":["useTextDirection","params","target","isTarget","initialValue","internalRef","useRefState","elementRef","useRef","getDirection","getElement","value","setValue","useState","remove","set","useEffect","element","direction","observer"],"mappings":";;;;AAqDO,MAAMA,IAAoB,IAAIC,MAAkB;AACrD,QAAMC,IAAUC,EAASF,EAAO,CAAC,CAAC,IAAIA,EAAO,CAAC,IAAI,QAC5CG,KAAiBF,IAASD,EAAO,CAAC,IAAIA,EAAO,CAAC,MAAgC,OAE9EI,IAAcC,EAAA,GACdC,IAAaC,EAAgB,IAAI,GAEjCC,IAAe,OACFP,IAASQ,EAAWR,CAAM,IAAIG,EAAY,UAC1C,aAAa,KAAK,KAA+BD,GAG9D,CAACO,GAAOC,CAAQ,IAAIC,EAAgCJ,GAAc,GAElEK,IAAS,MAAM;AACnB,IAAKP,EAAW,WAEhBA,EAAW,SAAS,gBAAgB,KAAK;AAAA,EAAA,GAGrCQ,IAAM,CAACJ,MAAiC;AAC5C,IAAKJ,EAAW,YAEhBK,EAASD,CAAK,GACdJ,EAAW,QAAQ,aAAa,OAAOI,CAAK;AAAA,EAAA;AA0B9C,SAvBAK,EAAU,MAAM;AACd,QAAI,CAACd,KAAU,CAACG,EAAY,MAAO;AAEnC,UAAMY,KACFf,IAASQ,EAAWR,CAAM,IAAIG,EAAY,YAC5C,SAAS,cAAc,MAAM;AAC/B,QAAI,CAACY,EAAS;AAEd,IAAAV,EAAW,UAAUU;AAErB,UAAMC,IAAYT,EAAA;AAClB,IAAAQ,EAAQ,aAAa,OAAOC,CAAS,GACrCN,EAASM,CAAS;AAElB,UAAMC,IAAW,IAAI,iBAAiBV,CAAY;AAElD,WAAAU,EAAS,QAAQF,GAAS,EAAE,YAAY,IAAM,GAEvC,MAAM;AACX,MAAAE,EAAS,WAAA;AAAA,IAAW;AAAA,EACtB,GACC,CAACd,EAAY,OAAOH,CAAM,CAAC,GAE1BA,IAAe,EAAE,OAAAS,GAAO,KAAAI,GAAK,QAAAD,EAAA,IAC1B;AAAA,IACL,KAAKT;AAAA,IACL,OAAAM;AAAA,IACA,KAAAI;AAAA,IACA,QAAAD;AAAA,EAAA;AAEJ;"}