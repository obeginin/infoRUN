import { useState as l, useEffect as $ } from "react";
const p = () => Object.fromEntries(
  document.cookie.split("; ").map((n) => {
    const [e, ...t] = n.split("="), o = decodeURIComponent(t.join("="));
    return [e, o];
  })
), C = (n, e = {}) => {
  document.cookie = `${encodeURIComponent(n)}=; expires=Thu, 01 Jan 1970 00:00:00 GMT${e.path ? `; path=${e.path}` : ""}${e.domain ? `; domain=${e.domain}` : ""}${e.maxAge ? "; max-age=0" : ""}${e.expires ? "; expires=Thu, 01 Jan 1970 00:00:00 GMT" : ""}${e.secure ? "; secure" : ""}${e.sameSite ? `; samesite=${e.sameSite}` : ""}`;
}, v = (n, e, t = {}) => {
  const o = [`${encodeURIComponent(n)}=${encodeURIComponent(e)}`];
  t.path && o.push(`path=${t.path}`), t.domain && o.push(`domain=${t.domain}`), typeof t.maxAge == "number" && o.push(`max-age=${t.maxAge}`), t.expires && o.push(`expires=${t.expires.toUTCString()}`), t.secure && o.push("secure"), t.httpOnly && o.push("httpOnly"), t.sameSite && o.push(`samesite=${t.sameSite}`), document.cookie = o.join("; ");
}, c = "reactuse-cookie", m = () => window.dispatchEvent(new Event(c)), a = (n, e, t) => {
  v(n, e, t), m();
}, k = (n, e) => {
  C(n, e), m();
}, d = (n) => p()[n], z = (n, e) => {
  const t = typeof e == "object" && e && ("serializer" in e || "deserializer" in e || "initialValue" in e) ? e : void 0, o = t ? t?.initialValue : e;
  if (typeof document > "u")
    return {
      value: typeof o == "function" ? o() : o
    };
  const s = (i) => t?.serializer ? t.serializer(i) : typeof i == "string" ? i : JSON.stringify(i), u = (i) => {
    if (t?.deserializer) return t.deserializer(i);
    if (i !== "undefined")
      try {
        return JSON.parse(i);
      } catch {
        return i;
      }
  }, [f, h] = l(() => {
    const i = d(n);
    if (i === void 0 && o !== void 0) {
      const r = typeof o == "function" ? o() : o;
      return a(n, s(r), t), r;
    }
    return i ? u(i) : void 0;
  });
  return $(() => {
    const i = () => {
      const r = d(n);
      h(r ? u(r) : void 0);
    };
    return window.addEventListener(c, i), () => window.removeEventListener(c, i);
  }, [n]), { value: f, set: (i, r) => a(n, s(i), { ...t, ...r }), remove: (i) => k(n, { ...t, ...i }) };
};
export {
  c as COOKIE_EVENT,
  m as dispatchCookieEvent,
  d as getCookie,
  p as getCookies,
  C as removeCookie,
  k as removeCookieItem,
  v as setCookie,
  a as setCookieItem,
  z as useCookie
};
//# sourceMappingURL=useCookie.mjs.map
