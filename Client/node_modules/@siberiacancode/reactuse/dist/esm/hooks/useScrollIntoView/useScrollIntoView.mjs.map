{"version":3,"file":"useScrollIntoView.mjs","sources":["../../../../src/hooks/useScrollIntoView/useScrollIntoView.ts"],"sourcesContent":["import { useEffect } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\n/** The scroll into view options type */\nexport interface UseScrollIntoViewOptions extends ScrollIntoViewOptions {\n  /** Whether to enable the scroll into view */\n  enabled?: boolean;\n}\n\n/** The scroll into view return type */\nexport interface UseScrollIntoViewReturn {\n  /** Function to scroll element into view */\n  trigger: (params?: {\n    behavior?: ScrollBehavior;\n    block?: ScrollLogicalPosition;\n    inline?: ScrollLogicalPosition;\n  }) => void;\n}\n\nexport interface UseScrollIntoView {\n  <Target extends Element>(\n    options?: UseScrollIntoViewOptions,\n    target?: never\n  ): UseScrollIntoViewReturn & { ref: StateRef<Target> };\n\n  (target: HookTarget, options?: UseScrollIntoViewOptions): UseScrollIntoViewReturn;\n}\n\n/**\n * @name useScrollIntoView\n * @description - Hook that provides functionality to scroll an element into view\n * @category Sensors\n *\n * @overload\n * @param {HookTarget} target The target element to scroll into view\n * @param {ScrollBehavior} [options.behavior='smooth'] The scrolling behavior\n * @param {ScrollLogicalPosition} [options.block='start'] The vertical alignment\n * @param {ScrollLogicalPosition} [options.inline='nearest'] The horizontal alignment\n * @returns {UseScrollIntoViewReturn} Object containing scroll function\n *\n * @example\n * const { trigger } = useScrollIntoView(ref);\n *\n * @overload\n * @template Target The target element\n * @param {ScrollBehavior} [options.behavior='smooth'] The scrolling behavior\n * @param {ScrollLogicalPosition} [options.block='start'] The vertical alignment\n * @param {ScrollLogicalPosition} [options.inline='nearest'] The horizontal alignment\n * @returns {UseScrollIntoViewReturn & { ref: StateRef<Target> }} Object containing scroll function and ref\n *\n * @example\n * const { ref, trigger } = useScrollIntoView<HTMLDivElement>();\n */\nexport const useScrollIntoView = ((...params: any[]) => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n  const options = (target ? params[1] : params[0]) as UseScrollIntoViewOptions | undefined;\n\n  const internalRef = useRefState<Element>();\n  const {\n    behavior = 'smooth',\n    block = 'start',\n    inline = 'nearest',\n    enabled = true\n  } = options ?? {};\n\n  useEffect(() => {\n    if (!enabled) return;\n    if (!target && !internalRef.state) return;\n\n    const element = (target ? getElement(target) : internalRef.current) as Element;\n    if (!element) return;\n\n    element.scrollIntoView({\n      behavior,\n      block,\n      inline\n    });\n  }, [target, internalRef.state, enabled]);\n\n  const trigger = (params?: {\n    behavior?: ScrollBehavior;\n    block?: ScrollLogicalPosition;\n    inline?: ScrollLogicalPosition;\n  }) => {\n    const element = (target ? getElement(target) : internalRef.current) as Element;\n    if (!element) return;\n\n    const { behavior, block, inline } = params ?? {};\n\n    element.scrollIntoView({\n      behavior,\n      block,\n      inline\n    });\n  };\n\n  if (target) return { trigger };\n  return { ref: internalRef, trigger };\n}) as UseScrollIntoView;\n"],"names":["useScrollIntoView","params","target","isTarget","options","internalRef","useRefState","behavior","block","inline","enabled","useEffect","element","getElement","trigger"],"mappings":";;;;AA4DO,MAAMA,IAAqB,IAAIC,MAAkB;AACtD,QAAMC,IAAUC,EAASF,EAAO,CAAC,CAAC,IAAIA,EAAO,CAAC,IAAI,QAC5CG,IAAWF,IAASD,EAAO,CAAC,IAAIA,EAAO,CAAC,GAExCI,IAAcC,EAAA,GACd;AAAA,IACJ,UAAAC,IAAW;AAAA,IACX,OAAAC,IAAQ;AAAA,IACR,QAAAC,IAAS;AAAA,IACT,SAAAC,IAAU;AAAA,EAAA,IACRN,KAAW,CAAA;AAEf,EAAAO,EAAU,MAAM;AAEd,QADI,CAACD,KACD,CAACR,KAAU,CAACG,EAAY,MAAO;AAEnC,UAAMO,IAAWV,IAASW,EAAWX,CAAM,IAAIG,EAAY;AAC3D,IAAKO,KAELA,EAAQ,eAAe;AAAA,MACrB,UAAAL;AAAA,MACA,OAAAC;AAAA,MACA,QAAAC;AAAA,IAAA,CACD;AAAA,EAAA,GACA,CAACP,GAAQG,EAAY,OAAOK,CAAO,CAAC;AAEvC,QAAMI,IAAU,CAACb,MAIX;AACJ,UAAMW,IAAWV,IAASW,EAAWX,CAAM,IAAIG,EAAY;AAC3D,QAAI,CAACO,EAAS;AAEd,UAAM,EAAE,UAAAL,GAAU,OAAAC,GAAO,QAAAC,MAAWR,KAAU,CAAA;AAE9C,IAAAW,EAAQ,eAAe;AAAA,MACrB,UAAAL;AAAAA,MACA,OAAAC;AAAAA,MACA,QAAAC;AAAAA,IAAA,CACD;AAAA,EAAA;AAGH,SAAIP,IAAe,EAAE,SAAAY,EAAA,IACd,EAAE,KAAKT,GAAa,SAAAS,EAAA;AAC7B;"}