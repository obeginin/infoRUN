import { useEffect as h } from "react";
import { useRefState as v } from "../useRefState/useRefState.mjs";
import { isTarget as k } from "../../utils/helpers/isTarget.mjs";
import { getElement as l } from "../../utils/helpers/getElement.mjs";
const d = (...r) => {
  const e = k(r[0]) ? r[0] : void 0, s = e ? r[1] : r[0], t = v(), {
    behavior: f = "smooth",
    block: u = "start",
    inline: b = "nearest",
    enabled: n = !0
  } = s ?? {};
  h(() => {
    if (!n || !e && !t.state) return;
    const o = e ? l(e) : t.current;
    o && o.scrollIntoView({
      behavior: f,
      block: u,
      inline: b
    });
  }, [e, t.state, n]);
  const i = (o) => {
    const c = e ? l(e) : t.current;
    if (!c) return;
    const { behavior: m, block: a, inline: g } = o ?? {};
    c.scrollIntoView({
      behavior: m,
      block: a,
      inline: g
    });
  };
  return e ? { trigger: i } : { ref: t, trigger: i };
};
export {
  d as useScrollIntoView
};
//# sourceMappingURL=useScrollIntoView.mjs.map
