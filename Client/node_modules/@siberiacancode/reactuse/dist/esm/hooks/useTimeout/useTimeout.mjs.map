{"version":3,"file":"useTimeout.mjs","sources":["../../../../src/hooks/useTimeout/useTimeout.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport { useEvent } from '../useEvent/useEvent';\n\n/** The use timeout return type */\ninterface UseTimeoutReturn {\n  /**  Timeout is ready state value */\n  ready: boolean;\n  /** Function to clear timeout */\n  clear: () => void;\n}\n\n/**\n * @name useTimeout\n * @description - Hook that executes a callback function after a specified delay\n * @category Time\n *\n * @param {() => void} callback The function to be executed after the timeout\n * @param {number} delay The delay in milliseconds before the timeout executes the callback function\n * @returns {UseTimeoutReturn} An object with a `ready` boolean state value and a `clear` function to clear timeout\n *\n * @example\n * const { clear, ready } = useTimeout(() => {}, 5000);\n */\nexport function useTimeout(callback: () => void, delay: number): UseTimeoutReturn {\n  const [ready, setReady] = useState(false);\n\n  const timeoutIdRef = useRef<ReturnType<typeof setTimeout>>(undefined);\n  const internalCallback = useEvent(callback);\n\n  useEffect(() => {\n    timeoutIdRef.current = setTimeout(() => {\n      internalCallback();\n      setReady(true);\n    }, delay);\n\n    return () => {\n      clearTimeout(timeoutIdRef.current);\n    };\n  }, [delay]);\n\n  const clear = () => {\n    clearTimeout(timeoutIdRef.current);\n    setReady(true);\n  };\n\n  return { ready, clear };\n}\n"],"names":["useTimeout","callback","delay","ready","setReady","useState","timeoutIdRef","useRef","internalCallback","useEvent","useEffect"],"mappings":";;AAwBO,SAASA,EAAWC,GAAsBC,GAAiC;AAChF,QAAM,CAACC,GAAOC,CAAQ,IAAIC,EAAS,EAAK,GAElCC,IAAeC,EAAsC,MAAS,GAC9DC,IAAmBC,EAASR,CAAQ;AAE1C,SAAAS,EAAU,OACRJ,EAAa,UAAU,WAAW,MAAM;AACtC,IAAAE,EAAA,GACAJ,EAAS,EAAI;AAAA,EAAA,GACZF,CAAK,GAED,MAAM;AACX,iBAAaI,EAAa,OAAO;AAAA,EAAA,IAElC,CAACJ,CAAK,CAAC,GAOH,EAAE,OAAAC,GAAO,OALF,MAAM;AAClB,iBAAaG,EAAa,OAAO,GACjCF,EAAS,EAAI;AAAA,EAAA,EAGC;AAClB;"}