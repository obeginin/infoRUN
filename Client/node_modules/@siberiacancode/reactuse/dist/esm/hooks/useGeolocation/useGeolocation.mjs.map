{"version":3,"file":"useGeolocation.mjs","sources":["../../../../src/hooks/useGeolocation/useGeolocation.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n/** The use geolocation return type */\nexport interface UseGeolocationReturn {\n  /** The accuracy of the last position update */\n  accuracy: number | null;\n  /** The altitude of the last position update */\n  altitude: number | null;\n  /** The altitude accuracy of the last position update */\n  altitudeAccuracy: number | null;\n  /** The error of the last position update */\n  error: GeolocationPositionError | null;\n  /** The heading of the last position update */\n  heading: number | null;\n  /** The latitude of the last position update */\n  latitude: number | null;\n  /** The loading state */\n  loading: boolean;\n  /** The longitude of the last position update */\n  longitude: number | null;\n  /** The speed of the last position update */\n  speed: number | null;\n  /** The timestamp of the last position update */\n  timestamp: number | null;\n}\n\n/** The use geolocation params type */\nexport type UseGeolocationParams = PositionOptions;\n\n/**\n * @name useGeolocation\n * @description - Hook that returns the current geolocation\n * @category Browser\n *\n * @browserapi navigator.geolocation https://developer.mozilla.org/en-US/docs/Web/API/Navigator/geolocation\n *\n * @param {boolean} [params.enableHighAccuracy] Enable high accuracy\n * @param {number} [params.maximumAge] Maximum age\n * @param {number} [params.timeout] Timeout\n * @returns {UseGeolocationReturn}\n *\n * @example\n * const { loading, error, timestamp, accuracy, latitude, longitude, altitude, altitudeAccuracy, heading, speed } = useGeolocation();\n */\nexport const useGeolocation = (params?: UseGeolocationParams): UseGeolocationReturn => {\n  const [value, setValue] = useState<UseGeolocationReturn>({\n    loading: true,\n    error: null,\n    timestamp: Date.now(),\n    accuracy: 0,\n    latitude: Number.POSITIVE_INFINITY,\n    longitude: Number.POSITIVE_INFINITY,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    speed: null\n  });\n\n  useEffect(() => {\n    const onEvent = ({ coords, timestamp }: GeolocationPosition) => {\n      setValue({\n        ...value,\n        loading: false,\n        timestamp,\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n        altitude: coords.altitude,\n        accuracy: coords.accuracy,\n        altitudeAccuracy: coords.altitudeAccuracy,\n        heading: coords.heading,\n        speed: coords.speed\n      });\n    };\n\n    const onEventError = (error: GeolocationPositionError) => {\n      setValue({\n        ...value,\n        loading: false,\n        error\n      });\n    };\n\n    navigator.geolocation.getCurrentPosition(onEvent, onEventError, params);\n    const watchId = navigator.geolocation.watchPosition(onEvent, onEventError, params);\n\n    return () => {\n      navigator.geolocation.clearWatch(watchId);\n    };\n  }, [params?.enableHighAccuracy, params?.maximumAge, params?.timeout]);\n\n  return value;\n};\n"],"names":["useGeolocation","params","value","setValue","useState","useEffect","onEvent","coords","timestamp","onEventError","error","watchId"],"mappings":";AA4CO,MAAMA,IAAiB,CAACC,MAAwD;AACrF,QAAM,CAACC,GAAOC,CAAQ,IAAIC,EAA+B;AAAA,IACvD,SAAS;AAAA,IACT,OAAO;AAAA,IACP,WAAW,KAAK,IAAA;AAAA,IAChB,UAAU;AAAA,IACV,UAAU,OAAO;AAAA,IACjB,WAAW,OAAO;AAAA,IAClB,UAAU;AAAA,IACV,kBAAkB;AAAA,IAClB,SAAS;AAAA,IACT,OAAO;AAAA,EAAA,CACR;AAED,SAAAC,EAAU,MAAM;AACd,UAAMC,IAAU,CAAC,EAAE,QAAAC,GAAQ,WAAAC,QAAqC;AAC9D,MAAAL,EAAS;AAAA,QACP,GAAGD;AAAA,QACH,SAAS;AAAA,QACT,WAAAM;AAAA,QACA,UAAUD,EAAO;AAAA,QACjB,WAAWA,EAAO;AAAA,QAClB,UAAUA,EAAO;AAAA,QACjB,UAAUA,EAAO;AAAA,QACjB,kBAAkBA,EAAO;AAAA,QACzB,SAASA,EAAO;AAAA,QAChB,OAAOA,EAAO;AAAA,MAAA,CACf;AAAA,IAAA,GAGGE,IAAe,CAACC,MAAoC;AACxD,MAAAP,EAAS;AAAA,QACP,GAAGD;AAAA,QACH,SAAS;AAAA,QACT,OAAAQ;AAAA,MAAA,CACD;AAAA,IAAA;AAGH,cAAU,YAAY,mBAAmBJ,GAASG,GAAcR,CAAM;AACtE,UAAMU,IAAU,UAAU,YAAY,cAAcL,GAASG,GAAcR,CAAM;AAEjF,WAAO,MAAM;AACX,gBAAU,YAAY,WAAWU,CAAO;AAAA,IAAA;AAAA,EAC1C,GACC,CAACV,GAAQ,oBAAoBA,GAAQ,YAAYA,GAAQ,OAAO,CAAC,GAE7DC;AACT;"}