import { useState as f, useEffect as l } from "react";
const n = "script-status", A = (s, c = {}) => {
  const [d, o] = f(() => {
    const e = document.querySelector(`script[src="${s}"]`), r = e?.getAttribute(n);
    return r || (e ? "unknown" : "loading");
  }), { removeOnUnmount: u = !0, async: p = !0 } = c;
  return l(() => {
    const e = document.querySelector(`script[src="${s}"]`), r = e?.getAttribute(
      n
    );
    if (r) return o(r);
    if (e) return o("unknown");
    const t = document.createElement("script");
    t.src = s, t.async = p;
    for (const [m, S] of Object.entries(c))
      t.setAttribute(m, String(S));
    t.setAttribute(n, "loading"), document.body.appendChild(t);
    const i = () => {
      t.setAttribute(n, "ready"), o("ready");
    }, a = () => {
      t.setAttribute(n, "error"), o("error");
    };
    return t.addEventListener("load", i), t.addEventListener("error", a), () => {
      u && t.remove(), t.removeEventListener("load", i), t.removeEventListener("error", a);
    };
  }, [s, u]), d;
};
export {
  n as SCRIPT_STATUS_ATTRIBUTE_NAME,
  A as useScript
};
//# sourceMappingURL=useScript.mjs.map
