import { useState as m } from "react";
const d = (...u) => {
  const i = typeof u[0] == "number" ? u[0] : u[0]?.initialValue, { max: e = Number.POSITIVE_INFINITY, min: o = Number.NEGATIVE_INFINITY } = typeof u[0] == "number" ? u[1] ?? {} : u[0] ?? {}, [c, r] = m(i ?? 0);
  return { value: c, set: (t) => {
    r((n) => Math.max(
      o,
      Math.min(e, typeof t == "number" ? t : t(n))
    ));
  }, inc: (t = 1) => {
    r((n) => typeof e == "number" && n === e ? n : Math.max(Math.min(e, n + t), o));
  }, dec: (t = 1) => {
    r((n) => typeof o == "number" && n === o ? n : Math.min(Math.max(o, n - t), e));
  }, reset: () => {
    const t = i ?? 0;
    if (typeof e == "number" && t > e) return r(e);
    if (typeof o == "number" && t < o) return r(o);
    r(t);
  } };
};
export {
  d as useCounter
};
//# sourceMappingURL=useCounter.mjs.map
