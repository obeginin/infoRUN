import { useState as t, useEffect as s } from "react";
const i = ({
  x: o,
  y: n,
  behavior: e = "smooth"
}) => {
  const r = { behavior: e };
  typeof o == "number" && (r.left = o), typeof n == "number" && (r.top = n), window.scrollTo(r);
}, w = () => {
  const [o, n] = t({
    x: typeof window < "u" ? window.scrollX : Number.POSITIVE_INFINITY,
    y: typeof window < "u" ? window.scrollY : Number.POSITIVE_INFINITY
  });
  return s(() => {
    const e = () => n({ x: window.scrollX, y: window.scrollY });
    return window.addEventListener("scroll", e), window.addEventListener("resize", e), () => {
      window.removeEventListener("scroll", e), window.removeEventListener("resize", e);
    };
  }, []), { value: o, scrollTo: i };
};
export {
  i as scrollTo,
  w as useWindowScroll
};
//# sourceMappingURL=useWindowScroll.mjs.map
