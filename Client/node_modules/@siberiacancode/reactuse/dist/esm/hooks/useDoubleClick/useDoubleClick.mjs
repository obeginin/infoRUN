import { useRef as s, useEffect as E } from "react";
import { useRefState as a } from "../useRefState/useRefState.mjs";
import { isTarget as R } from "../../utils/helpers/isTarget.mjs";
import { getElement as k } from "../../utils/helpers/getElement.mjs";
const v = 300, h = (...e) => {
  const t = R(e[0]) ? e[0] : void 0, f = t ? e[1] : e[0], l = t ? e[2] : e[1], o = s(void 0), r = s(0), c = a(), m = s(f);
  m.current = f;
  const u = s(l);
  if (u.current = l, E(() => {
    if (!t && !c.state) return;
    const n = t ? k(t) : c.current;
    if (!n) return;
    const i = (d) => {
      r.current += 1, r.current === 1 && (o.current = setTimeout(() => {
        u.current?.onSingleClick && u.current.onSingleClick(d), r.current = 0;
      }, u.current?.threshold ?? v)), r.current === 2 && (clearTimeout(o.current), m.current(d), r.current = 0);
    };
    return n.addEventListener("mousedown", i), n.addEventListener("touchstart", i), () => {
      n.removeEventListener("mousedown", i), n.removeEventListener("touchstart", i), o.current && clearTimeout(o.current);
    };
  }, [t, c.state]), !t)
    return c;
};
export {
  v as DEFAULT_THRESHOLD_TIME,
  h as useDoubleClick
};
//# sourceMappingURL=useDoubleClick.mjs.map
