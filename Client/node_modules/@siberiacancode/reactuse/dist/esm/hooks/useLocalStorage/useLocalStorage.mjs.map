{"version":3,"file":"useLocalStorage.mjs","sources":["../../../../src/hooks/useLocalStorage/useLocalStorage.ts"],"sourcesContent":["import type { UseStorageInitialValue, UseStorageOptions } from '../useStorage/useStorage';\n\nimport { useStorage } from '../useStorage/useStorage';\n\n/**\n * @name useLocalStorage\n * @description - Hook that manages local storage value\n * @category State\n *\n * @browserapi localStorage https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n *\n * @template Value The type of the value\n * @param {string} key The key of the storage\n * @param {UseStorageInitialValue<Value>} [initialValue] The initial value of the storage\n * @param {UseStorageOptions<Value>} [options] The options of the storage\n *\n * @example\n * const { value, set, remove } = useLocalStorage('key', 'value');\n */\nexport const useLocalStorage = <Value>(\n  key: string,\n  initialValue?: UseStorageInitialValue<Value>,\n  options?: Omit<UseStorageOptions<Value>, 'initialValue' | 'storage'>\n) =>\n  useStorage(key, {\n    ...options,\n    initialValue,\n    storage: typeof window !== 'undefined' ? window.localStorage : undefined\n  });\n"],"names":["useLocalStorage","key","initialValue","options","useStorage"],"mappings":";AAmBO,MAAMA,IAAkB,CAC7BC,GACAC,GACAC,MAEAC,EAAWH,GAAK;AAAA,EACd,GAAGE;AAAA,EACH,cAAAD;AAAA,EACA,SAAS,OAAO,SAAW,MAAc,OAAO,eAAe;AACjE,CAAC;"}