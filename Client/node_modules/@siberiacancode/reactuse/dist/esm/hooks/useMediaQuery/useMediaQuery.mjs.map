{"version":3,"file":"useMediaQuery.mjs","sources":["../../../../src/hooks/useMediaQuery/useMediaQuery.ts"],"sourcesContent":["import { useCallback, useSyncExternalStore } from 'react';\n\nconst getServerSnapshot = () => false;\n\n/**\n * @name useMediaQuery\n * @description - Hook that manages a media query\n * @category Browser\n *\n * @browserapi window.matchMedia https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n *\n * @param {string} query The media query string\n * @returns {boolean} A boolean indicating if the media query matches\n *\n * @example\n * const matches = useMediaQuery('(max-width: 768px)');\n */\nexport const useMediaQuery = (query: string) => {\n  const subscribe = useCallback(\n    (callback: () => void) => {\n      const matchMedia = window.matchMedia(query);\n\n      matchMedia.addEventListener('change', callback);\n      return () => {\n        matchMedia.removeEventListener('change', callback);\n      };\n    },\n    [query]\n  );\n\n  const getSnapshot = () => window.matchMedia(query).matches;\n\n  return useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n};\n"],"names":["getServerSnapshot","useMediaQuery","query","subscribe","useCallback","callback","matchMedia","useSyncExternalStore"],"mappings":";AAEA,MAAMA,IAAoB,MAAM,IAenBC,IAAgB,CAACC,MAAkB;AAC9C,QAAMC,IAAYC;AAAA,IAChB,CAACC,MAAyB;AACxB,YAAMC,IAAa,OAAO,WAAWJ,CAAK;AAE1C,aAAAI,EAAW,iBAAiB,UAAUD,CAAQ,GACvC,MAAM;AACX,QAAAC,EAAW,oBAAoB,UAAUD,CAAQ;AAAA,MAAA;AAAA,IACnD;AAAA,IAEF,CAACH,CAAK;AAAA,EAAA;AAKR,SAAOK,EAAqBJ,GAFR,MAAM,OAAO,WAAWD,CAAK,EAAE,SAECF,CAAiB;AACvE;"}