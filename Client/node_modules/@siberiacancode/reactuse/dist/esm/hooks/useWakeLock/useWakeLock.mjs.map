{"version":3,"file":"useWakeLock.mjs","sources":["../../../../src/hooks/useWakeLock/useWakeLock.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\n/** The use wake lock options type */\nexport interface UseWakeLockOptions {\n  /** Determines if the wake lock should be automatically reacquired when the document becomes visible. */\n  immediately?: boolean;\n  /** A string specifying the screen wake lock type. */\n  type?: WakeLockType;\n}\n\n/** The use wake lock return type */\nexport interface UseWakeLockReturn {\n  /** Indicates if the wake lock is currently active. */\n  active: boolean;\n  /** Indicates if the Wake Lock API is supported in the current environment. */\n  supported: boolean;\n  /** Function to release the wake lock. */\n  release: () => Promise<void>;\n  /** Function to request the wake lock. */\n  request: () => Promise<void>;\n}\n\n/**\n * @name useWakeLock\n * @description - Hook that provides a wake lock functionality\n * @category Browser\n *\n * @browserapi navigator.wakeLock https://developer.mozilla.org/en-US/docs/Web/API/WakeLock\n *\n * @param {immediately} [options] Configuration options for the hook.\n * @returns {UseWakeLockReturn} An object containing the wake lock state and control methods.\n *\n * @example\n * const { supported, active, request, release } = useWakeLock();\n */\nexport const useWakeLock = (options?: UseWakeLockOptions): UseWakeLockReturn => {\n  const supported = typeof navigator !== 'undefined' && 'wakeLock' in navigator;\n\n  const [active, setActive] = useState(false);\n  const sentinel = useRef<WakeLockSentinel>(undefined);\n\n  const immediately = options?.immediately ?? false;\n  const type = options?.type ?? 'screen';\n\n  const request = async (type?: WakeLockType) => {\n    if (!supported) return;\n\n    sentinel.current = await navigator.wakeLock.request(type ?? options?.type);\n    sentinel.current.addEventListener('release', () => {\n      setActive(false);\n      sentinel.current = undefined;\n    });\n\n    setActive(true);\n  };\n\n  const release = async () => {\n    if (!supported || !sentinel.current) return;\n\n    await sentinel.current.release();\n    sentinel.current = undefined;\n    setActive(false);\n  };\n\n  useEffect(() => {\n    if (!supported || !immediately || document.visibilityState !== 'visible' || type !== 'screen')\n      return;\n\n    const onVisibilityChange = async () => {\n      await release();\n      await request(type);\n    };\n\n    document.addEventListener('visibilitychange', onVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', onVisibilityChange);\n    };\n  }, [type]);\n\n  return { supported, active, request, release };\n};\n"],"names":["useWakeLock","options","supported","active","setActive","useState","sentinel","useRef","immediately","type","request","release","useEffect","onVisibilityChange"],"mappings":";AAmCO,MAAMA,IAAc,CAACC,MAAoD;AAC9E,QAAMC,IAAY,OAAO,YAAc,OAAe,cAAc,WAE9D,CAACC,GAAQC,CAAS,IAAIC,EAAS,EAAK,GACpCC,IAAWC,EAAyB,MAAS,GAE7CC,IAAcP,GAAS,eAAe,IACtCQ,IAAOR,GAAS,QAAQ,UAExBS,IAAU,OAAOD,MAAwB;AAC7C,IAAKP,MAELI,EAAS,UAAU,MAAM,UAAU,SAAS,QAAQG,KAAQR,GAAS,IAAI,GACzEK,EAAS,QAAQ,iBAAiB,WAAW,MAAM;AACjD,MAAAF,EAAU,EAAK,GACfE,EAAS,UAAU;AAAA,IAAA,CACpB,GAEDF,EAAU,EAAI;AAAA,EAAA,GAGVO,IAAU,YAAY;AAC1B,IAAI,CAACT,KAAa,CAACI,EAAS,YAE5B,MAAMA,EAAS,QAAQ,QAAA,GACvBA,EAAS,UAAU,QACnBF,EAAU,EAAK;AAAA,EAAA;AAGjB,SAAAQ,EAAU,MAAM;AACd,QAAI,CAACV,KAAa,CAACM,KAAe,SAAS,oBAAoB,aAAaC,MAAS;AACnF;AAEF,UAAMI,IAAqB,YAAY;AACrC,YAAMF,EAAA,GACN,MAAMD,EAAQD,CAAI;AAAA,IAAA;AAGpB,oBAAS,iBAAiB,oBAAoBI,CAAkB,GACzD,MAAM;AACX,eAAS,oBAAoB,oBAAoBA,CAAkB;AAAA,IAAA;AAAA,EACrE,GACC,CAACJ,CAAI,CAAC,GAEF,EAAE,WAAAP,GAAW,QAAAC,GAAQ,SAAAO,GAAS,SAAAC,EAAA;AACvC;"}