{"version":3,"file":"useOperatingSystem.mjs","sources":["../../../../src/hooks/useOperatingSystem/useOperatingSystem.ts"],"sourcesContent":["import { useState } from 'react';\n\n/** The operating system type */\nexport type OperatingSystem = 'android' | 'ios' | 'linux' | 'macos' | 'undetermined' | 'windows';\n\nexport const getOperatingSystem = (): OperatingSystem => {\n  if (typeof window === 'undefined') return 'undetermined';\n\n  const { userAgent } = window.navigator;\n\n  if (/Macintosh|MacIntel|MacPPC|Mac68K/i.test(userAgent)) return 'macos';\n  if (/iPhone|iPad|iPod/i.test(userAgent)) return 'ios';\n  if (/Win32|Win64|Windows|WinCE/i.test(userAgent)) return 'windows';\n  if (/Android/i.test(userAgent)) return 'android';\n  if (/Linux/i.test(userAgent)) return 'linux';\n\n  return 'undetermined';\n};\n\n/**\n * @name useOperatingSystem\n * @description - Hook that returns the operating system of the current browser\n * @category User\n *\n * @returns {OperatingSystem} The operating system\n *\n * @example\n * const operatingSystem = useOperatingSystem();\n */\nexport const useOperatingSystem = () => {\n  const [osOperatingSystem] = useState<OperatingSystem>(getOperatingSystem());\n  return osOperatingSystem;\n};\n"],"names":["getOperatingSystem","userAgent","useOperatingSystem","osOperatingSystem","useState"],"mappings":";AAKO,MAAMA,IAAqB,MAAuB;AACvD,MAAI,OAAO,SAAW,IAAa,QAAO;AAE1C,QAAM,EAAE,WAAAC,MAAc,OAAO;AAE7B,SAAI,oCAAoC,KAAKA,CAAS,IAAU,UAC5D,oBAAoB,KAAKA,CAAS,IAAU,QAC5C,6BAA6B,KAAKA,CAAS,IAAU,YACrD,WAAW,KAAKA,CAAS,IAAU,YACnC,SAAS,KAAKA,CAAS,IAAU,UAE9B;AACT,GAYaC,IAAqB,MAAM;AACtC,QAAM,CAACC,CAAiB,IAAIC,EAA0BJ,GAAoB;AAC1E,SAAOG;AACT;"}