{"version":3,"file":"useResizeObserver.mjs","sources":["../../../../src/hooks/useResizeObserver/useResizeObserver.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\n/** The resize observer options type */\nexport interface UseResizeObserverOptions extends ResizeObserverOptions {\n  /** The enabled state */\n  enabled?: boolean;\n  /** The resize observer callback */\n  onChange?: (entries: ResizeObserverEntry[], observer: ResizeObserver) => void;\n}\n\n/** The resize observer return type */\nexport interface UseResizeObserverReturn {\n  /** The resize observer entries */\n  entries: ResizeObserverEntry[];\n}\n\nexport interface UseResizeObserver {\n  (target: HookTarget, options?: UseResizeObserverOptions): UseResizeObserverReturn;\n\n  <Target extends Element>(\n    options?: UseResizeObserverOptions,\n    target?: never\n  ): UseResizeObserverReturn & { ref: StateRef<Target> };\n}\n\n/**\n *  @name useResizeObserver\n *  @description - Hook that gives you resize observer state\n *  @category Sensors\n *\n *  @browserapi ResizeObserver https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n *\n *  @overload\n *  @template Target The target element\n *  @param {boolean} [options.enabled=true] The IntersectionObserver options\n *  @param {boolean} [options.box] The IntersectionObserver options\n *  @param {(entries: ResizeObserverEntry[], observer: ResizeObserver) => void} [options.onChange] The callback to execute when resize is detected\n *  @returns {UseResizeObserverReturn & { ref: StateRef<Target> }} An object containing the resize observer state\n *\n *  @example\n *  const { ref, entries } = useResizeObserver();\n *\n *  @overload\n *  @template Target The target element\n *  @param {HookTarget} target The target element to observe\n *  @param {boolean} [options.enabled=true] The IntersectionObserver options\n *  @param {boolean} [options.box] The IntersectionObserver options\n *  @param {(entries: ResizeObserverEntry[], observer: ResizeObserver) => void} [options.onChange] The callback to execute when resize is detected\n *  @returns {UseResizeObserverReturn} An object containing the resize observer state\n *\n *  @example\n *  const { entries } = useResizeObserver(ref);\n */\nexport const useResizeObserver = ((...params: any[]) => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n  const options = (target ? params[1] : params[0]) as UseResizeObserverOptions | undefined;\n  const enabled = options?.enabled ?? true;\n\n  const [entries, setEntries] = useState<ResizeObserverEntry[]>([]);\n\n  const internalRef = useRefState<Element>();\n  const internalOnChangeRef = useRef<UseResizeObserverOptions['onChange']>(options?.onChange);\n  internalOnChangeRef.current = options?.onChange;\n\n  useEffect(() => {\n    if (!enabled || (!target && !internalRef.state)) return;\n\n    const element = target ? getElement(target) : internalRef.current;\n    if (!element) return;\n\n    const observer = new ResizeObserver((entries) => {\n      setEntries(entries);\n      internalOnChangeRef.current?.(entries, observer);\n    });\n    observer.observe(element as Element, options);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [target, internalRef.state, options?.box, enabled]);\n\n  if (target) return { entries };\n  return {\n    ref: internalRef,\n    entries\n  };\n}) as UseResizeObserver;\n"],"names":["useResizeObserver","params","target","isTarget","options","enabled","entries","setEntries","useState","internalRef","useRefState","internalOnChangeRef","useRef","useEffect","element","getElement","observer"],"mappings":";;;;AA6DO,MAAMA,IAAqB,IAAIC,MAAkB;AACtD,QAAMC,IAAUC,EAASF,EAAO,CAAC,CAAC,IAAIA,EAAO,CAAC,IAAI,QAC5CG,IAAWF,IAASD,EAAO,CAAC,IAAIA,EAAO,CAAC,GACxCI,IAAUD,GAAS,WAAW,IAE9B,CAACE,GAASC,CAAU,IAAIC,EAAgC,CAAA,CAAE,GAE1DC,IAAcC,EAAA,GACdC,IAAsBC,EAA6CR,GAAS,QAAQ;AAoB1F,SAnBAO,EAAoB,UAAUP,GAAS,UAEvCS,EAAU,MAAM;AACd,QAAI,CAACR,KAAY,CAACH,KAAU,CAACO,EAAY,MAAQ;AAEjD,UAAMK,IAAUZ,IAASa,EAAWb,CAAM,IAAIO,EAAY;AAC1D,QAAI,CAACK,EAAS;AAEd,UAAME,IAAW,IAAI,eAAe,CAACV,MAAY;AAC/C,MAAAC,EAAWD,CAAO,GAClBK,EAAoB,UAAUL,GAASU,CAAQ;AAAA,IAAA,CAChD;AACD,WAAAA,EAAS,QAAQF,GAAoBV,CAAO,GAErC,MAAM;AACX,MAAAY,EAAS,WAAA;AAAA,IAAW;AAAA,EACtB,GACC,CAACd,GAAQO,EAAY,OAAOL,GAAS,KAAKC,CAAO,CAAC,GAEjDH,IAAe,EAAE,SAAAI,EAAA,IACd;AAAA,IACL,KAAKG;AAAA,IACL,SAAAH;AAAA,EAAA;AAEJ;"}