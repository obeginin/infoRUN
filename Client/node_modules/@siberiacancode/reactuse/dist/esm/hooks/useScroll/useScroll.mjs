import { useRef as T, useState as _, useEffect as j } from "react";
import { useRefState as A } from "../useRefState/useRefState.mjs";
import { isTarget as I } from "../../utils/helpers/isTarget.mjs";
import { getElement as O } from "../../utils/helpers/getElement.mjs";
const D = 1, V = (...t) => {
  const r = I(t[0]) ? t[0] : void 0, u = r ? typeof t[1] == "object" ? t[1] : { onScroll: t[1] } : typeof t[0] == "object" ? t[0] : { onScroll: t[0] }, i = A(), d = T(u);
  d.current = u;
  const [m, g] = _(!1), l = T({ x: 0, y: 0 });
  return j(() => {
    if (!r && !i.state) return;
    const s = r ? O(r) : i.current;
    if (!s) return;
    const p = (n) => {
      g(!1), u?.onStop?.(n);
    }, S = (n) => {
      g(!0);
      const e = n.target === document ? n.target.documentElement : n.target, { display: E, flexDirection: R, direction: H } = e.style, y = H === "rtl" ? -1 : 1, c = e.scrollLeft;
      let o = e.scrollTop;
      e instanceof Document && !o && (o = window.document.body.scrollTop);
      const f = d.current?.offset, v = c * y <= (f?.left ?? 0), x = c * y + e.clientWidth >= e.scrollWidth - (f?.right ?? 0) - D, h = o <= (f?.top ?? 0), L = o + e.clientHeight >= e.scrollHeight - (f?.bottom ?? 0) - D, a = E === "flex" && R === "column-reverse", b = E === "flex" && R === "column-reverse", w = {
        x: c,
        y: o,
        directions: {
          left: c < l.current.x,
          right: c > l.current.x,
          top: o < l.current.y,
          bottom: o > l.current.y
        },
        arrived: {
          left: b ? x : v,
          right: b ? v : x,
          top: a ? L : h,
          bottom: a ? h : L
        }
      };
      l.current = { x: c, y: o }, d.current?.onScroll?.(w, n);
    };
    return s.addEventListener("scroll", S), s.addEventListener("scrollend", p), () => {
      s.removeEventListener("scroll", S), s.removeEventListener("scrollend", p);
    };
  }, [r, i.state]), r ? m : {
    ref: i,
    scrolling: m
  };
};
export {
  V as useScroll
};
//# sourceMappingURL=useScroll.mjs.map
