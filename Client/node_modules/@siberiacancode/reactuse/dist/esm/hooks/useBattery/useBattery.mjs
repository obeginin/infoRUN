import { useState as r, useEffect as c } from "react";
const s = () => {
  const t = typeof navigator < "u" && "getBattery" in navigator && typeof navigator.getBattery == "function", [i, a] = r({
    loading: t,
    level: 0,
    charging: !1,
    chargingTime: 0,
    dischargingTime: 0
  });
  return c(() => {
    if (!t) return;
    let e;
    const n = () => a({
      loading: !1,
      level: e?.level ?? 0,
      charging: e?.charging ?? !1,
      dischargingTime: e?.dischargingTime ?? 0,
      chargingTime: e?.chargingTime ?? 0
    });
    return navigator.getBattery().then((g) => {
      e = g, n(), e.addEventListener("levelchange", n), e.addEventListener("chargingchange", n), e.addEventListener("chargingtimechange", n), e.addEventListener("dischargingtimechange", n);
    }), () => {
      e && (console.log("unmount", e), e.removeEventListener("levelchange", n), e.removeEventListener("chargingchange", n), e.removeEventListener("chargingtimechange", n), e.removeEventListener("dischargingtimechange", n));
    };
  }, []), { supported: t, value: i };
};
export {
  s as useBattery
};
//# sourceMappingURL=useBattery.mjs.map
