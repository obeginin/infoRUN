{"version":3,"file":"useUnmount.mjs","sources":["../../../../src/hooks/useUnmount/useUnmount.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * @name useUnmount\n * @description - Hook that defines the logic when unmounting a component\n * @category Lifecycle\n *\n * @param {() => void} callback The callback function to be invoked on component unmount\n * @returns {void}\n *\n * @example\n * useUnmount(() => console.log('This effect runs on component unmount'));\n */\n\nexport const useUnmount = (callback: () => void) => {\n  const internalCallbackRef = useRef(callback);\n  internalCallbackRef.current = callback;\n\n  useEffect(\n    () => () => {\n      internalCallbackRef.current();\n    },\n    []\n  );\n};\n"],"names":["useUnmount","callback","internalCallbackRef","useRef","useEffect"],"mappings":";AAcO,MAAMA,IAAa,CAACC,MAAyB;AAClD,QAAMC,IAAsBC,EAAOF,CAAQ;AAC3C,EAAAC,EAAoB,UAAUD,GAE9BG;AAAA,IACE,MAAM,MAAM;AACV,MAAAF,EAAoB,QAAA;AAAA,IAAQ;AAAA,IAE9B,CAAA;AAAA,EAAC;AAEL;"}