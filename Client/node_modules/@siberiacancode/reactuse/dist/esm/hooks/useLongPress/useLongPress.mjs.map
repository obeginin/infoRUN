{"version":3,"file":"useLongPress.mjs","sources":["../../../../src/hooks/useLongPress/useLongPress.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport type { HookTarget } from '@/utils/helpers';\n\nimport { getElement, isTarget } from '@/utils/helpers';\n\nimport type { StateRef } from '../useRefState/useRefState';\n\nimport { useRefState } from '../useRefState/useRefState';\n\nexport type LongPressEvents = MouseEvent | TouchEvent;\n\n// * The use long press options type */\nexport interface UseLongPressOptions {\n  // * The threshold time in milliseconds\n  threshold?: number;\n  // * The callback function to be invoked on long press cancel\n  onCancel?: (event: LongPressEvents) => void;\n  // * The callback function to be invoked on long press end\n  onFinish?: (event: LongPressEvents) => void;\n  // * The callback function to be invoked on long press start\n  onStart?: (event: LongPressEvents) => void;\n}\n\nexport interface UseLongPress {\n  (\n    target: HookTarget,\n    callback: (event: LongPressEvents) => void,\n    options?: UseLongPressOptions\n  ): boolean;\n\n  <Target extends Element>(\n    callback: (event: LongPressEvents) => void,\n    options?: UseLongPressOptions,\n    target?: never\n  ): {\n    ref: StateRef<Target>;\n    pressed: boolean;\n  };\n}\n\nconst DEFAULT_THRESHOLD_TIME = 400;\n\n/**\n * @name useLongPress\n * @description - Hook that defines the logic when long pressing an element\n * @category Elements\n *\n * @overload\n * @param {HookTarget} target The target element to be long pressed\n * @param {(event: LongPressEvents) => void} callback The callback function to be invoked on long press\n * @param {UseLongPressOptions} [options] The options for the long press\n * @returns {boolean} The long pressing state\n *\n * @example\n * const pressed = useLongPress(ref, () => console.log('callback'));\n *\n * @overload\n * @template Target The target element\n * @param {(event: LongPressEvents) => void} callback The callback function to be invoked on long press\n * @param {UseLongPressOptions} [options] The options for the long press\n * @returns {boolean} The long pressing state\n *\n * @example\n * const { ref, pressed } = useLongPress(() => console.log('callback'));\n */\nexport const useLongPress = ((...params: any[]): any => {\n  const target = (isTarget(params[0]) ? params[0] : undefined) as HookTarget | undefined;\n  const callback = (target ? params[1] : params[0]) as (event: LongPressEvents) => void;\n  const options = (target ? params[2] : params[1]) as UseLongPressOptions | undefined;\n\n  const [pressed, setPressed] = useState(false);\n  const timeoutIdRef = useRef<ReturnType<typeof setTimeout>>(undefined);\n  const isPressedRef = useRef(false);\n  const internalRef = useRefState<Element>();\n\n  const internalCallbackRef = useRef(callback);\n  internalCallbackRef.current = callback;\n  const internalOptionsRef = useRef(options);\n  internalOptionsRef.current = options;\n\n  useEffect(() => {\n    if (!target && !internalRef.state) return;\n\n    const element = target ? getElement(target) : internalRef.current;\n    if (!element) return;\n\n    const onStart = (event: LongPressEvents) => {\n      internalOptionsRef.current?.onStart?.(event);\n\n      isPressedRef.current = true;\n      timeoutIdRef.current = setTimeout(() => {\n        internalCallbackRef.current(event);\n        setPressed(true);\n      }, internalOptionsRef.current?.threshold ?? DEFAULT_THRESHOLD_TIME);\n    };\n\n    const onCancel = (event: LongPressEvents) => {\n      setPressed((prevPressed) => {\n        if (prevPressed) {\n          internalOptionsRef.current?.onFinish?.(event);\n        } else if (isPressedRef.current) {\n          internalOptionsRef.current?.onCancel?.(event);\n        }\n\n        return false;\n      });\n\n      isPressedRef.current = false;\n      if (timeoutIdRef.current) clearTimeout(timeoutIdRef.current);\n    };\n\n    element.addEventListener('mousedown', onStart as EventListener);\n    element.addEventListener('touchstart', onStart as EventListener);\n    element.addEventListener('mouseup', onCancel as EventListener);\n    element.addEventListener('touchend', onCancel as EventListener);\n    window.addEventListener('mouseup', onCancel as EventListener);\n    window.addEventListener('touchend', onCancel as EventListener);\n\n    return () => {\n      element.removeEventListener('mousedown', onStart as EventListener);\n      element.removeEventListener('touchstart', onStart as EventListener);\n      element.removeEventListener('mouseup', onCancel as EventListener);\n      element.removeEventListener('touchend', onCancel as EventListener);\n      window.removeEventListener('mouseup', onCancel as EventListener);\n      window.removeEventListener('touchend', onCancel as EventListener);\n\n      if (timeoutIdRef.current) clearTimeout(timeoutIdRef.current);\n    };\n  }, [target, internalRef.state]);\n\n  if (target) return pressed;\n  return {\n    ref: internalRef,\n    pressed\n  };\n}) as UseLongPress;\n"],"names":["DEFAULT_THRESHOLD_TIME","useLongPress","params","target","isTarget","callback","options","pressed","setPressed","useState","timeoutIdRef","useRef","isPressedRef","internalRef","useRefState","internalCallbackRef","internalOptionsRef","useEffect","element","getElement","onStart","event","onCancel","prevPressed"],"mappings":";;;;AAyCA,MAAMA,IAAyB,KAyBlBC,IAAgB,IAAIC,MAAuB;AACtD,QAAMC,IAAUC,EAASF,EAAO,CAAC,CAAC,IAAIA,EAAO,CAAC,IAAI,QAC5CG,IAAYF,IAASD,EAAO,CAAC,IAAIA,EAAO,CAAC,GACzCI,IAAWH,IAASD,EAAO,CAAC,IAAIA,EAAO,CAAC,GAExC,CAACK,GAASC,CAAU,IAAIC,EAAS,EAAK,GACtCC,IAAeC,EAAsC,MAAS,GAC9DC,IAAeD,EAAO,EAAK,GAC3BE,IAAcC,EAAA,GAEdC,IAAsBJ,EAAON,CAAQ;AAC3C,EAAAU,EAAoB,UAAUV;AAC9B,QAAMW,IAAqBL,EAAOL,CAAO;AAqDzC,SApDAU,EAAmB,UAAUV,GAE7BW,EAAU,MAAM;AACd,QAAI,CAACd,KAAU,CAACU,EAAY,MAAO;AAEnC,UAAMK,IAAUf,IAASgB,EAAWhB,CAAM,IAAIU,EAAY;AAC1D,QAAI,CAACK,EAAS;AAEd,UAAME,IAAU,CAACC,MAA2B;AAC1C,MAAAL,EAAmB,SAAS,UAAUK,CAAK,GAE3CT,EAAa,UAAU,IACvBF,EAAa,UAAU,WAAW,MAAM;AACtC,QAAAK,EAAoB,QAAQM,CAAK,GACjCb,EAAW,EAAI;AAAA,MAAA,GACdQ,EAAmB,SAAS,aAAahB,CAAsB;AAAA,IAAA,GAG9DsB,IAAW,CAACD,MAA2B;AAC3C,MAAAb,EAAW,CAACe,OACNA,IACFP,EAAmB,SAAS,WAAWK,CAAK,IACnCT,EAAa,WACtBI,EAAmB,SAAS,WAAWK,CAAK,GAGvC,GACR,GAEDT,EAAa,UAAU,IACnBF,EAAa,WAAS,aAAaA,EAAa,OAAO;AAAA,IAAA;AAG7D,WAAAQ,EAAQ,iBAAiB,aAAaE,CAAwB,GAC9DF,EAAQ,iBAAiB,cAAcE,CAAwB,GAC/DF,EAAQ,iBAAiB,WAAWI,CAAyB,GAC7DJ,EAAQ,iBAAiB,YAAYI,CAAyB,GAC9D,OAAO,iBAAiB,WAAWA,CAAyB,GAC5D,OAAO,iBAAiB,YAAYA,CAAyB,GAEtD,MAAM;AACX,MAAAJ,EAAQ,oBAAoB,aAAaE,CAAwB,GACjEF,EAAQ,oBAAoB,cAAcE,CAAwB,GAClEF,EAAQ,oBAAoB,WAAWI,CAAyB,GAChEJ,EAAQ,oBAAoB,YAAYI,CAAyB,GACjE,OAAO,oBAAoB,WAAWA,CAAyB,GAC/D,OAAO,oBAAoB,YAAYA,CAAyB,GAE5DZ,EAAa,WAAS,aAAaA,EAAa,OAAO;AAAA,IAAA;AAAA,EAC7D,GACC,CAACP,GAAQU,EAAY,KAAK,CAAC,GAE1BV,IAAeI,IACZ;AAAA,IACL,KAAKM;AAAA,IACL,SAAAN;AAAA,EAAA;AAEJ;"}