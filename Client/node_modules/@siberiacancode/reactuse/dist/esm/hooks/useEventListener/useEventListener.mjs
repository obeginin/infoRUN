import { useEffect as l } from "react";
import { useEvent as v } from "../useEvent/useEvent.mjs";
import { useRefState as m } from "../useRefState/useRefState.mjs";
import { isTarget as E } from "../../utils/helpers/isTarget.mjs";
import { getElement as d } from "../../utils/helpers/getElement.mjs";
const k = (...t) => {
  const e = E(t[0]) ? t[0] : void 0, n = e ? t[1] : t[0], c = e ? t[2] : t[1], o = e ? t[3] : t[2], r = m(window), f = v(c);
  if (l(() => {
    const i = e ? d(e) : r.current;
    if (!i) return;
    const s = (u) => f(u);
    return i.addEventListener(n, s, o), () => {
      i.removeEventListener(n, s, o);
    };
  }, [e, r.state, n, o]), !e)
    return r;
};
export {
  k as useEventListener
};
//# sourceMappingURL=useEventListener.mjs.map
