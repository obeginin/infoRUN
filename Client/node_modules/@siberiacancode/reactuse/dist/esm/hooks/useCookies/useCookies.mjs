import { useState as l, useEffect as m } from "react";
import { removeCookie as a, COOKIE_EVENT as s, removeCookieItem as k, setCookieItem as C, dispatchCookieEvent as p } from "../useCookie/useCookie.mjs";
const E = () => {
  document.cookie.split("; ").forEach((t) => {
    const [n] = t.split("=");
    a(n);
  });
}, g = () => {
  E(), p();
}, O = (t) => {
  const n = (e) => t?.serializer ? t.serializer(e) : typeof e == "string" ? e : JSON.stringify(e), c = (e) => {
    if (t?.deserializer) return t.deserializer(e);
    if (e !== "undefined")
      try {
        return JSON.parse(e);
      } catch {
        return e;
      }
  }, i = () => document.cookie ? Object.fromEntries(
    document.cookie.split("; ").map((e) => {
      const [r, ...o] = e.split("=");
      if (!r || !o.length) return [];
      const f = decodeURIComponent(o.join("="));
      return [r, c(f)];
    }).filter((e) => e.length)
  ) : {}, [d, u] = l(() => typeof window > "u" ? {} : i());
  return m(() => {
    const e = () => u(i());
    return window.addEventListener(s, e), () => {
      window.removeEventListener(s, e);
    };
  }, []), { value: d, set: (e, r, o) => C(e, n(r), o), remove: (e, r) => k(e, r), getAll: () => i(), clear: () => g() };
};
export {
  E as clearCookies,
  O as useCookies
};
//# sourceMappingURL=useCookies.mjs.map
