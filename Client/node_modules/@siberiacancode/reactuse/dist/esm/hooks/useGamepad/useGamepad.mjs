import { useState as f, useEffect as a } from "react";
import { useRaf as v } from "../useRaf/useRaf.mjs";
const x = () => {
  const t = typeof navigator < "u" && "getGamepads" in navigator, [s, r] = f({}), u = (n) => {
    const o = [], e = "vibrationActuator" in n ? n.vibrationActuator : null;
    return e && o.push(e), n.hapticActuators && o.push(...n.hapticActuators), {
      ...n,
      hapticActuators: o
    };
  }, b = () => {
    for (const n of navigator.getGamepads() ?? [])
      n && s[n.index] && (s[n.index] = u(n));
  }, { active: d } = v(b, {
    enabled: !!Object.keys(s).length
  });
  return a(() => {
    if (!t) return;
    const n = navigator.getGamepads();
    r(
      n.reduce(
        (o, e) => ({
          ...o,
          ...e && { [e.index]: u(e) }
        }),
        {}
      )
    );
  }, []), a(() => {
    const n = (e) => {
      const { gamepad: c } = e;
      r({ ...s, [c.index]: u(c) });
    }, o = (e) => {
      const { gamepad: c } = e, i = { ...s };
      delete i[c.index], r(i);
    };
    return document.addEventListener("gamepadconnected", n), document.addEventListener("gamepaddisconnected", o), () => {
      document.removeEventListener("gamepadconnected", n), document.removeEventListener("gamepaddisconnected", o);
    };
  }, []), {
    active: d,
    supported: t,
    gamepads: Object.values(s)
  };
}, p = (t) => ({
  buttons: {
    a: t.buttons[0],
    b: t.buttons[1],
    x: t.buttons[2],
    y: t.buttons[3]
  },
  bumper: {
    left: t.buttons[4],
    right: t.buttons[5]
  },
  triggers: {
    left: t.buttons[6],
    right: t.buttons[7]
  },
  stick: {
    left: {
      horizontal: t.axes[0],
      vertical: t.axes[1],
      button: t.buttons[10]
    },
    right: {
      horizontal: t.axes[2],
      vertical: t.axes[3],
      button: t.buttons[11]
    }
  },
  dpad: {
    up: t.buttons[12],
    down: t.buttons[13],
    left: t.buttons[14],
    right: t.buttons[15]
  },
  back: t.buttons[8],
  start: t.buttons[9]
});
export {
  p as mapGamepadToXbox360Controller,
  x as useGamepad
};
//# sourceMappingURL=useGamepad.mjs.map
