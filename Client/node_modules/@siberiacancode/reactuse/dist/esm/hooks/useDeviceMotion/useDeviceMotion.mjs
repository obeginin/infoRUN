import { useState as r, useRef as u, useEffect as d } from "react";
import { throttle as v } from "../../utils/helpers/throttle.mjs";
const f = (t) => {
  const l = t?.enabled ?? !0, a = t?.delay ?? 1e3, [n, c] = r({
    interval: 0,
    rotationRate: { alpha: null, beta: null, gamma: null },
    acceleration: { x: null, y: null, z: null },
    accelerationIncludingGravity: { x: null, y: null, z: null }
  }), o = u(t?.callback);
  return o.current = t?.callback, d(() => {
    if (!l) return;
    const i = v((e) => {
      o.current?.(e), c({
        interval: e.interval,
        rotationRate: {
          ...n.rotationRate,
          ...e.rotationRate
        },
        acceleration: {
          ...n.acceleration,
          ...e.acceleration
        },
        accelerationIncludingGravity: {
          ...n.accelerationIncludingGravity,
          ...e.accelerationIncludingGravity
        }
      });
    }, a);
    return window.addEventListener("devicemotion", i), () => {
      window.removeEventListener("devicemotion", i);
    };
  }, [a, l]), n;
};
export {
  f as useDeviceMotion
};
//# sourceMappingURL=useDeviceMotion.mjs.map
