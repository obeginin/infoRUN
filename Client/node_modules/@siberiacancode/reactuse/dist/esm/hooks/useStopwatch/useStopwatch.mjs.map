{"version":3,"file":"useStopwatch.mjs","sources":["../../../../src/hooks/useStopwatch/useStopwatch.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst getStopwatchTime = (time: number) => {\n  if (!time)\n    return {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      count: 0\n    };\n\n  const days = Math.floor(time / 86400);\n  const hours = Math.floor((time % 86400) / 3600);\n  const minutes = Math.floor((time % 3600) / 60);\n  const seconds = Math.floor(time % 60);\n\n  return { days, hours, minutes, seconds, count: time };\n};\n\n/** The use stopwatch return type */\nexport interface UseStopwatchReturn {\n  /** The total count of the stopwatch */\n  count: number;\n  /** The day count of the stopwatch */\n  days: number;\n  /** The hour count of the stopwatch */\n  hours: number;\n  /** The minute count of the stopwatch */\n  minutes: number;\n  /** The over state of the stopwatch */\n  over: boolean;\n  /** The paused state of the stopwatch */\n  paused: boolean;\n  /** The second count of the stopwatch */\n  seconds: number;\n  /** The function to pause the stopwatch */\n  pause: () => void;\n  /** The function to reset the stopwatch */\n  reset: () => void;\n  /** The function to start the stopwatch */\n  start: () => void;\n  /** The function to toggle the stopwatch */\n  toggle: () => void;\n}\n\n/** The use stopwatch options */\nexport interface UseStopwatchOptions {\n  /** The immediately state of the timer */\n  immediately?: boolean;\n}\n\ninterface UseStopwatch {\n  (initialTime?: number, options?: UseStopwatchOptions): UseStopwatchReturn;\n  (options?: UseStopwatchOptions & { initialTime?: number }): UseStopwatchReturn;\n}\n/**\n * @name useStopwatch\n * @description - Hook that creates a stopwatch functionality\n * @category Time\n *\n * @overload\n * @param {number} [initialTime=0] The initial time of the timer\n * @param {boolean} [options.enabled=true] The enabled state of the timer\n * @returns {UseStopwatchReturn} An object containing the current time and functions to interact with the timer\n *\n * @example\n * const { seconds, minutes, start, pause, reset } = useStopwatch(1000, { enabled: false });\n *\n * @overload\n * @param {number} [options.initialTime=0] -The initial time of the timer\n * @param {boolean} [options.enabled=true] The enabled state of the timer\n * @returns {UseStopwatchReturn} An object containing the current time and functions to interact with the timer\n *\n * @example\n * const { seconds, minutes, start, pause, reset } = useStopwatch({ initialTime: 1000, enabled: false });\n */\nexport const useStopwatch = ((...params: any[]) => {\n  const initialTime =\n    (typeof params[0] === 'number'\n      ? (params[0] as number | undefined)\n      : (params[0] as UseStopwatchOptions & { initialTime?: number })?.initialTime) ?? 0;\n\n  const options =\n    typeof params[0] === 'number'\n      ? (params[1] as UseStopwatchOptions | undefined)\n      : (params[0] as (UseStopwatchOptions & { initialTime?: number }) | undefined);\n\n  const immediately = options?.immediately ?? false;\n\n  const [time, setTime] = useState(getStopwatchTime(initialTime));\n  const [paused, setPaused] = useState(!immediately && !initialTime);\n\n  useEffect(() => {\n    if (paused) return;\n    const onInterval = () => {\n      setTime((prevTime) => {\n        const updatedCount = prevTime.count + 1;\n\n        if (updatedCount % 60 === 0) {\n          return {\n            ...prevTime,\n            minutes: prevTime.minutes + 1,\n            seconds: 0,\n            count: updatedCount\n          };\n        }\n\n        if (updatedCount % (60 * 60) === 0) {\n          return {\n            ...prevTime,\n            hours: prevTime.hours + 1,\n            minutes: 0,\n            seconds: 0,\n            count: updatedCount\n          };\n        }\n\n        if (updatedCount % (60 * 60 * 24) === 0) {\n          return {\n            ...prevTime,\n            days: prevTime.days + 1,\n            hours: 0,\n            minutes: 0,\n            seconds: 0,\n            count: updatedCount\n          };\n        }\n\n        return {\n          ...prevTime,\n          seconds: prevTime.seconds + 1,\n          count: updatedCount\n        };\n      });\n    };\n\n    const interval = setInterval(() => onInterval(), 1000);\n    return () => clearInterval(interval);\n  }, [paused]);\n\n  return {\n    ...time,\n    paused,\n    pause: () => setPaused(true),\n    start: () => setPaused(false),\n    reset: () => setTime(getStopwatchTime(initialTime)),\n    toggle: () => setPaused((prevPause) => !prevPause)\n  };\n}) as UseStopwatch;\n"],"names":["getStopwatchTime","time","days","hours","minutes","seconds","useStopwatch","params","initialTime","immediately","setTime","useState","paused","setPaused","useEffect","onInterval","prevTime","updatedCount","interval","prevPause"],"mappings":";AAEA,MAAMA,IAAmB,CAACC,MAAiB;AACzC,MAAI,CAACA;AACH,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,IAAA;AAGX,QAAMC,IAAO,KAAK,MAAMD,IAAO,KAAK,GAC9BE,IAAQ,KAAK,MAAOF,IAAO,QAAS,IAAI,GACxCG,IAAU,KAAK,MAAOH,IAAO,OAAQ,EAAE,GACvCI,IAAU,KAAK,MAAMJ,IAAO,EAAE;AAEpC,SAAO,EAAE,MAAAC,GAAM,OAAAC,GAAO,SAAAC,GAAS,SAAAC,GAAS,OAAOJ,EAAA;AACjD,GA2DaK,IAAgB,IAAIC,MAAkB;AACjD,QAAMC,KACH,OAAOD,EAAO,CAAC,KAAM,WACjBA,EAAO,CAAC,IACRA,EAAO,CAAC,GAAsD,gBAAgB,GAO/EE,KAJJ,OAAOF,EAAO,CAAC,KAAM,WAChBA,EAAO,CAAC,IACRA,EAAO,CAAC,IAEc,eAAe,IAEtC,CAACN,GAAMS,CAAO,IAAIC,EAASX,EAAiBQ,CAAW,CAAC,GACxD,CAACI,GAAQC,CAAS,IAAIF,EAAS,CAACF,KAAe,CAACD,CAAW;AAEjE,SAAAM,EAAU,MAAM;AACd,QAAIF,EAAQ;AACZ,UAAMG,IAAa,MAAM;AACvB,MAAAL,EAAQ,CAACM,MAAa;AACpB,cAAMC,IAAeD,EAAS,QAAQ;AAEtC,eAAIC,IAAe,OAAO,IACjB;AAAA,UACL,GAAGD;AAAA,UACH,SAASA,EAAS,UAAU;AAAA,UAC5B,SAAS;AAAA,UACT,OAAOC;AAAA,QAAA,IAIPA,KAAgB,KAAK,QAAQ,IACxB;AAAA,UACL,GAAGD;AAAA,UACH,OAAOA,EAAS,QAAQ;AAAA,UACxB,SAAS;AAAA,UACT,SAAS;AAAA,UACT,OAAOC;AAAA,QAAA,IAIPA,KAAgB,KAAK,KAAK,QAAQ,IAC7B;AAAA,UACL,GAAGD;AAAA,UACH,MAAMA,EAAS,OAAO;AAAA,UACtB,OAAO;AAAA,UACP,SAAS;AAAA,UACT,SAAS;AAAA,UACT,OAAOC;AAAA,QAAA,IAIJ;AAAA,UACL,GAAGD;AAAA,UACH,SAASA,EAAS,UAAU;AAAA,UAC5B,OAAOC;AAAA,QAAA;AAAA,MACT,CACD;AAAA,IAAA,GAGGC,IAAW,YAAY,MAAMH,EAAA,GAAc,GAAI;AACrD,WAAO,MAAM,cAAcG,CAAQ;AAAA,EAAA,GAClC,CAACN,CAAM,CAAC,GAEJ;AAAA,IACL,GAAGX;AAAA,IACH,QAAAW;AAAA,IACA,OAAO,MAAMC,EAAU,EAAI;AAAA,IAC3B,OAAO,MAAMA,EAAU,EAAK;AAAA,IAC5B,OAAO,MAAMH,EAAQV,EAAiBQ,CAAW,CAAC;AAAA,IAClD,QAAQ,MAAMK,EAAU,CAACM,MAAc,CAACA,CAAS;AAAA,EAAA;AAErD;"}