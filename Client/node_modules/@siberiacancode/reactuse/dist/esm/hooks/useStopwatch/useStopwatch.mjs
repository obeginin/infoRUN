import { useState as f, useEffect as y } from "react";
const l = (t) => {
  if (!t)
    return {
      days: 0,
      hours: 0,
      minutes: 0,
      seconds: 0,
      count: 0
    };
  const s = Math.floor(t / 86400), d = Math.floor(t % 86400 / 3600), e = Math.floor(t % 3600 / 60), u = Math.floor(t % 60);
  return { days: s, hours: d, minutes: e, seconds: u, count: t };
}, g = (...t) => {
  const s = (typeof t[0] == "number" ? t[0] : t[0]?.initialTime) ?? 0, e = (typeof t[0] == "number" ? t[1] : t[0])?.immediately ?? !1, [u, i] = f(l(s)), [c, r] = f(!e && !s);
  return y(() => {
    if (c) return;
    const a = () => {
      i((n) => {
        const o = n.count + 1;
        return o % 60 === 0 ? {
          ...n,
          minutes: n.minutes + 1,
          seconds: 0,
          count: o
        } : o % (60 * 60) === 0 ? {
          ...n,
          hours: n.hours + 1,
          minutes: 0,
          seconds: 0,
          count: o
        } : o % (60 * 60 * 24) === 0 ? {
          ...n,
          days: n.days + 1,
          hours: 0,
          minutes: 0,
          seconds: 0,
          count: o
        } : {
          ...n,
          seconds: n.seconds + 1,
          count: o
        };
      });
    }, h = setInterval(() => a(), 1e3);
    return () => clearInterval(h);
  }, [c]), {
    ...u,
    paused: c,
    pause: () => r(!0),
    start: () => r(!1),
    reset: () => i(l(s)),
    toggle: () => r((a) => !a)
  };
};
export {
  g as useStopwatch
};
//# sourceMappingURL=useStopwatch.mjs.map
