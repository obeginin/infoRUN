import { useState as s, useEffect as v } from "react";
const o = () => navigator?.connection || navigator?.mozConnection || navigator?.webkitConnection, d = () => {
  const [i, a] = s(() => {
    if (typeof navigator > "u")
      return {
        online: !1,
        type: void 0,
        effectiveType: void 0,
        saveData: !1,
        downlink: 0,
        downlinkMax: 0,
        rtt: 0
      };
    const n = navigator.onLine, e = o();
    return {
      online: n,
      downlink: e?.downlink,
      downlinkMax: e?.downlinkMax,
      effectiveType: e?.effectiveType,
      rtt: e?.rtt,
      saveData: e?.saveData,
      type: e?.type
    };
  });
  return v(() => {
    const n = () => {
      const r = navigator.onLine, t = o();
      a({
        online: r,
        downlink: t?.downlink,
        downlinkMax: t?.downlinkMax,
        effectiveType: t?.effectiveType,
        rtt: t?.rtt,
        saveData: t?.saveData,
        type: t?.type
      });
    };
    window.addEventListener("online", n, { passive: !0 }), window.addEventListener("offline", n, { passive: !0 });
    const e = o();
    return e && e.addEventListener("change", n, { passive: !0 }), () => {
      window.removeEventListener("online", n), window.removeEventListener("offline", n), e && e.removeEventListener("change", n);
    };
  }), i;
};
export {
  o as getConnection,
  d as useNetwork
};
//# sourceMappingURL=useNetwork.mjs.map
