import { createContext as r } from "./helpers/createContext/createContext.mjs";
import { createEventEmitter as s } from "./helpers/createEventEmitter/createEventEmitter.mjs";
import { createReactiveContext as u } from "./helpers/createReactiveContext/createReactiveContext.mjs";
import { createStore as f } from "./helpers/createStore/createStore.mjs";
import { useAsync as a } from "./hooks/useAsync/useAsync.mjs";
import { useLockCallback as n } from "./hooks/useLockCallback/useLockCallback.mjs";
import { useMutation as l } from "./hooks/useMutation/useMutation.mjs";
import { useOptimistic as E } from "./hooks/useOptimistic/useOptimistic.mjs";
import { useQuery as d } from "./hooks/useQuery/useQuery.mjs";
import { useAudio as P } from "./hooks/useAudio/useAudio.mjs";
import { useBattery as R } from "./hooks/useBattery/useBattery.mjs";
import { useBluetooth as A } from "./hooks/useBluetooth/useBluetooth.mjs";
import { useBroadcastChannel as O } from "./hooks/useBroadcastChannel/useBroadcastChannel.mjs";
import { useClipboard as v } from "./hooks/useClipboard/useClipboard.mjs";
import { useCopy as h } from "./hooks/useCopy/useCopy.mjs";
import { useCssVar as L } from "./hooks/useCssVar/useCssVar.mjs";
import { useDisplayMedia as N } from "./hooks/useDisplayMedia/useDisplayMedia.mjs";
import { useDocumentTitle as B } from "./hooks/useDocumentTitle/useDocumentTitle.mjs";
import { useEventSource as F } from "./hooks/useEventSource/useEventSource.mjs";
import { useEyeDropper as V } from "./hooks/useEyeDropper/useEyeDropper.mjs";
import { useFavicon as H } from "./hooks/useFavicon/useFavicon.mjs";
import { useFps as G } from "./hooks/useFps/useFps.mjs";
import { useFullscreen as z } from "./hooks/useFullscreen/useFullscreen.mjs";
import { mapGamepadToXbox360Controller as q, useGamepad as Z } from "./hooks/useGamepad/useGamepad.mjs";
import { useGeolocation as J } from "./hooks/useGeolocation/useGeolocation.mjs";
import { timeRangeToArray as $, useMediaControls as ee } from "./hooks/useMediaControls/useMediaControls.mjs";
import { useMemory as re } from "./hooks/useMemory/useMemory.mjs";
import { getConnection as se, useNetwork as me } from "./hooks/useNetwork/useNetwork.mjs";
import { useOnline as pe } from "./hooks/useOnline/useOnline.mjs";
import { useOtpCredential as xe } from "./hooks/useOtpCredential/useOtpCredential.mjs";
import { usePermission as ie } from "./hooks/usePermission/usePermission.mjs";
import { usePictureInPicture as ce } from "./hooks/usePictureInPicture/usePictureInPicture.mjs";
import { usePointerLock as Se } from "./hooks/usePointerLock/usePointerLock.mjs";
import { usePostMessage as Te } from "./hooks/usePostMessage/usePostMessage.mjs";
import { useRaf as ge } from "./hooks/useRaf/useRaf.mjs";
import { useShare as Ce } from "./hooks/useShare/useShare.mjs";
import { getSpeechRecognition as Ie, useSpeechRecognition as Ae } from "./hooks/useSpeechRecognition/useSpeechRecognition.mjs";
import { useSpeechSynthesis as Oe } from "./hooks/useSpeechSynthesis/useSpeechSynthesis.mjs";
import { useVibrate as ve } from "./hooks/useVibrate/useVibrate.mjs";
import { useWakeLock as he } from "./hooks/useWakeLock/useWakeLock.mjs";
import { useWebSocket as Le } from "./hooks/useWebSocket/useWebSocket.mjs";
import { useLogger as Ne } from "./hooks/useLogger/useLogger.mjs";
import { useRenderCount as Be } from "./hooks/useRenderCount/useRenderCount.mjs";
import { useRenderInfo as Fe } from "./hooks/useRenderInfo/useRenderInfo.mjs";
import { useRerender as Ve } from "./hooks/useRerender/useRerender.mjs";
import { useActiveElement as He } from "./hooks/useActiveElement/useActiveElement.mjs";
import { useAutoScroll as Ge } from "./hooks/useAutoScroll/useAutoScroll.mjs";
import { useClickOutside as ze } from "./hooks/useClickOutside/useClickOutside.mjs";
import { DEFAULT_THRESHOLD_TIME as qe, useDoubleClick as Ze } from "./hooks/useDoubleClick/useDoubleClick.mjs";
import { useDropZone as Je } from "./hooks/useDropZone/useDropZone.mjs";
import { useFileDialog as $e } from "./hooks/useFileDialog/useFileDialog.mjs";
import { useFocus as oo } from "./hooks/useFocus/useFocus.mjs";
import { useHover as to } from "./hooks/useHover/useHover.mjs";
import { useImage as mo } from "./hooks/useImage/useImage.mjs";
import { useLongPress as po } from "./hooks/useLongPress/useLongPress.mjs";
import { Paint as xo, Pointer as ao, usePaint as io } from "./hooks/usePaint/usePaint.mjs";
import { SCRIPT_STATUS_ATTRIBUTE_NAME as co, useScript as lo } from "./hooks/useScript/useScript.mjs";
import { useSticky as Eo } from "./hooks/useSticky/useSticky.mjs";
import { useTextDirection as go } from "./hooks/useTextDirection/useTextDirection.mjs";
import { useFul as Co } from "./hooks/useFul/useFul.mjs";
import { useLess as Io } from "./hooks/useLess/useLess.mjs";
import { useOnce as yo } from "./hooks/useOnce/useOnce.mjs";
import { useDidUpdate as ko } from "./hooks/useDidUpdate/useDidUpdate.mjs";
import { useIsFirstRender as _o } from "./hooks/useIsFirstRender/useIsFirstRender.mjs";
import { useIsomorphicLayoutEffect as Do } from "./hooks/useIsomorphicLayoutEffect/useIsomorphicLayoutEffect.mjs";
import { useMount as Mo } from "./hooks/useMount/useMount.mjs";
import { deepEqual as bo, useShallowEffect as Bo } from "./hooks/useShallowEffect/useShallowEffect.mjs";
import { useUnmount as Fo } from "./hooks/useUnmount/useUnmount.mjs";
import { BREAKPOINTS_ANT_DESIGN as Vo, BREAKPOINTS_BOOTSTRAP_V5 as wo, BREAKPOINTS_MANTINE as Ho, BREAKPOINTS_MASTER_CSS as Wo, BREAKPOINTS_MATERIAL_UI as Go, BREAKPOINTS_PRIME_FLEX as Qo, BREAKPOINTS_QUASAR_V2 as zo, BREAKPOINTS_SEMANTIC as Xo, BREAKPOINTS_TAILWIND as qo, useBreakpoints as Zo } from "./hooks/useBreakpoints/useBreakpoints.mjs";
import { useDeviceMotion as Jo } from "./hooks/useDeviceMotion/useDeviceMotion.mjs";
import { useDeviceOrientation as $o } from "./hooks/useDeviceOrientation/useDeviceOrientation.mjs";
import { useDevicePixelRatio as or } from "./hooks/useDevicePixelRatio/useDevicePixelRatio.mjs";
import { useDocumentEvent as tr } from "./hooks/useDocumentEvent/useDocumentEvent.mjs";
import { useDocumentVisibility as mr } from "./hooks/useDocumentVisibility/useDocumentVisibility.mjs";
import { useElementSize as pr } from "./hooks/useElementSize/useElementSize.mjs";
import { useEventListener as xr } from "./hooks/useEventListener/useEventListener.mjs";
import { isHotkeyMatch as ir, useHotkeys as nr } from "./hooks/useHotkeys/useHotkeys.mjs";
import { useIdle as lr } from "./hooks/useIdle/useIdle.mjs";
import { useInfiniteScroll as Er } from "./hooks/useInfiniteScroll/useInfiniteScroll.mjs";
import { useIntersectionObserver as dr } from "./hooks/useIntersectionObserver/useIntersectionObserver.mjs";
import { useKeyboard as Pr } from "./hooks/useKeyboard/useKeyboard.mjs";
import { useKeyPress as Rr } from "./hooks/useKeyPress/useKeyPress.mjs";
import { useKeyPressEvent as Ar } from "./hooks/useKeyPressEvent/useKeyPressEvent.mjs";
import { useKeysPressed as Or } from "./hooks/useKeysPressed/useKeysPressed.mjs";
import { useLockScroll as vr } from "./hooks/useLockScroll/useLockScroll.mjs";
import { useMeasure as hr } from "./hooks/useMeasure/useMeasure.mjs";
import { useMediaQuery as Lr } from "./hooks/useMediaQuery/useMediaQuery.mjs";
import { useMouse as Nr } from "./hooks/useMouse/useMouse.mjs";
import { useMutationObserver as Br } from "./hooks/useMutationObserver/useMutationObserver.mjs";
import { useOrientation as Fr } from "./hooks/useOrientation/useOrientation.mjs";
import { usePageLeave as Vr } from "./hooks/usePageLeave/usePageLeave.mjs";
import { useParallax as Hr } from "./hooks/useParallax/useParallax.mjs";
import { usePerformanceObserver as Gr } from "./hooks/usePerformanceObserver/usePerformanceObserver.mjs";
import { useResizeObserver as zr } from "./hooks/useResizeObserver/useResizeObserver.mjs";
import { useScroll as qr } from "./hooks/useScroll/useScroll.mjs";
import { useScrollIntoView as jr } from "./hooks/useScrollIntoView/useScrollIntoView.mjs";
import { useScrollTo as Yr } from "./hooks/useScrollTo/useScrollTo.mjs";
import { getRangesSelection as et, useTextSelection as ot } from "./hooks/useTextSelection/useTextSelection.mjs";
import { useWindowEvent as tt } from "./hooks/useWindowEvent/useWindowEvent.mjs";
import { useWindowFocus as mt } from "./hooks/useWindowFocus/useWindowFocus.mjs";
import { scrollTo as pt, useWindowScroll as ft } from "./hooks/useWindowScroll/useWindowScroll.mjs";
import { useWindowSize as at } from "./hooks/useWindowSize/useWindowSize.mjs";
import { useBoolean as nt } from "./hooks/useBoolean/useBoolean.mjs";
import { COOKIE_EVENT as lt, dispatchCookieEvent as St, getCookie as Et, getCookies as Tt, removeCookie as dt, removeCookieItem as gt, setCookie as Pt, setCookieItem as Ct, useCookie as Rt } from "./hooks/useCookie/useCookie.mjs";
import { clearCookies as At, useCookies as yt } from "./hooks/useCookies/useCookies.mjs";
import { useCounter as kt } from "./hooks/useCounter/useCounter.mjs";
import { useDefault as _t } from "./hooks/useDefault/useDefault.mjs";
import { useDisclosure as Dt } from "./hooks/useDisclosure/useDisclosure.mjs";
import { useField as Mt } from "./hooks/useField/useField.mjs";
import { useHash as bt } from "./hooks/useHash/useHash.mjs";
import { useList as Kt } from "./hooks/useList/useList.mjs";
import { useLocalStorage as Ut } from "./hooks/useLocalStorage/useLocalStorage.mjs";
import { useMap as wt } from "./hooks/useMap/useMap.mjs";
import { useOffsetPagination as Wt } from "./hooks/useOffsetPagination/useOffsetPagination.mjs";
import { useQueue as Qt } from "./hooks/useQueue/useQueue.mjs";
import { useRafState as Xt } from "./hooks/useRafState/useRafState.mjs";
import { useRefState as Zt } from "./hooks/useRefState/useRefState.mjs";
import { useSessionStorage as Jt } from "./hooks/useSessionStorage/useSessionStorage.mjs";
import { useSet as $t } from "./hooks/useSet/useSet.mjs";
import { stateHistoryReducer as os, useStateHistory as rs } from "./hooks/useStateHistory/useStateHistory.mjs";
import { useStep as ss } from "./hooks/useStep/useStep.mjs";
import { STORAGE_EVENT as us, dispatchStorageEvent as ps, useStorage as fs } from "./hooks/useStorage/useStorage.mjs";
import { useToggle as as } from "./hooks/useToggle/useToggle.mjs";
import { URL_SEARCH_PARAMS_EVENT as ns, createQueryString as cs, dispatchUrlSearchParamsEvent as ls, getUrlSearchParams as Ss, useUrlSearchParam as Es } from "./hooks/useUrlSearchParam/useUrlSearchParam.mjs";
import { useUrlSearchParams as ds } from "./hooks/useUrlSearchParams/useUrlSearchParams.mjs";
import { useWizard as Ps } from "./hooks/useWizard/useWizard.mjs";
import { useInterval as Rs } from "./hooks/useInterval/useInterval.mjs";
import { useStopwatch as As } from "./hooks/useStopwatch/useStopwatch.mjs";
import { useTime as Os } from "./hooks/useTime/useTime.mjs";
import { useTimeout as vs } from "./hooks/useTimeout/useTimeout.mjs";
import { getTimeFromSeconds as hs, useTimer as Ds } from "./hooks/useTimer/useTimer.mjs";
import { useBrowserLanguage as Ms } from "./hooks/useBrowserLanguage/useBrowserLanguage.mjs";
import { getOperatingSystem as bs, useOperatingSystem as Bs } from "./hooks/useOperatingSystem/useOperatingSystem.mjs";
import { usePreferredColorScheme as Fs } from "./hooks/usePreferredColorScheme/usePreferredColorScheme.mjs";
import { usePreferredContrast as Vs } from "./hooks/usePreferredContrast/usePreferredContrast.mjs";
import { usePreferredDark as Hs } from "./hooks/usePreferredDark/usePreferredDark.mjs";
import { usePreferredLanguages as Gs } from "./hooks/usePreferredLanguages/usePreferredLanguages.mjs";
import { usePreferredReducedMotion as zs } from "./hooks/usePreferredReducedMotion/usePreferredReducedMotion.mjs";
import { useConst as qs } from "./hooks/useConst/useConst.mjs";
import { useDebounceCallback as js } from "./hooks/useDebounceCallback/useDebounceCallback.mjs";
import { useDebounceValue as Ys } from "./hooks/useDebounceValue/useDebounceValue.mjs";
import { useEvent as em } from "./hooks/useEvent/useEvent.mjs";
import { useLastChanged as rm } from "./hooks/useLastChanged/useLastChanged.mjs";
import { useLatest as sm } from "./hooks/useLatest/useLatest.mjs";
import { usePrevious as um } from "./hooks/usePrevious/usePrevious.mjs";
import { useThrottleCallback as fm } from "./hooks/useThrottleCallback/useThrottleCallback.mjs";
import { useThrottleValue as am } from "./hooks/useThrottleValue/useThrottleValue.mjs";
import { copy as nm, legacyCopyToClipboard as cm } from "./utils/helpers/copy.mjs";
import { debounce as Sm } from "./utils/helpers/debounce.mjs";
import { getDate as Tm } from "./utils/helpers/getDate.mjs";
import { getElement as gm, target as Pm, targetSymbol as Cm } from "./utils/helpers/getElement.mjs";
import { getRetry as Im } from "./utils/helpers/getRetry.mjs";
import { isTarget as ym } from "./utils/helpers/isTarget.mjs";
import { throttle as km } from "./utils/helpers/throttle.mjs";
export {
  Vo as BREAKPOINTS_ANT_DESIGN,
  wo as BREAKPOINTS_BOOTSTRAP_V5,
  Ho as BREAKPOINTS_MANTINE,
  Wo as BREAKPOINTS_MASTER_CSS,
  Go as BREAKPOINTS_MATERIAL_UI,
  Qo as BREAKPOINTS_PRIME_FLEX,
  zo as BREAKPOINTS_QUASAR_V2,
  Xo as BREAKPOINTS_SEMANTIC,
  qo as BREAKPOINTS_TAILWIND,
  lt as COOKIE_EVENT,
  qe as DEFAULT_THRESHOLD_TIME,
  xo as Paint,
  ao as Pointer,
  co as SCRIPT_STATUS_ATTRIBUTE_NAME,
  us as STORAGE_EVENT,
  ns as URL_SEARCH_PARAMS_EVENT,
  At as clearCookies,
  nm as copy,
  r as createContext,
  s as createEventEmitter,
  cs as createQueryString,
  u as createReactiveContext,
  f as createStore,
  Sm as debounce,
  bo as deepEqual,
  St as dispatchCookieEvent,
  ps as dispatchStorageEvent,
  ls as dispatchUrlSearchParamsEvent,
  se as getConnection,
  Et as getCookie,
  Tt as getCookies,
  Tm as getDate,
  gm as getElement,
  bs as getOperatingSystem,
  et as getRangesSelection,
  Im as getRetry,
  Ie as getSpeechRecognition,
  hs as getTimeFromSeconds,
  Ss as getUrlSearchParams,
  ir as isHotkeyMatch,
  ym as isTarget,
  cm as legacyCopyToClipboard,
  q as mapGamepadToXbox360Controller,
  dt as removeCookie,
  gt as removeCookieItem,
  pt as scrollTo,
  Pt as setCookie,
  Ct as setCookieItem,
  os as stateHistoryReducer,
  Pm as target,
  Cm as targetSymbol,
  km as throttle,
  $ as timeRangeToArray,
  He as useActiveElement,
  a as useAsync,
  P as useAudio,
  Ge as useAutoScroll,
  R as useBattery,
  A as useBluetooth,
  nt as useBoolean,
  Zo as useBreakpoints,
  O as useBroadcastChannel,
  Ms as useBrowserLanguage,
  ze as useClickOutside,
  v as useClipboard,
  qs as useConst,
  Rt as useCookie,
  yt as useCookies,
  h as useCopy,
  kt as useCounter,
  L as useCssVar,
  js as useDebounceCallback,
  Ys as useDebounceValue,
  _t as useDefault,
  Jo as useDeviceMotion,
  $o as useDeviceOrientation,
  or as useDevicePixelRatio,
  ko as useDidUpdate,
  Dt as useDisclosure,
  N as useDisplayMedia,
  tr as useDocumentEvent,
  B as useDocumentTitle,
  mr as useDocumentVisibility,
  Ze as useDoubleClick,
  Je as useDropZone,
  pr as useElementSize,
  em as useEvent,
  xr as useEventListener,
  F as useEventSource,
  V as useEyeDropper,
  H as useFavicon,
  Mt as useField,
  $e as useFileDialog,
  oo as useFocus,
  G as useFps,
  Co as useFul,
  z as useFullscreen,
  Z as useGamepad,
  J as useGeolocation,
  bt as useHash,
  nr as useHotkeys,
  to as useHover,
  lr as useIdle,
  mo as useImage,
  Er as useInfiniteScroll,
  dr as useIntersectionObserver,
  Rs as useInterval,
  _o as useIsFirstRender,
  Do as useIsomorphicLayoutEffect,
  Rr as useKeyPress,
  Ar as useKeyPressEvent,
  Pr as useKeyboard,
  Or as useKeysPressed,
  rm as useLastChanged,
  sm as useLatest,
  Io as useLess,
  Kt as useList,
  Ut as useLocalStorage,
  n as useLockCallback,
  vr as useLockScroll,
  Ne as useLogger,
  po as useLongPress,
  wt as useMap,
  hr as useMeasure,
  ee as useMediaControls,
  Lr as useMediaQuery,
  re as useMemory,
  Mo as useMount,
  Nr as useMouse,
  l as useMutation,
  Br as useMutationObserver,
  me as useNetwork,
  Wt as useOffsetPagination,
  yo as useOnce,
  pe as useOnline,
  Bs as useOperatingSystem,
  E as useOptimistic,
  Fr as useOrientation,
  xe as useOtpCredential,
  Vr as usePageLeave,
  io as usePaint,
  Hr as useParallax,
  Gr as usePerformanceObserver,
  ie as usePermission,
  ce as usePictureInPicture,
  Se as usePointerLock,
  Te as usePostMessage,
  Fs as usePreferredColorScheme,
  Vs as usePreferredContrast,
  Hs as usePreferredDark,
  Gs as usePreferredLanguages,
  zs as usePreferredReducedMotion,
  um as usePrevious,
  d as useQuery,
  Qt as useQueue,
  ge as useRaf,
  Xt as useRafState,
  Zt as useRefState,
  Be as useRenderCount,
  Fe as useRenderInfo,
  Ve as useRerender,
  zr as useResizeObserver,
  lo as useScript,
  qr as useScroll,
  jr as useScrollIntoView,
  Yr as useScrollTo,
  Jt as useSessionStorage,
  $t as useSet,
  Bo as useShallowEffect,
  Ce as useShare,
  Ae as useSpeechRecognition,
  Oe as useSpeechSynthesis,
  rs as useStateHistory,
  ss as useStep,
  Eo as useSticky,
  As as useStopwatch,
  fs as useStorage,
  go as useTextDirection,
  ot as useTextSelection,
  fm as useThrottleCallback,
  am as useThrottleValue,
  Os as useTime,
  vs as useTimeout,
  Ds as useTimer,
  as as useToggle,
  Fo as useUnmount,
  Es as useUrlSearchParam,
  ds as useUrlSearchParams,
  ve as useVibrate,
  he as useWakeLock,
  Le as useWebSocket,
  tt as useWindowEvent,
  mt as useWindowFocus,
  ft as useWindowScroll,
  at as useWindowSize,
  Ps as useWizard
};
//# sourceMappingURL=index.mjs.map
